<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>king</title>
  <icon>https://www.gravatar.com/avatar/b632fbfcb6a73936c984516f7ef7880e</icon>
  <subtitle>一个有趣的博客</subtitle>
  <link href="http://sjhfuigashgrs.github.io/atom.xml" rel="self"/>
  
  <link href="http://sjhfuigashgrs.github.io/"/>
  <updated>2022-10-16T17:28:04.447Z</updated>
  <id>http://sjhfuigashgrs.github.io/</id>
  
  <author>
    <name>king</name>
    <email>3511896104@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>最实用的JavaScript一行代码</title>
    <link href="http://sjhfuigashgrs.github.io/posts/8bf2.html"/>
    <id>http://sjhfuigashgrs.github.io/posts/8bf2.html</id>
    <published>2022-09-28T16:29:47.000Z</published>
    <updated>2022-10-16T17:28:04.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="tip info"><p>Talk is cheap, show me the code!<br>很简单：用简单的逻辑和尽可能少的代码行来解决一个复杂的问题。随着 ES6 箭头函数的引入，可以创建看起来优雅而简单的单行代码。<br>在今天的文章中，我将与你一起来学习 11 个罕见但功能强大的单行代码。现在，准备好，让我们开始吧！</p></div><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><div class="tip warning faa-horizontal animated-hover"><p>获取字符串中的字符数</p></div><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">characterCount</span> = (<span class="params">str, char</span>) =&gt; str.<span class="title function_">split</span>(char).<span class="property">length</span> - <span class="number">1</span>;</span><br></pre></td></tr></table></figure><blockquote><p>获取字符数是一个有用的实用程序，在许多情况下都很有用，我们可以使用它来获取空格数和随后的单词数，或者这可用于获取字符串中某个分隔符的计数。<br>这个想法很简单，我们使用传递的参数 char 拆分字符串并获取返回数组的长度。由于每次将字符串拆分，都会比拆分器多一个；所以减去 1，我们有一个 characterCount 单行。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>检查对象是否为空</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">isEmpty</span> = obj =&gt; <span class="title class_">Reflect</span>.<span class="title function_">ownKeys</span>(obj).<span class="property">length</span> === <span class="number">0</span> &amp;&amp; obj.<span class="property">constructor</span> === <span class="title class_">Object</span>;</span><br></pre></td></tr></table></figure><blockquote><p>检查对象的空性实际上比看起来要困难得多，即使对象为空，每次检查对象是否等于 {} 也会返回 false。<br>幸运的是，下面的单行代码正是我们想要的。<br>在这一行中，我们检查对象的键长度是否等于 0，以及传递的参数是否为实际对象。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>等待一段时间再执行</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">wait</span> = <span class="keyword">async</span> milliseconds =&gt; <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, milliseconds));</span><br></pre></td></tr></table></figure><blockquote><p>在这一行中，我们将通过一些异步编程来弄脏我们的代码。这个想法很简单，在运行代码时，如果你想等待一定的时间，这里是等待单行<br>在等待单行中，我们创建一个承诺并在给定的时间后使用 setTimeout 函数解决它。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>获取两个日期之间的日差</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">daysBetween</span> = (<span class="params">date1, date2</span>) =&gt; <span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(date1 - date2) / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>));</span><br></pre></td></tr></table></figure><blockquote><p>在开发 Web 应用程序时，日期通常是实现起来最令人困惑的部分，因为有许多概念很容易被误算。<br>这是一个强大的单线计算两个日期之间的天差。但还有更多事情要做，正如我所做的那样，你可以创建自己的单线来计算月、年差异等。</p><p>这种单线背后的逻辑很容易理解。当两个日期相减时，返回值是以毫秒为单位的差值，要将毫秒转换为天，我们必须将其除以毫秒、秒、分钟和小时。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>检查设备上的触摸支持</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">touchSupported</span> = (<span class="params"></span>) =&gt;</span><br><span class="line">    <span class="string">&#x27;ontouchstart&#x27;</span> <span class="keyword">in</span> <span class="variable language_">window</span> || (<span class="title class_">DocumentTouch</span> &amp;&amp; <span class="variable language_">document</span> <span class="keyword">instanceof</span> <span class="title class_">DocumentTouch</span>);</span><br></pre></td></tr></table></figure><blockquote><p>随着可以连接到互联网的设备越来越多，创建响应式网站的必要性也在增加。20 年前，开发者应该考虑网站的桌面版本，但今天超过 50% 的网络流量来自触摸移动设备。因此，基于设备的触控支持采取一些行动是一个非常重要的概念。<br>在这一行中，我们正在检查文档是否支持 touchstart 事件。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>在元素后插入 HTML 字符串</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">insertHTMLAfter</span> = (<span class="params">html, el</span>) =&gt; el.<span class="title function_">insertAdjacentHTML</span>(<span class="string">&#x27;afterend&#x27;</span>, html);</span><br></pre></td></tr></table></figure><blockquote><p>开发 Web 应用程序时，使用 JavaScript 更新 DOM 是一件很常见的事情。有一些基本的方法可以完成工作，但是，当情况变得复杂时，就很难克服。<br>这是一个在 HTML 元素之后立即注入 HTML 字符串的单行代码。经过几分钟的思考和谷歌搜索，我相信你可以找到这个单线的以前版本。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>随机排列数组</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">shuffle</span> = arr =&gt; arr.<span class="title function_">sort</span>(<span class="function">() =&gt;</span> <span class="number">0.5</span> - <span class="title class_">Math</span>.<span class="title function_">random</span>());</span><br></pre></td></tr></table></figure><blockquote><p>在开发中打乱一组数据是一个常见的情况，你可以随时遇到，不幸的是，JavaScript 中没有内置数组的 shuffle 方法。<br>但是，这里有一个你可以每天使用的 shuffle one-liner<br>它利用数组的排序方法，在数组的前一个元素之前或之后随机排序。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>获取随机布尔值</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getRandomBoolean</span> = (<span class="params"></span>) =&gt; <span class="title class_">Math</span>.<span class="title function_">random</span>() &gt;= <span class="number">0.5</span>;</span><br></pre></td></tr></table></figure><blockquote><p>在开发时，尤其是在写游戏代码时，有时，我们会想随机采取行动。在这些情况下，下面的单行代码非常方便。<br>上面的单行代码有 50/50 的机会返回真或假。因为生成的随机数大于 0.5 的概率等于变小的概率。</p><p>然而，例如，如果你想得到一个概率为 70% 的随机布尔值，那么你可以简单地将 0.5 更改为 0.7 等等。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>计算数组的平均值</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">average</span> = arr =&gt; arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b) / arr.<span class="property">length</span>;</span><br></pre></td></tr></table></figure><blockquote><p>可以使用多种方法计算数组的平均值。但逻辑对所有人都是一样的，我们必须得到数组及其长度的总和；然后，通过除法给出平均值。<br>在平均单行中，我们使用 reduce 来获取一行中数组的总和，而不是使用循环。然后，我们将它除以数组长度，这是一个数组的平均值。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>每隔 4 个空 1 格美团卷码</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">[...<span class="string">&#x27;088896520132&#x27;</span>].<span class="title function_">reduce</span>(<span class="function">(<span class="params">res, itm, idx</span>) =&gt;</span> (res += idx % <span class="number">4</span> === <span class="number">1</span> ? <span class="string">`<span class="subst">$&#123;itm&#125;</span> `</span> : itm), <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="comment">// 08 8896 5201 32</span></span><br></pre></td></tr></table></figure><p>转载: <a href="https://www.vvhan.com/practical-js.html">韩小韩</a><br><div class="note info simple"><p>END</p></div></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;div class=&quot;tip info&quot;&gt;&lt;p&gt;Talk is cheap, show me the code!&lt;br&gt;很简单：用简单的逻辑和尽</summary>
      
    
    
    
    
    <category term="Js" scheme="http://sjhfuigashgrs.github.io/tags/Js/"/>
    
    <category term="前端" scheme="http://sjhfuigashgrs.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>侧边栏标签修改</title>
    <link href="http://sjhfuigashgrs.github.io/posts/de85.html"/>
    <id>http://sjhfuigashgrs.github.io/posts/de85.html</id>
    <published>2022-09-21T14:30:27.000Z</published>
    <updated>2022-10-16T17:28:04.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>逛别人博客时经常看见标签页后面加了一个数量，起初因为懒没弄，但是最近几天感觉标签确实有一点的不好看，于是决定改一下。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><div class="note info simple"><div class="hide-block"><button type="button" class="hide-button" style="">预览效果    </button><div class="hide-content"><div class="img-wrap"><div class="img-bg"><img class="img" src="https://image.anzhiy.cn/adminuploads/1/2022/09/03/6312d3e52835c.webp"/></div></div></div></div></div><details class="folding-tag" cyan><summary> 点击查看参考教程 </summary>              <div class='content'>              <p>基于安知鱼方案进行修改</p><div class="table-container"><table><thead><tr><th><strong>参考方向</strong></th><th><strong>教程原贴</strong></th></tr></thead><tbody><tr><td>安知鱼原教程</td><td><a href="https://anzhiy.cn/posts/7d58.html">侧边栏标签修改</a></td></tr></tbody></table></div>              </div>            </details><details class="folding-tag" cyan><summary> 点击查看侧边栏标签修改魔改教程 </summary>              <div class='content'>              <div class="tabs" id="card_tags"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#card_tags-1">page.js</button></li><li class="tab"><button type="button" data-href="#card_tags-2">css</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="card_tags-1"><p><strong>打开 <span class='p red'>butterfly\scripts\helpers\page.js</span> 文件</strong></p><p><strong>如果你只是想添加一个数量的话，在第 52 行的<span class='p red'>${tag.name}</span> 后增加 <span class='p red'>(${tag.length})</span> ,如下:</strong></p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">  const length = sizes.length - 1</span><br><span class="line"><span class="deletion">- source.forEach(tag =&gt; &#123;</span></span><br><span class="line"><span class="addition">+ source.sort(&#x27;name&#x27;).forEach(tag =&gt; &#123;</span></span><br><span class="line">    const ratio = length ? sizes.indexOf(tag.length) / length : 0</span><br><span class="line">    const size = minfontsize + ((maxfontsize - minfontsize) * ratio)</span><br><span class="line">    let style = `font-size: $&#123;parseFloat(size.toFixed(2))&#125;$&#123;unit&#125;;`</span><br><span class="line">    const color = &#x27;rgb(&#x27; + Math.floor(Math.random() * 201) + &#x27;, &#x27; + Math.floor(Math.random() * 201) + &#x27;, &#x27; + Math.floor(Math.random() * 201) + &#x27;)&#x27; // 0,0,0 -&gt; 200,200,200</span><br><span class="line">    style += ` color: $&#123;color&#125;`</span><br><span class="line"><span class="deletion">-   result += `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;/a&gt;`</span></span><br><span class="line"><span class="addition">+   result += `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;sup&gt;$&#123;tag.length&#125;&lt;/sup&gt;&lt;/a&gt;`</span></span><br><span class="line">  &#125;)</span><br><span class="line">  return result</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="card_tags-2"><p><strong>加入以下 css</strong></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* tags样式 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--anzhiyu-fontcolor) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.05rem</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--anzhiyu-theme);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--anzhiyu-white) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--anzhiyu-shadow-theme);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">1300px</span>) &#123;</span><br><span class="line">    <span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.03</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.97</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span> <span class="selector-tag">sup</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.4</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><del>当然,你也可以按照自己的需要来书写 css 样式.</del></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><h2 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h2><p>我自己魔改时遇到的一个 <span class='p blue'>bug</span>。</p><p>修改了 <span class='p gray'>page.js</span> 文件,但是并没有起到效果;就很头痛!</p><blockquote><del>修改方案:</del></blockquote><p>打开文件 <mark class="hl-label orange">=>\node_modules\hexo\lib\plugins\helper\tagcloud.js</mark> </p><p>找到有关于标签 html 属性生成的代码，并添加 <mark class="hl-label orange">${tag.length}</mark>  后执行 hexo 三连。</p><p><img src="https://img.wwery.com/Sugar/8vVjkPng.png" alt=""></p><u>最终解决问题!</u>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;逛别人博客时经常看见标签页后面加了一个数量，起初因为懒没弄，但是最近几天感觉标签确实有一点的不好看，于是决定改一下。&lt;/p&gt;
&lt;h2 id=</summary>
      
    
    
    
    
    <category term="随笔" scheme="http://sjhfuigashgrs.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="hexo" scheme="http://sjhfuigashgrs.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>何为框架</title>
    <link href="http://sjhfuigashgrs.github.io/posts/9968.html"/>
    <id>http://sjhfuigashgrs.github.io/posts/9968.html</id>
    <published>2022-09-14T15:28:35.000Z</published>
    <updated>2022-10-16T17:28:04.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p><strong>何为框架？为什么要学习框架技术？</strong></p></blockquote><p><em>本文将会围绕这个问题展开！</em></p><h2 id="框架的概念及作用"><a href="#框架的概念及作用" class="headerlink" title="框架的概念及作用"></a>框架的概念及作用</h2><blockquote><p><strong>概念：</strong></p></blockquote><ul><li><p>框架（Framework）是一种警告校验的、具有特定功能的半成品软件。</p></li><li><p>框架针对特定的功能或架构需要，对基础代码进行了封装并提供了相应的 <strong>API</strong> ，不同的框架能够提供不同的功能。</p></li><li><p>框架虽然可以实现特定功能，但又不是一套完整可运行的程序。</p></li><li><p>开发者需要在框架提供的功能或架构基础上，加入具体的业务逻辑，从而开发出一套自己的应用软件。</p></li></ul><blockquote><p><strong>作用：</strong></p></blockquote><ul><li>使用框架可以节省大量基础代码的编写工作，从而提高开发效率和开放速度。</li><li>为构建新的应用程序提供了极大的便利。</li><li>基于框架开发应用程序，框架就是应用的 <strong>“骨干”</strong> ，开发人员可以在这个 <strong>“骨干”</strong> 上添加自己的东西，组合出符合自己需要的应用程序。</li><li>框架提供了可以拿来即用的工具，更重要的是，框架提供了优秀的、可重用的设计。<strong>就如同想要制作一份看起来具有专业水准的 PPT 演示文稿 ，最便捷有效的方法就是使用 PPT 模板</strong> ，使用模板创建出来的 PPT 以及具有良好的设计风格，我们只需要把必要的信息套用进去即可。</li></ul><blockquote><p><strong>基于模板制作的 PPT 的优点：</strong></p></blockquote><ol><li>不必考虑布局、配色的等设计相关的专业问题，降低了制作难度。</li><li>可以专注于文档的内容，提高了效率。</li><li>新手也可以快速上手。</li></ol><p>此外，框架还有另一层面的价值，它使混乱的东西变的结构化、规范化。正如 <code>WebWork</code> 作者 <code>JBoos</code> 架构师 <code>Rickaed Oberg</code> 所说： <strong>“框架的强大之处不是源自它能让你做什么，而是它不能让你做什么”。</strong> 如果没有框架的话，N 个人将写出 N 中实现代码，且代码质量难免良莠不齐，而框架提供了优秀的架构设计，保证了应用程序的风格统一，且为基础功能提供了优质的实现。</p><p><strong>框架在规范与创新之间维持着合适的平衡，从企业的角度，这降低了人员培训成本，软件开发成本及维护，升级成本….</strong></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p><strong>使用框架技术优势的总结：</strong></p></blockquote><ol><li>无需考虑开发中公共问题、基础问题，框架已经做好了实现。</li><li>库专注于项目的业务逻辑设计，提升开发效率，并且有助于提高核心业务的开发质量。</li><li>项目架构统一，便于沟通协作，便于修改维护。</li><li>框架汇集了软件分析、设计、实现等多方面的优秀经验，可以帮助开发快速构建优美、运行稳定且性能优良的高质量应用。</li></ol>]]></content>
    
    
    <summary type="html">框架（Framework）是一种警告校验的、具有特定功能的半成品软件。</summary>
    
    
    
    <category term="随笔" scheme="http://sjhfuigashgrs.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="技术相关" scheme="http://sjhfuigashgrs.github.io/tags/%E6%8A%80%E6%9C%AF%E7%9B%B8%E5%85%B3/"/>
    
    <category term="随笔" scheme="http://sjhfuigashgrs.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>IE6/IE7不支持first-child的解决办法</title>
    <link href="http://sjhfuigashgrs.github.io/posts/85a2.html"/>
    <id>http://sjhfuigashgrs.github.io/posts/85a2.html</id>
    <published>2022-09-02T15:43:32.000Z</published>
    <updated>2022-10-16T17:28:04.447Z</updated>
    
    <content type="html"><![CDATA[<p><strong>IE6/IE7 不支持 first-child 的解决办法</strong></p><p><strong><em>不废话,上代码！</em></strong></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#sidebar</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">    <span class="attribute">border-top-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#sidebar</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">border-top-width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-top-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#dad3d0</span>;</span><br><span class="line">    *<span class="attribute">border-top-style</span>: <span class="built_in">expression</span>(this.previousSibling == null ? <span class="string">&#x27;none&#x27;</span>: <span class="string">&#x27;solid&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>给你们科普一下 (๑•̀ㅂ•́)و✧）</strong></p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">previousSibling</span>; <span class="comment">// 可以获取到元素的兄节点，如果不存在兄节点，就说明这个元素为第一个节点。而expression是css表达式，可以理解为在css里可以书写javascript语句，那么</span></span><br><span class="line"><span class="title function_">expression</span>(<span class="variable language_">this</span>.<span class="property">previousSibling</span> == <span class="literal">null</span> ? <span class="string">&#x27;none&#x27;</span> : <span class="string">&#x27;solid&#x27;</span>); <span class="comment">// 的意思是，如果这个元素没有兄节点（也就是它是第一个节点），返回none，否则返回solid</span></span><br></pre></td></tr></table></figure><p><em>只有 IE6 和 IE7 能识别此行代码</em></p>]]></content>
    
    
    <summary type="html">IE6/IE7不支持first-child的解决办法</summary>
    
    
    
    <category term="Java" scheme="http://sjhfuigashgrs.github.io/categories/Java/"/>
    
    
    <category term="技术相关" scheme="http://sjhfuigashgrs.github.io/tags/%E6%8A%80%E6%9C%AF%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis框架的缓存</title>
    <link href="http://sjhfuigashgrs.github.io/posts/5c18.html"/>
    <id>http://sjhfuigashgrs.github.io/posts/5c18.html</id>
    <published>2022-09-02T15:37:31.000Z</published>
    <updated>2022-10-16T17:28:04.443Z</updated>
    
    <content type="html"><![CDATA[<p><em>正如大多数框架一样，<code>Mybatis</code> 框架也提供了缓存！</em></p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p><code>Mybatis</code> 框架的缓存分为两个级别。</p><h3 id="一级缓存"><a href="#一级缓存" class="headerlink" title="一级缓存"></a>一级缓存</h3><blockquote><p><strong><code>Mybatis</code> 框架的一级缓存是默认是开启的。</strong></p></blockquote><p><code>Mybatis</code> 框架的一级缓存是基于 <code>PerpetualCache</code> 的 <code>HashMap</code> 本地缓存，默认是 <strong>SqlSession</strong> 级别的缓存，在 <strong>SqlSession</strong> 的生命周期内有效。当 <strong>SqlSession</strong> 关闭后，该 <strong>SqlSession</strong> 中所有的一级缓存会被清空。</p><h3 id="二级缓存"><a href="#二级缓存" class="headerlink" title="二级缓存"></a>二级缓存</h3><blockquote><p><strong><code>Mybatis</code> 框架的二级缓存是默认是关闭的，</strong> 使用是需要在 <code>Mybatis</code> 核心配置文件中设置开启！</p></blockquote><p>二级缓存是 <strong>SqlSessionFactory</strong> 级别的，其作用域超出 <strong>SqlSession</strong> 范围，缓存中的数据可以被所有 <strong>SqlSession</strong> 共享。</p><h2 id="二级缓存使用方法"><a href="#二级缓存使用方法" class="headerlink" title="二级缓存使用方法"></a>二级缓存使用方法</h2><p>在 <code>Mybatis</code> 框架中使用二级缓存需要一下几个环节：</p><ol><li><p>在 <code>Mybatis</code> 框架的配置文件中设置全局开启二级缓存，代码如下</p> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>即使全局开启了二级缓存，默认情况下也是不使用二级缓存的。可以根据需要在 <strong>SQL</strong> 映射文件中（*Mapper.xml）中配置缓存，为当前 <strong>namespace</strong> 启用二级缓存，代码如下：</p> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.k.dao.sysUser.SysUserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag">    <span class="attr">eviction</span>=<span class="string">&quot;FIFO&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">flushInterval</span>=<span class="string">&quot;60000&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">size</span>=<span class="string">&quot;512&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">readOnly</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <strong>cache</strong> 元素中各种属性的作用介绍：</p><ul><li><strong>eviction</strong>：选择缓存回收策略，主要包括以下几种策略：<ul><li><strong>LRU</strong>：这是默认选项，最近最少回收，移除最长时间不被使用的缓存对象。</li><li><strong>FIFO：</strong>先进先出，按照对象进入缓存的顺序来移除它们。</li><li><strong>SOFT：</strong>软引用，移除基于垃圾回收器状态和软引用规则的对象。</li><li><strong>WEAK：</strong>弱引用，更积极地一出基于垃圾回收器和弱引用规则的对象。</li></ul></li><li><strong>flushInterval</strong>：设定缓存刷新间隔，以毫秒（ms）为单位设定缓存多长时间自动刷新一次，默认不自动刷新。</li><li><strong>size：</strong>设定缓存中最多存放多少个对象，默认是 1024.</li><li><strong>readOnly：</strong>设定缓存数据是否只读。默认是 <em>false</em> ，表示缓存数据会用于读写操作，<code>Mybatis</code> 框架会返回缓存的副本以避免脏读；<em>true</em> 表示缓存数据只会用于读操作，<code>Mybatis</code> 框架会为所有从缓存中获取数据的操作返回缓存对象得实例，以获得更好的性能。</li></ul></li><li><p>在 SQL 映射文件中配置支持二级缓存后，如需对个别查询进行调整，可以在 <code>select</code> 元素中单独设置，代码如下：</p> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;gitUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;sysuser&quot;</span> <span class="attr">useCache</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p><strong>TIP</strong></p><p><code>Mybatis</code> 的核心是 SQL 管理，缓存并不是 <code>Mybatis</code> 所擅长的，所有应该采用 <code>Redis</code> 、<code>MongoDB</code> 等更专业的缓存技术会更加合理！</p></blockquote><p>完结撒花！</p><blockquote><p><strong>技术有限，如有错误，还请多多指教，谢谢！！！</strong></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;em&gt;正如大多数框架一样，&lt;code&gt;Mybatis&lt;/code&gt; 框架也提供了缓存！&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;分类&quot;&gt;&lt;a href=&quot;#分类&quot; class=&quot;headerlink&quot; title=&quot;分类&quot;&gt;&lt;/a&gt;分类&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Mybatis</summary>
      
    
    
    
    <category term="Java" scheme="http://sjhfuigashgrs.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="http://sjhfuigashgrs.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>如何发布npm包</title>
    <link href="http://sjhfuigashgrs.github.io/posts/b427.html"/>
    <id>http://sjhfuigashgrs.github.io/posts/b427.html</id>
    <published>2022-08-30T23:53:05.000Z</published>
    <updated>2022-10-16T17:28:04.447Z</updated>
    
    <content type="html"><![CDATA[<p><code>see</code> <a href="https://zhuanlan.zhihu.com/p/411524929">https://zhuanlan.zhihu.com/p/411524929</a></p><blockquote><p>验证是否登录</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm whoami</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">把喜欢的事情做到极致, 做给自己看, 也做给怀疑我们的世界看。</summary>
    
    
    
    <category term="随笔" scheme="http://sjhfuigashgrs.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="http://sjhfuigashgrs.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>基于Buyyerfly添加wowjs特效</title>
    <link href="http://sjhfuigashgrs.github.io/posts/18ac.html"/>
    <id>http://sjhfuigashgrs.github.io/posts/18ac.html</id>
    <published>2022-08-30T00:42:46.000Z</published>
    <updated>2022-10-16T17:28:04.447Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>添加 <a href="[Add Blog Animation -- Wowjs | Akilar の糖果屋](https://akilar.top/posts/abab51cf/">wowjs 特效</a><br>see <a href="https://www.npmjs.com/package/hexo-butterfly-wowjs">https://www.npmjs.com/package/hexo-butterfly-wowjs</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-butterfly-wowjs --save</span><br></pre></td></tr></table></figure><p>添加配置项</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># wowjs</span><br><span class="line"># see https://www.npmjs.com/package/hexo-butterfly-wowjs</span><br><span class="line">wowjs:</span><br><span class="line">  enable: true #控制动画开关。true是打开，false是关闭</span><br><span class="line">  priority: 10 #过滤器优先级</span><br><span class="line">  mobile: false #移动端是否启用，默认移动端禁用</span><br><span class="line">  animateitem:</span><br><span class="line">    - class: recent-post-item #必填项，需要添加动画的元素的class</span><br><span class="line">      style: animate__zoomIn #必填项，需要添加的动画</span><br><span class="line">      duration: 1.5s #选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span><br><span class="line">      delay: 200ms #选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span><br><span class="line">      offset: 30 #选填项，开始动画的距离（相对浏览器底部）</span><br><span class="line">      iteration: 1 #选填项，动画重复的次数</span><br><span class="line">    - class: card-widget</span><br><span class="line">      style: animate__zoomIn</span><br><span class="line">      delay: 200ms</span><br><span class="line">    # - class: flink-list-card</span><br><span class="line">    #   style: wowpanels</span><br><span class="line">    - class: flink-list-card</span><br><span class="line">      style: animate__flipInY</span><br><span class="line">      duration: 3s</span><br><span class="line">    - class: flink-list-card</span><br><span class="line">      style: animate__animated</span><br><span class="line">      duration: 3s</span><br><span class="line">    - class: article-sort-item</span><br><span class="line">      style: animate__slideInRight</span><br><span class="line">      duration: 1.5s</span><br><span class="line">    - class: site-card</span><br><span class="line">      style: animate__flipInY</span><br><span class="line">      duration: 3s</span><br><span class="line">    - class: site-card</span><br><span class="line">      style: animate__animated</span><br><span class="line">      duration: 3s</span><br><span class="line">  animate_css: https://cdn.cbd.int/hexo-butterfly-wowjs/lib/animate.min.css</span><br><span class="line">  wow_js: https://cdn.cbd.int/hexo-butterfly-wowjs/lib/wow.min.js</span><br><span class="line">  wow_init_js: https://cdn.cbd.int/hexo-butterfly-wowjs/lib/wow_init.js</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;添加 &lt;a href=&quot;[Add Blog Animation -- Wowjs | Akilar の糖果屋](https://akilar.top/posts/abab51cf/&quot;&gt;wowjs 特效&lt;/a&gt;&lt;br&gt;see &lt;a href=&quot;htt</summary>
      
    
    
    
    <category term="随笔" scheme="http://sjhfuigashgrs.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="http://sjhfuigashgrs.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>基于 Butterfly 的外挂标签引入</title>
    <link href="http://sjhfuigashgrs.github.io/posts/7d58.html"/>
    <id>http://sjhfuigashgrs.github.io/posts/7d58.html</id>
    <published>2022-08-30T00:04:13.000Z</published>
    <updated>2022-10-16T17:28:04.447Z</updated>
    
    <content type="html"><![CDATA[<ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p><br /><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义 font awesome 图标</p></div><br /><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><br /><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div><div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div></li></ul>]]></content>
    
    
    <summary type="html">即使这个世界对你不好，你也不能丢了骄傲！</summary>
    
    
    
    <category term="随笔" scheme="http://sjhfuigashgrs.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="随笔" scheme="http://sjhfuigashgrs.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>活着本身就是一种勇气</title>
    <link href="http://sjhfuigashgrs.github.io/posts/2753.html"/>
    <id>http://sjhfuigashgrs.github.io/posts/2753.html</id>
    <published>2022-08-29T23:51:06.000Z</published>
    <updated>2022-10-16T17:28:04.447Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>活着本身就是一种勇气</strong></p></blockquote><p>之前看董宇辉的直播推荐了余华老师的活着 我就买了一本阅读了一下</p><p><img src="https://www.gpdf.net/wp-content/uploads/2021/01/s29652928.jpg" alt=""></p><p>我花了一晚上的时间阅读了一遍 虽说读的很快，但是我读完之后内心真想呐喊一遍，因为富贵太惨了，真的是人生四大悲</p><p>少年丧父母，中年丧配偶，老年丧独子，少子无良师。</p><p>故事的主人公叫福贵，是个地主家的公子哥，谈不上真傻，我认为他是作，喜欢赌博 并输光了家产，然后他爹也被气死了，老婆也被接回了娘家，输光家产后福贵就变的本分起来，最后媳妇也回到他身边，本来想好好生活的。好景不长，晚上去诊所给他娘拿药的时候被国民党抓了壮丁，历经曲折回了家。回到家后他母亲去世了 女儿也因为一场病变成了哑巴，也是一家四口团圆了。之后就土地革命 ，因为福贵输光了家产被定了贫农 也分到了地，日子也好点了，在那个大锅饭时代，也经常挨饿，有一次因为县长夫人生孩子大出血需要输血，无量医生为了巴结县长，吧有庆的血抽干了 有庆也死了，福贵亲手把儿子给埋了，也没敢告诉得了软骨病的家珍。他凤霞因为生孩子大出血，孩子保住了，但是凤霞确走了。苦根生下来就没有母亲，最后苦根的父亲也在搬货的时候被砸死了，苦根就跟着福贵生活，有一次苦根生病了，福贵给苦根煮了豆子吃结果苦根被豆子噎死了，最后就剩福贵和一头牛孤苦伶仃的活着</p><ul><li>读后感</li></ul><p>福贵真的是经历了太多的苦难了，正如董宇辉老师在直播间说的 即使生活不如意，但是请你别忘记你自己有勇气去面对这一切。</p><p>也许活着的生命意义是珍惜，也是一种勇气。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;活着本身就是一种勇气&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;之前看董宇辉的直播推荐了余华老师的活着 我就买了一本阅读了一下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.gpdf.net/wp-co</summary>
      
    
    
    
    <category term="生活" scheme="http://sjhfuigashgrs.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="生活" scheme="http://sjhfuigashgrs.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>阳光不燥</title>
    <link href="http://sjhfuigashgrs.github.io/posts/b417.html"/>
    <id>http://sjhfuigashgrs.github.io/posts/b417.html</id>
    <published>2022-08-29T23:38:59.000Z</published>
    <updated>2022-10-16T17:28:04.447Z</updated>
    
    <content type="html"><![CDATA[<h1 id="夏至"><a href="#夏至" class="headerlink" title="夏至"></a>夏至</h1><blockquote><p>一生的时间很短<br>短到不过是两颗心之间的距离<br>一生的时间也很长<br>不如我们试着走走看</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;夏至&quot;&gt;&lt;a href=&quot;#夏至&quot; class=&quot;headerlink&quot; title=&quot;夏至&quot;&gt;&lt;/a&gt;夏至&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;一生的时间很短&lt;br&gt;短到不过是两颗心之间的距离&lt;br&gt;一生的时间也很长&lt;br&gt;不如我们试着走走看&lt;/p&gt;
&lt;/b</summary>
      
    
    
    
    <category term="生活" scheme="http://sjhfuigashgrs.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="生活" scheme="http://sjhfuigashgrs.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
