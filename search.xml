<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【夜读】沉淀自己的6种方法</title>
      <link href="/posts/51fa.html"/>
      <url>/posts/51fa.html</url>
      
        <content type="html"><![CDATA[<h2 id="保持专一"><a href="#保持专一" class="headerlink" title="保持专一"></a>保持专一</h2><pre><code>在大的方向上，专注一个领域，才能让自己变得更加优秀。在小的事情上，专注不分神，才能把一件事情做到完美。只有专注当下、持续深耕，一个人才能有广阔的未来。</code></pre><h2 id="坚持读书"><a href="#坚持读书" class="headerlink" title="坚持读书"></a>坚持读书</h2><pre><code>一个人坚持读书，意味着他还在积极寻求进步，他的思想还在不断成长。读书的成本很低，收获却很大。一个人、一本书、一盏灯，却可以看到整个世界。人生起起伏伏，热爱读书的人总能从容面对，因为他们拥有一个丰富美丽的精神家园。</code></pre><h2 id="耐心等待"><a href="#耐心等待" class="headerlink" title="耐心等待"></a>耐心等待</h2><pre><code>任何事情的成功，都不是一蹴而就的，都需要等待。从种下一粒种子到它开花，需要漫长的等待，需要我们一次次地浇水、施肥、细心看护。如果半途而废，就无法看到花朵绽放。请相信，人生没有白走的路，每一步都算数。再给梦想一点时间，你的付出终会有所收获。</code></pre><h2 id="积累经验"><a href="#积累经验" class="headerlink" title="积累经验"></a>积累经验</h2><pre><code>人生是一个不断“打怪升级”的过程，不断去做事、不断去实践，才能积累经验，完成人生的进阶。不要驻足不前，不要站在岸上学习游泳。如果因为担心失败就裹足不前，可能会错过很多好的机会。大胆迈出第一步吧，随着经验的累积，你将越来越优秀。</code></pre><h2 id="学会总结"><a href="#学会总结" class="headerlink" title="学会总结"></a>学会总结</h2><pre><code>怎么判断一个人的思想是否成熟？看他是否善于总结自己的人生经验。不要让时间白白从你身边流走，每过一天，就要有一天的收获。善于反思、善于总结，你才会不断进步，你所经历的一切才会发挥出价值。</code></pre><h2 id="常怀感恩"><a href="#常怀感恩" class="headerlink" title="常怀感恩"></a>常怀感恩</h2><pre><code>不要把别人的帮助当成是理所应当，一个人只有心怀感恩，才能赢得别人的信赖。感恩生活中的一草一木、一粥一饭；感恩家人、爱人、朋友的扶持；感恩陌生人的善意和帮助。常怀感恩之心，珍惜已经拥有的一切，生活才能越来越美好。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> 人民日报 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 人民日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js节流与防抖</title>
      <link href="/posts/81e2.html"/>
      <url>/posts/81e2.html</url>
      
        <content type="html"><![CDATA[<h2 id="节流与防抖的理解"><a href="#节流与防抖的理解" class="headerlink" title="节流与防抖的理解"></a>节流与防抖的理解</h2><p><strong>函数防抖是指在事件被触发 n 秒后再执行回调，如果在这 n 秒内事件又被触发，则重新计时。这可以使用在一些点击请求的事件上，避免因为用户的多次点击向后端发送多次请求.</strong></p><p><strong>函数节流是指规定一个单位时间，在这个单位时间内，只能有一次触发事件的回调函数执行，如果在同一个单位时间内某事件被触发多次，只有一次能生效。节流可以使用在 scroll 函数的事件监听上，通过事件节流来降低事件调用的频率.</strong></p><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>1、防抖函数: 按钮提交场景：防⽌多次提交按钮，只执⾏最后提交的⼀次.<br>2、服务端验证场景：表单验证需要服务端配合，只执⾏⼀段连续的输⼊事件的最后⼀次.</p><h2 id="实现节流函数和防抖函数"><a href="#实现节流函数和防抖函数" class="headerlink" title="实现节流函数和防抖函数"></a>实现节流函数和防抖函数</h2><blockquote><p><strong>防抖函数的实现</strong></p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fn, wait</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> context = <span class="variable language_">this</span>,</span><br><span class="line">            args = [...<span class="variable language_">arguments</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果此时存在定时器的话, 则取消之前的定时器重新计时</span></span><br><span class="line">        <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">            timer = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置定时器, 使事件间隔指定时间后执行</span></span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            fn.<span class="title function_">apply</span>(context, args);</span><br><span class="line">        &#125;, wait);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>节流函数的实现</strong></p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 时间戳版</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn, delay</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> preTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> context = <span class="variable language_">this</span>,</span><br><span class="line">            args = [...<span class="variable language_">arguments</span>],</span><br><span class="line">            nowTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果两次时间间隔超过了指定时间, 则执行函数</span></span><br><span class="line">        <span class="keyword">if</span> (nowTime - preTime &gt;= delay) &#123;</span><br><span class="line">            preTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">            <span class="keyword">return</span> fn.<span class="title function_">apply</span>(context, args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定时器版</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn, wait</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> context = <span class="variable language_">this</span>,</span><br><span class="line">            args = [...<span class="variable language_">arguments</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果没有定时器, 则创建一个定时器</span></span><br><span class="line">        <span class="keyword">if</span> (!timer) &#123;</span><br><span class="line">            timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                fn.<span class="title function_">apply</span>(context, args);</span><br><span class="line">                timer = <span class="literal">null</span>;</span><br><span class="line">            &#125;, wait);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js脚本延迟加载的方式有哪些?</title>
      <link href="/posts/4e7d.html"/>
      <url>/posts/4e7d.html</url>
      
        <content type="html"><![CDATA[<p><strong>延迟加载就是等页面加载完成之后再加载 <code>JavaScript</code> 文件。<code>js</code> 延迟加载有助于提高页面加载速度。一般有以下几种方式：</strong></p><p>1、<code>defer</code> 属性：给 js 脚本添加 <code>defer</code> 属性，这个属性会让脚本的加载与文档的解析同步解析，然后在文档解析完成后再执行这个脚本文件，这样的话就能使页面的渲染不被阻塞。多个设置了 <code>defer</code> 属性的脚本按规范来说最后是顺序执行的，但是在一些浏览器中可能不是这样.</p><p>2、<code>async</code> 属性：给 <code>js</code> 脚本添加 <code>async</code> 属性，这个属性会使脚本异步加载，不会阻塞页面的解析过程，但是当脚本加载完成后立即执行 <code>js</code>脚本，这个时候如果文档没有解析完成的话同样会阻塞。多个 <code>async</code>属性的脚本的执行顺序是不可预测的，一般不会按照代码的顺序依次执行。动态创建 <code>DOM</code> 方式：动态创建 <code>DOM</code> 标签的方式，可以对文档的加载事件进行监听，当文档加载完成后再动态的创建 <code>script</code> 标签来引入<code>js</code> 脚本.</p><p>3、使用 <code>setTimeout</code> 延迟方法：设置一个定时器来延迟加载 <code>js</code> 脚本文件让 <code>JS</code> 最后加载：将 <code>js</code> 脚本放在文档的底部，来使 <code>js</code> 脚本尽可能的在最后来加载执行.</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>for...in 和 for...of 的区别</title>
      <link href="/posts/7f31.html"/>
      <url>/posts/7f31.html</url>
      
        <content type="html"><![CDATA[<p><code>for…of</code> 是 <code>ES6</code> 新增的遍历方式，允许遍历一个含有 <code>iterator</code> 接口的数据结构（数组、对象等）并且返回各项的值，和 <code>ES3</code> 中的 <code>for…in</code> 的区别如下<code>for…of</code> 遍历获取的是对象的值，<code>for…in</code> 获取的是对象的键名；</p><p><code>for… in</code> 会遍历对象的整个原型链，性能非常差不推荐使用，而<code>for … of</code> 只遍历当前对象不会遍历原型链；对于数组的遍历，<code>for…in</code> 会返回数组中所有可枚举的属性(包括原型链上可枚举的属性)，<code>for…of</code>只返回数组的下标对应的属性值；</p><p><strong>总结：<code>for...in</code> 循环主要是为了遍历对象而生，不适用于遍历数组；<br><code>for...of</code> 循环可以用来遍历数组、类数组对象，<code>字符串</code>、<code>Set</code>、<code>Map</code> 以<br>及 <code>Generator</code> 对象</strong></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue2朝花夕拾</title>
      <link href="/posts/d225.html"/>
      <url>/posts/d225.html</url>
      
        <content type="html"><![CDATA[<p>以下文章来源于前端之神 ，作者林三心不学挖掘机，喝水不忘挖井人</p><div class="tag link"><a class="link-card" title="前端之神" href="https://mp.weixin.qq.com/s/rqoZ5KWqT_1QAx91bJMeIg"><div class="left"><img src="https://wx.qlogo.cn/mmhead/Q3auHgzwzM6q3YPht9DZA4H4ZPA0CibLbzehSIAUd0DEPyWwCdhUuzg/0"/></div><div class="right"><p class="text">前端之神</p><p class="url">https://mp.weixin.qq.com/s/rqoZ5KWqT_1QAx91bJMeIg</p></div></a></div><h2 id="Vue-的优点？Vue-的缺点？"><a href="#Vue-的优点？Vue-的缺点？" class="headerlink" title="Vue 的优点？Vue 的缺点？"></a>Vue 的优点？Vue 的缺点？</h2><p><strong>优点：</strong></p><ul><li>渐进式</li><li>组件化开发</li><li>虚拟 dom</li><li>响应式数据</li><li>单页面路由</li><li>数据与视图分开</li></ul><p><strong>缺点：</strong></p><ul><li>单页面不利于 seo</li><li>不兼容 IE</li><li>首屏加载时间长</li></ul><h2 id="为什么说-Vue-是一个渐进式框架？"><a href="#为什么说-Vue-是一个渐进式框架？" class="headerlink" title="为什么说 Vue 是一个渐进式框架？"></a>为什么说 Vue 是一个渐进式框架？</h2><p>Vue 的全家桶，你可以选择不用，或者只选几样去用，比如不用 vuex</p><p><img src="https://img.wwery.com/Sugar/ZtlU7q7i.png" alt="图片"></p><h2 id="Vue-跟-React-的异同点？"><a href="#Vue-跟-React-的异同点？" class="headerlink" title="Vue 跟 React 的异同点？"></a>Vue 跟 React 的异同点？</h2><p><strong>相同点：</strong></p><ul><li>都是单向数据流</li><li>都使用了虚拟 DOM 的技术</li><li>都支持 SSR</li><li>组件化开发</li></ul><p><strong>不同点：</strong></p><ul><li>前者 template，后者 JSX</li><li>数据改变，前者响应式，后者手动 setState</li><li>React 单向绑定，Vue 双向绑定</li><li>React 状态管理工具 Redux、Mobx，Vue 状态管理工具 Vuex</li></ul><h2 id="MVVM-是什么？和-MVC-有何区别呢？"><a href="#MVVM-是什么？和-MVC-有何区别呢？" class="headerlink" title="MVVM 是什么？和 MVC 有何区别呢？"></a>MVVM 是什么？和 MVC 有何区别呢？</h2><p><strong>MVC</strong></p><ul><li>Model：负责从数据库中取数据</li><li>View：负责展示数据</li><li>Controller：用户交互的地方，例如点击事件</li><li>思想：Controller 将 Model 的数据展示在 View 上</li></ul><p><img src="https://img.wwery.com/Sugar/kTWOXVZl.png" alt="图片"></p><p><strong>MVVM</strong></p><ul><li>VM：就是 View-Model，数据双向绑定</li><li>Model：取数据的地方</li><li>View：展示数据的地方</li><li>思想：View 和 Model 实现数据同步，不需要手动更新</li></ul><blockquote><p>注意：Vue 不严格符合 MVVM，因为 MVVM 规定 Model 和 View 不能直接通信，而 Vue 可以使用<code>ref</code>进行通信</p></blockquote><p><img src="https://img.wwery.com/Sugar/sPomKmzf.png" alt="图片"></p><h2 id="Vue-和-JQuery-的区别在哪？为什么放弃-JQuery-用-Vue？"><a href="#Vue-和-JQuery-的区别在哪？为什么放弃-JQuery-用-Vue？" class="headerlink" title="Vue 和 JQuery 的区别在哪？为什么放弃 JQuery 用 Vue？"></a>Vue 和 JQuery 的区别在哪？为什么放弃 JQuery 用 Vue？</h2><ul><li>JQuery 直接操作 DOM，而 Vue 不直接操作 DOM，而是只需操作数据</li><li>Vue 的虚拟 DOM 技术，能适配多端</li><li>Vue 集成了一些库，大大提高开发效率，例如 Route、Vuex 等等</li></ul><h2 id="为什么-data-是个函数并且返回一个对象呢？"><a href="#为什么-data-是个函数并且返回一个对象呢？" class="headerlink" title="为什么 data 是个函数并且返回一个对象呢？"></a>为什么 data 是个函数并且返回一个对象呢？</h2><p>防止组件被多个页面使用时，造成的变量互相污染</p><h2 id="使用过哪些-Vue-的修饰符呢？"><a href="#使用过哪些-Vue-的修饰符呢？" class="headerlink" title="使用过哪些 Vue 的修饰符呢？"></a>使用过哪些 Vue 的修饰符呢？</h2><ul><li><code>.lazy</code>：输入框失焦时才会更新 v-model 的值</li><li><code>.trim</code>：讲 v-model 绑定的值首位空格给去掉</li><li><code>.number</code>：将 v-medol 绑定的值转数字</li><li><code>.stop</code>：阻止事件冒泡</li><li><code>.capture</code>：事件的捕获</li><li><code>.self</code>：点击事件绑定本身才触发</li><li><code>.once</code>：事件只触发一次</li><li><code>.prevent</code>：阻止默认事件</li><li><code>.native</code>：绑定事件在自定义组件上时，确保能执行</li><li><code>.left、.middle、.right</code>：鼠标左中右键的触发</li><li><code>passive</code>：相当于给移动端滚动事件加一个<code>.lazy</code></li><li><code>camel</code>：确保变量名会被识别成驼峰命名</li><li><code>.sync</code>：简化子修改父值的步骤</li></ul><h2 id="路由的几种模式？"><a href="#路由的几种模式？" class="headerlink" title="路由的几种模式？"></a>路由的几种模式？</h2><ul><li>hash：哈希模式，根据 hash 值的更改进行组件切换，而不刷新页面</li><li>history：历史模式，依赖于 HTML5 的 pushState 和 replaceState</li><li>abstract：适用于 Node</li></ul><h2 id="路由的钩子函数？"><a href="#路由的钩子函数？" class="headerlink" title="路由的钩子函数？"></a>路由的钩子函数？</h2><p><strong>全局钩子</strong></p><ul><li><p>beforeEach：跳转路由前</p></li><li><ul><li>to：将要跳转进入的路由对象</li><li>from：将要离开的路由对象</li><li>next：执行跳转的方法</li></ul></li><li><p>afterEach：路由跳转后</p></li><li><ul><li>to：将要跳转进入的路由对象</li></ul></li></ul><p><strong>路由独享钩子</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/xxx&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: xxx,</span><br><span class="line">        <span class="attr">beforeEnter</span>: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p><strong>组件内路由钩子</strong></p><ul><li>beforeRouteEnter(to, from, next)：跳转路由渲染组件时触发</li><li>beforeRouteUpdate(to, from, next)：跳转路由且组件被复用时触发</li><li>beforeRouteLeave(to, from, next)：跳转路由且离开组件时触发</li></ul><h2 id="使用过哪些-Vue-的内部指令呢？"><a href="#使用过哪些-Vue-的内部指令呢？" class="headerlink" title="使用过哪些 Vue 的内部指令呢？"></a>使用过哪些 Vue 的内部指令呢？</h2><ul><li><code>v-text</code>：元素的 textContent</li><li><code>v-html</code>：元素的 innerHTML</li><li><code>v-show</code>：通过样式 display 改变显隐</li><li><code>v-if</code>：通过操作 DOM 改变显隐</li><li><code>v-else</code>：配合 v-if</li><li><code>v-else-id</code>：配合 v-else</li><li><code>v-for</code>：循环渲染</li><li><code>v-on</code>：绑定事件，缩写@</li><li><code>v-bind</code>：绑定变量，缩写:</li><li><code>v-model</code>：双向绑定</li><li><code>v-slot</code>：插槽</li><li><code>v-once</code>：只渲染一次</li><li><code>v-pre</code>：跳过元素编译</li><li><code>v-cloak</code>：隐藏双括号，有值再显示</li></ul><h2 id="组件之间的传值方式有哪些？"><a href="#组件之间的传值方式有哪些？" class="headerlink" title="组件之间的传值方式有哪些？"></a>组件之间的传值方式有哪些？</h2><ul><li>父传子，子组件通过<code>props</code>接收</li><li>子传父，子组件使用<code>$emit</code>对父组件进行传值</li><li>父子之间通过<code>$parent</code>和<code>$chidren</code>获取实例进而通信</li><li>通过<code>vuex</code>进行状态管理</li><li>通过<code>eventBus</code>进行跨组件值传递</li><li><code>provide</code>和<code>inject</code>，官方不建议使用</li><li><code>$ref</code>获取实例，进而传值</li><li>路由传值</li><li>localStorage、sessionStorage</li></ul><h2 id="如何设置动态-class，动态-style？"><a href="#如何设置动态-class，动态-style？" class="headerlink" title="如何设置动态 class，动态 style？"></a>如何设置动态 class，动态 style？</h2><ul><li>动态 class 对象：<code>&lt;div :class=&quot;&#123; &#39;is-active&#39;: true, &#39;red&#39;: isRed &#125;&quot;&gt;&lt;/div&gt;</code></li><li>动态 class 数组：<code>&lt;div :class=&quot;[&#39;is-active&#39;, isRed ? &#39;red&#39; : &#39;&#39; ]&quot;&gt;&lt;/div&gt;</code></li><li>动态 style 对象：<code>&lt;div :style=&quot;&#123; color: textColor, fontSize: &#39;18px&#39; &#125;&quot;&gt;&lt;/div&gt;</code></li><li>动态 style 数组：`</li></ul><h2 id="v-if-和-v-show-有何区别？"><a href="#v-if-和-v-show-有何区别？" class="headerlink" title="v-if 和 v-show 有何区别？"></a>v-if 和 v-show 有何区别？</h2><ul><li><code>v-if</code>：通过操作 DOM 来控制显隐，适用于偶尔显隐的情况</li><li><code>v-show</code>：通过改变样式 display 属性控制显隐，适用于频繁显隐的情况</li></ul><h2 id="computed-和-watch-有何区别？"><a href="#computed-和-watch-有何区别？" class="headerlink" title="computed 和 watch 有何区别？"></a>computed 和 watch 有何区别？</h2><ul><li><code>computed</code>：依赖多个变量计算出一个变量，且具有缓存机制，依赖值不变的情况下，会复用计算值。<code>computed</code>中不能进行异步操作</li><li><code>watch</code>：通常监听一个变量的变化，而去做一些事，可异步操作</li><li>简单记就是：一般情况下<code>computed</code>的多对一，<code>watch</code>一对多</li></ul><h2 id="Vue-的生命周期，讲一讲？"><a href="#Vue-的生命周期，讲一讲？" class="headerlink" title="Vue 的生命周期，讲一讲？"></a>Vue 的生命周期，讲一讲？</h2><ul><li><code>beforeCreate</code>：实例 Vue，未初始化和响应式数据</li><li><code>created</code>：已初始化和响应式数据，可访问数据</li><li><code>beforeMount</code>：render 调用，虚拟 DOM 生成，未转真实 DOM</li><li><code>mounted</code>：真实 DOM 挂载完成</li><li><code>beforeUpdate</code>：数据更新，新虚拟 DOM 生成</li><li><code>updated</code>：新旧虚拟 DOM 进行对比，打补丁，然后进行真实 DOM 更新</li><li><code>beforeDestroy</code>：实例销毁前，仍可访问数据</li><li><code>destroy</code>：实例销毁，子实例销毁，指令解绑，解绑本实例的事件</li><li><code>activated</code>：keep-alive 所缓存组件激活时调用</li><li><code>deactivated</code>：keep-alive 所缓存组件停用时调用</li><li><code>errorCaptured</code>：子孙组件的错误捕获，此函数可返回 false 阻止继续向上传播</li></ul><h2 id="为什么-v-if-和-v-for-不建议用在同一标签？"><a href="#为什么-v-if-和-v-for-不建议用在同一标签？" class="headerlink" title="为什么 v-if 和 v-for 不建议用在同一标签？"></a>为什么 v-if 和 v-for 不建议用在同一标签？</h2><p><code>v-for</code>优先级高于<code>v-if</code>，每项都通过<code>v-for</code>渲染出来后再去通过<code>v-if</code>判断显隐，做了很多无用功</p><h2 id="vuex-的有哪些属性？用处是什么？"><a href="#vuex-的有哪些属性？用处是什么？" class="headerlink" title="vuex 的有哪些属性？用处是什么？"></a>vuex 的有哪些属性？用处是什么？</h2><ul><li><code>state</code>：定义初始状态</li><li><code>getter</code>：从 store 从取数据</li><li><code>mutation</code>：更改 store 中状态，只能同步操作</li><li><code>action</code>：用于提交 mutation，而不直接更改状态，可异步操作</li><li><code>module</code>：store 的模块拆分</li></ul><p><img src="https://img.wwery.com/Sugar/J0KxCxiy.png" alt="图片"></p><h2 id="不需要响应式的数据应该怎么处理？"><a href="#不需要响应式的数据应该怎么处理？" class="headerlink" title="不需要响应式的数据应该怎么处理？"></a>不需要响应式的数据应该怎么处理？</h2><ul><li>定义在 data 的 return 之外</li><li>使用 Object.freeze 进行数据冻结</li></ul><h2 id="watch-有哪些属性，分别有什么用？"><a href="#watch-有哪些属性，分别有什么用？" class="headerlink" title="watch 有哪些属性，分别有什么用？"></a>watch 有哪些属性，分别有什么用？</h2><ul><li>immediate：初次加载时立即执行</li><li>deep：是否进行深度监听</li><li>handler：监听的回调函数</li></ul><h2 id="父子组件生命周期顺序？"><a href="#父子组件生命周期顺序？" class="headerlink" title="父子组件生命周期顺序？"></a>父子组件生命周期顺序？</h2><p>父 beforeCreate -&gt; 父 created -&gt; 父 beforeMount -&gt; 子 beforeCreate -&gt; 子 created -&gt; 子 beforeMount -&gt; 子 mounted -&gt; 父 mounted</p><h2 id="对象新属性无法更新视图，删除属性无法更新视图，为什么？怎么办？"><a href="#对象新属性无法更新视图，删除属性无法更新视图，为什么？怎么办？" class="headerlink" title="对象新属性无法更新视图，删除属性无法更新视图，为什么？怎么办？"></a>对象新属性无法更新视图，删除属性无法更新视图，为什么？怎么办？</h2><ul><li><p>原因：Object.defineProperty 没有对对象的新属性进行劫持</p></li><li><p>解决：</p></li><li><ul><li>新增属性：<code>Vue.set(target, key, value)</code></li><li>删除属性：<code>Vue.delete(target, key)</code></li></ul></li></ul><h2 id="直接-arr-index-xxx-无法更新视图怎么办？为什么？怎么办？"><a href="#直接-arr-index-xxx-无法更新视图怎么办？为什么？怎么办？" class="headerlink" title="直接 arr[index] = xxx 无法更新视图怎么办？为什么？怎么办？"></a>直接 arr[index] = xxx 无法更新视图怎么办？为什么？怎么办？</h2><ul><li><p>原因：Vue 出于性能考虑没有对数组下标进行劫持，而是通过改写数组原型方法</p></li><li><p>解决：</p></li><li><ul><li><code>splice：arr.splice(index, 1, value)</code></li><li><code>Vue.set(target, index, value)</code></li></ul></li></ul><h2 id="插槽的使用以及原理？"><a href="#插槽的使用以及原理？" class="headerlink" title="插槽的使用以及原理？"></a>插槽的使用以及原理？</h2><blockquote><p>具体：<a href="https://juejin.cn/post/6949848530781470733">https://juejin.cn/post/6949848530781470733</a></p></blockquote><p><strong>普通插槽</strong> 普通插槽<code>slot</code>会被当做子元素进行解析，最终会被解析成一个<code>_t</code>函数，他接收的第一个参数为插槽的名称，默认是<code>default</code>，也就是<code>_t(&#39;default&#39;)</code>，执行此函数进行最终元素的渲染，如果是具名插槽，则传对应的插槽名 <strong>作用域插槽</strong> 插槽会被封装成一个函数放置在<code>scopeSlotes</code>对象中，解析时<code>_t</code>第二个参数接收子组件的数据，并进行渲染</p><h2 id="为什么不建议用-index-做-key，为什么不建议用随机数做-key？"><a href="#为什么不建议用-index-做-key，为什么不建议用随机数做-key？" class="headerlink" title="为什么不建议用 index 做 key，为什么不建议用随机数做 key？"></a>为什么不建议用 index 做 key，为什么不建议用随机数做 key？</h2><p>举个例子：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div v-<span class="keyword">for</span>=<span class="string">&quot;(item, index) in list&quot;</span> :key=<span class="string">&quot;index&quot;</span>&gt;&#123;&#123;item.<span class="property">name</span>&#125;&#125;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="attr">list</span>: [</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>, <span class="attr">id</span>: <span class="string">&#x27;123&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;小红&#x27;</span>, <span class="attr">id</span>: <span class="string">&#x27;124&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;小花&#x27;</span>, <span class="attr">id</span>: <span class="string">&#x27;125&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">渲染为</span><br><span class="line">&lt;div key=<span class="string">&quot;0&quot;</span>&gt;小明&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;1&quot;</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;2&quot;</span>&gt;</span>小花<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">现在我执行 list.<span class="title function_">unshift</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;小林&#x27;</span>, <span class="attr">id</span>: <span class="string">&#x27;122&#x27;</span> &#125;)</span><br><span class="line"></span><br><span class="line">渲染为</span><br><span class="line">&lt;div key=<span class="string">&quot;0&quot;</span>&gt;小林&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;1&quot;</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;2&quot;</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;3&quot;</span>&gt;</span>小花<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">新旧对比</span><br><span class="line"></span><br><span class="line">&lt;div key=<span class="string">&quot;0&quot;</span>&gt;小明&lt;<span class="regexp">/div&gt;  &lt;div key=&quot;0&quot;&gt;小林&lt;/</span>div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;1&quot;</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;1&quot;</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;2&quot;</span>&gt;</span>小花<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;2&quot;</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">                         <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;3&quot;</span>&gt;</span>小花<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">可以看出，如果用index做key的话，其实是更新了原有的三项，并新增了小花，虽然达到了渲染目的，但是损耗性能</span><br><span class="line"></span><br><span class="line">现在我们使用id来做key，渲染为</span><br><span class="line"></span><br><span class="line">&lt;div key=<span class="string">&quot;123&quot;</span>&gt;小明&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;124&quot;</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;125&quot;</span>&gt;</span>小花<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">现在我执行 list.<span class="title function_">unshift</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;小林&#x27;</span>, <span class="attr">id</span>: <span class="string">&#x27;122&#x27;</span> &#125;)，渲染为</span><br><span class="line"></span><br><span class="line">&lt;div key=<span class="string">&quot;122&quot;</span>&gt;小林&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;123&quot;</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;124&quot;</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;125&quot;</span>&gt;</span>小花<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">新旧对比</span><br><span class="line"></span><br><span class="line">                           &lt;div key=<span class="string">&quot;122&quot;</span>&gt;小林&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;123&quot;</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;123&quot;</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;124&quot;</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;124&quot;</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;125&quot;</span>&gt;</span>小花<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;125&quot;</span>&gt;</span>小花<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">可以看出，原有的三项都不变，只是新增了小林这个人，这才是最理想的结果</span><br></pre></td></tr></table></figure><p>用<code>index</code>和用<code>随机数</code>都是同理，<code>随机数</code>每次都在变，做不到专一性，很<code>渣男</code>，也很消耗性能，所以，拒绝<code>渣男</code>，选择<code>老实人</code></p><h2 id="自定义指令的钩子函数？"><a href="#自定义指令的钩子函数？" class="headerlink" title="自定义指令的钩子函数？"></a>自定义指令的钩子函数？</h2><p>这里只说 Vue2 的</p><ul><li><code>bind</code>：指令绑定到指定元素时调用，只调用一次</li><li><code>inserted</code>：指定元素插入父节点时调用</li><li><code>update</code>：所在组件的 VNode 更新时调用</li><li><code>componnetUpdated</code>：所在组件以及其子组件 VNode 全部更新后调用</li><li><code>unbind</code>：只调用一次，指令与元素解绑时调用</li></ul><h2 id="说说-nextTick-的用处？"><a href="#说说-nextTick-的用处？" class="headerlink" title="说说 nextTick 的用处？"></a>说说 nextTick 的用处？</h2><p>修改数据时不能马上得到最新的 DOM 信息，所以需要使用 nextTick，在 nectTick 回调中可以获取最新 DOM 信息</p><h2 id="为什么-nextTick-优先是微任务？"><a href="#为什么-nextTick-优先是微任务？" class="headerlink" title="为什么 nextTick 优先是微任务？"></a>为什么 nextTick 优先是微任务？</h2><p>优先是<code>Promise.then</code>方法，是个微任务，这样可以避免多一次队列，进而少一次 UI 渲染，节省性能</p><h2 id="Vue-的-SSR-是什么？有什么好处？"><a href="#Vue-的-SSR-是什么？有什么好处？" class="headerlink" title="Vue 的 SSR 是什么？有什么好处？"></a>Vue 的 SSR 是什么？有什么好处？</h2><p>SSR 全称<code>Server Side Render</code></p><ul><li>有利于 SEO：由于是在服务端，将数据填充进 HTML 之后再推送到浏览器，所以有利于 SEO 的爬取</li><li>首屏渲染快</li></ul><h2 id="Vue-响应式是怎么实现的？"><a href="#Vue-响应式是怎么实现的？" class="headerlink" title="Vue 响应式是怎么实现的？"></a>Vue 响应式是怎么实现的？</h2><ul><li>1、劫持：通过<code>Object.defineProperty</code>对对象进行递归劫持属性的<code>get、set</code></li><li>2、观察者模式：使用<code>watcher</code>进行观察数据使用的地方</li><li>3、发布订阅模式：使用<code>dep</code>收集<code>watcher</code>，数据更改时，通过<code>notify</code>方法通知<code>dep</code>里的<code>watcher</code>去进行相应的更新</li><li>4、数组：数组没有使用劫持的模式，而是通过重写数组原型上的方法，来实现数组的响应式</li></ul><h2 id="为什么只对对象劫持，而要对数组进行方法重写？"><a href="#为什么只对对象劫持，而要对数组进行方法重写？" class="headerlink" title="为什么只对对象劫持，而要对数组进行方法重写？"></a>为什么只对对象劫持，而要对数组进行方法重写？</h2><p>数组的元素大概率是成百上千的，所以对数组下标进行劫持的话会非常消耗性能。Vue 通过对数组原型上方法的重写，实现数组的响应式</p><h2 id="Vue-的模板编译原理？"><a href="#Vue-的模板编译原理？" class="headerlink" title="Vue 的模板编译原理？"></a>Vue 的模板编译原理？</h2><blockquote><p>具体：<a href="https://juejin.cn/post/6969563640416436232">https://juejin.cn/post/6969563640416436232</a></p></blockquote><h2 id="Vue-的-computed-和-watch-的原理？"><a href="#Vue-的-computed-和-watch-的原理？" class="headerlink" title="Vue 的 computed 和 watch 的原理？"></a>Vue 的 computed 和 watch 的原理？</h2><blockquote><p>具体：<a href="https://juejin.cn/post/6974293549135167495">https://juejin.cn/post/6974293549135167495</a></p></blockquote><h2 id="Vue-set-方法的原理？"><a href="#Vue-set-方法的原理？" class="headerlink" title="Vue.set 方法的原理？"></a>Vue.set 方法的原理？</h2><p>Vue.set(target, key, value)</p><ul><li><p>第一步：判断 target 是数组的话，则调用 target.splice(key, 1, value)</p></li><li><p>第二步：判断 target 是对象的话，再判断传入的 key 是否已存在 target 中</p></li><li><ul><li>是：直接 target[key] = value</li><li>否：调用 defineReactive(target, key, val)进行响应式处理</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">set</span>(<span class="params">target, key, val</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(target)) &#123;</span><br><span class="line">        target.<span class="property">length</span> = <span class="title class_">Math</span>.<span class="title function_">max</span>(target.<span class="property">length</span>, key);</span><br><span class="line">        target.<span class="title function_">splice</span>(key, <span class="number">1</span>, val);</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> ob = target.<span class="property">__ob__</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((key <span class="keyword">in</span> target &amp;&amp; !(key <span class="keyword">in</span> target.<span class="property"><span class="keyword">prototype</span></span>)) || !ob) &#123;</span><br><span class="line">        target[key] = val;</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">defineReactive</span>(target, key, val);</span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Vue-delete-方法的原理？"><a href="#Vue-delete-方法的原理？" class="headerlink" title="Vue.delete 方法的原理？"></a>Vue.delete 方法的原理？</h2><p>Vue.delete(target, key)</p><ul><li>第一步：判断 target 是否为数组，是的话调用 target.splice(key, 1)</li><li>第二步：判断 target 是对象的话，调用 delete 关键字删除属性，并调用<strong>ob</strong>.dep.notify 进行更新通知</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">del</span>(<span class="params">target, key</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(target)) &#123;</span><br><span class="line">        target.<span class="title function_">splice</span>(key, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> ob = target.<span class="property">__ob__</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!(key <span class="keyword">in</span> target)) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span> target[key];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ob) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    ob.<span class="property">dep</span>.<span class="title function_">notify</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="nextTick-的原理？"><a href="#nextTick-的原理？" class="headerlink" title="nextTick 的原理？"></a>nextTick 的原理？</h2><p>维护一个数组，每次调用时讲回调函数压入这个数组，然后优先选择微任务，在微任务回调中去执行数组中的所有回调，同时维护一个布尔值，确保每一次队列进行一次执行数组所有回调</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> callbacks = []; <span class="comment">//回调函数</span></span><br><span class="line"><span class="keyword">let</span> pending = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flushCallbacks</span>(<span class="params"></span>) &#123;</span><br><span class="line">    pending = <span class="literal">false</span>; <span class="comment">//把标志还原为false</span></span><br><span class="line">    <span class="comment">// 依次执行回调</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; callbacks.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        callbacks[i]();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> timerFunc; <span class="comment">//先采用微任务并按照优先级优雅降级的方式实现异步刷新</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">Promise</span> !== <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果支持promise</span></span><br><span class="line">    <span class="keyword">const</span> p = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>();</span><br><span class="line">    timerFunc = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        p.<span class="title function_">then</span>(flushCallbacks);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">MutationObserver</span> !== <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// MutationObserver 主要是监听dom变化 也是一个异步方法</span></span><br><span class="line">    <span class="keyword">let</span> counter = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">MutationObserver</span>(flushCallbacks);</span><br><span class="line">    <span class="keyword">const</span> textNode = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="title class_">String</span>(counter));</span><br><span class="line">    observer.<span class="title function_">observe</span>(textNode, &#123;</span><br><span class="line">        <span class="attr">characterData</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    timerFunc = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        counter = (counter + <span class="number">1</span>) % <span class="number">2</span>;</span><br><span class="line">        textNode.<span class="property">data</span> = <span class="title class_">String</span>(counter);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> setImmediate !== <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果前面都不支持 判断setImmediate</span></span><br><span class="line">    timerFunc = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">setImmediate</span>(flushCallbacks);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 最后降级采用setTimeout</span></span><br><span class="line">    timerFunc = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(flushCallbacks, <span class="number">0</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">nextTick</span>(<span class="params">cb</span>) &#123;</span><br><span class="line">    callbacks.<span class="title function_">push</span>(cb);</span><br><span class="line">    <span class="keyword">if</span> (!pending) &#123;</span><br><span class="line">        pending = <span class="literal">true</span>;</span><br><span class="line">        <span class="title function_">timerFunc</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="说说-虚拟-dom-和-diff-算法-吧？"><a href="#说说-虚拟-dom-和-diff-算法-吧？" class="headerlink" title="说说 虚拟 dom 和 diff 算法 吧？"></a>说说 虚拟 dom 和 diff 算法 吧？</h2><p><strong>虚拟 dom</strong></p><p>虚拟 dom 是一个对象，一个描述真实 DOM 的对象，每次数据更新时，新旧虚拟 DOM 都会互相进行同层对比，而 diff 算法优化就是在此时做优化的。</p><p><strong>diff 算法</strong></p><ul><li><p>第一步：调用<code>patch</code>方法，传入新旧虚拟 DOM，开始同层对比</p></li><li><p>第二步：调用<code>isSameNode</code>方法，对比新旧节点是否同类型节点</p></li><li><p>第三步：如果不同，新节点直接代替旧节点</p></li><li><p>第四步：如果相同，调用<code>patchNode</code>进行对比节点</p></li><li><ul><li>如果旧节点和新节点都是文本节点，则新文本代替旧文本</li><li>如果旧节点有子节点，新节点没，则删除旧节点的子节点</li><li>如果旧节点没有子节点，新节点有，则把子节点新增上去</li><li>如果都有子节点，则调用<code>updateChildren</code>方法进行新旧子节点的对比</li><li>子节点对比为首尾对比法</li></ul></li></ul><h2 id="如果子组件改变-props-里的数据会发生什么？"><a href="#如果子组件改变-props-里的数据会发生什么？" class="headerlink" title="如果子组件改变 props 里的数据会发生什么？"></a>如果子组件改变 props 里的数据会发生什么？</h2><ul><li>基础类型：如果父传给子的是基础类型，修改则会报错</li><li>引用类型：如果父传给子的是引用类型，修改属性则会同时修改父组件数据</li></ul><h2 id="props-怎么自定义验证"><a href="#props-怎么自定义验证" class="headerlink" title="props 怎么自定义验证"></a>props 怎么自定义验证</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">num</span>: &#123;</span><br><span class="line">      <span class="attr">default</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">validator</span>: <span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">          <span class="comment">// 返回值为false则验证不通过，报错</span></span><br><span class="line">          <span class="keyword">return</span> [</span><br><span class="line">            <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span></span><br><span class="line">          ].<span class="title function_">indexOf</span>(value) !== -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="watch-的-immediate-属性有什么用？"><a href="#watch-的-immediate-属性有什么用？" class="headerlink" title="watch 的 immediate 属性有什么用？"></a>watch 的 immediate 属性有什么用？</h2><p>Vue 实例初始化的时候立即调用 watch 的监听回调函数</p><h2 id="watch-监听一个对象时，如何排除某些属性的监听"><a href="#watch-监听一个对象时，如何排除某些属性的监听" class="headerlink" title="watch 监听一个对象时，如何排除某些属性的监听"></a>watch 监听一个对象时，如何排除某些属性的监听</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">this</span>.<span class="property">params</span>)</span><br><span class="line">      .<span class="title function_">filter</span>(<span class="function">(<span class="params">_</span>) =&gt;</span> ![<span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>].<span class="title function_">includes</span>(_)) <span class="comment">// 排除对c，d属性的监听</span></span><br><span class="line">      .<span class="title function_">forEach</span>(<span class="function">(<span class="params">_</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.$watch(<span class="function">(<span class="params">vm</span>) =&gt;</span> vm.<span class="property">params</span>[_], handler, &#123;</span><br><span class="line">          <span class="attr">deep</span>: <span class="literal">true</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">b</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">c</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">d</span>: <span class="number">4</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="attr">watch</span>: &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">deep</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="title function_">handler</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">getList</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="审查元素时发现-data-v-xxxxx，这是啥？"><a href="#审查元素时发现-data-v-xxxxx，这是啥？" class="headerlink" title="审查元素时发现 data-v-xxxxx，这是啥？"></a>审查元素时发现 data-v-xxxxx，这是啥？</h2><p>样式模块化 scoped 的效果，在本组件的标签都会带上 data-v-xxx 的属性，然后通过属性选择器实现样式模块化的效果</p><h2 id="vue-的-hook-的使用？"><a href="#vue-的-hook-的使用？" class="headerlink" title="vue 的 hook 的使用？"></a>vue 的 hook 的使用？</h2><ul><li>同一组件中使用</li></ul><blockquote><p>这是我们常用的使用定时器的方式</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="attr">timer</span>:<span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      <span class="comment">//具体执行内容</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">    &#125;,<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">beforeDestory</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">timer</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>上面做法不好的地方在于：得全局多定义一个 timer 变量，可以使用 hook 这么做：</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">//具体执行代码</span></span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">            <span class="variable language_">this</span>.$once(<span class="string">&#x27;hook:beforeDestroy&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">                timer = <span class="literal">null</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>父子组件使用</li></ul><blockquote><p>如果子组件需要在 mounted 时触发父组件的某一个函数，平时都会这么写：</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//父组件</span></span><br><span class="line">&lt;rl-child @childMounted=<span class="string">&quot;childMountedHandle&quot;</span></span><br><span class="line">/&gt;</span><br><span class="line">method () &#123;</span><br><span class="line">  <span class="title function_">childMountedHandle</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// do something...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子组件</span></span><br><span class="line">mounted () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.$emit(<span class="string">&#x27;childMounted&#x27;</span>)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p>使用 hook 的话可以更方便：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//父组件</span><br><span class="line">&lt;rl-child @hook:mounted=&quot;childMountedHandle&quot; /&gt;</span><br><span class="line">method () &#123; childMountedHandle() &#123; // do something... &#125; &#125;,</span><br></pre></td></tr></table></figure><h2 id="provide-和-inject-是响应式的吗？"><a href="#provide-和-inject-是响应式的吗？" class="headerlink" title="provide 和 inject 是响应式的吗？"></a>provide 和 inject 是响应式的吗？</h2><p>引用数据类型响应式，基础数据类型不响应式</p><h2 id="Vue-的-el-属性和-mount-优先级？"><a href="#Vue-的-el-属性和-mount-优先级？" class="headerlink" title="Vue 的 el 属性和$mount 优先级？"></a>Vue 的 el 属性和$mount 优先级？</h2><p>同时存在时，<code>el &gt; $mount</code></p><p><img src="https://img.wwery.com/Sugar/fSxZPIhe.png" alt="图片"></p><h2 id="动态指令和参数使用过吗？"><a href="#动态指令和参数使用过吗？" class="headerlink" title="动态指令和参数使用过吗？"></a>动态指令和参数使用过吗？</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;aButton @[someEvent]=&quot;handleSomeEvent()&quot; :[someProps]=&quot;1000&quot; /&gt;</span><br></pre></td></tr></table></figure><h2 id="相同的路由组件如何重新渲染？"><a href="#相同的路由组件如何重新渲染？" class="headerlink" title="相同的路由组件如何重新渲染？"></a>相同的路由组件如何重新渲染？</h2><p>更改如有组件上的 key 即可</p><h2 id="自定义-v-model"><a href="#自定义-v-model" class="headerlink" title="自定义 v-model"></a>自定义 v-model</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="attr">default</span>: &#123;</span><br><span class="line">  <span class="attr">model</span>: &#123;</span><br><span class="line">    <span class="attr">event</span>: <span class="string">&#x27;change&#x27;</span>,</span><br><span class="line">    <span class="attr">prop</span>: <span class="string">&#x27;checked&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="如何将获取-data-中某一个数据的初始状态？"><a href="#如何将获取-data-中某一个数据的初始状态？" class="headerlink" title="如何将获取 data 中某一个数据的初始状态？"></a>如何将获取 data 中某一个数据的初始状态？</h2><p>使用<code>this.$options.data().xxx</code>获取初始值</p><h2 id="计算变量时，methods-和-computed-哪个好？"><a href="#计算变量时，methods-和-computed-哪个好？" class="headerlink" title="计算变量时，methods 和 computed 哪个好？"></a>计算变量时，methods 和 computed 哪个好？</h2><p>computed 比较好，computed 有缓存机制，可以节省性能。而 method 则每次更新都会重新计算，不考虑缓存</p><h2 id="router-push、router-replace、router-go-的区别？"><a href="#router-push、router-replace、router-go-的区别？" class="headerlink" title="router.push、router.replace、router.go 的区别？"></a>router.push、router.replace、router.go 的区别？</h2><ul><li><code>router.push</code>：跳转，并向 history 栈中加一个记录，可以后退到上一个页面</li><li><code>router.replace</code>：跳转，不会向 history 栈中加一个记录，不可以后退到上一个页面</li><li><code>router.go</code>：传正数向前跳转，传负数向后跳转</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js工具方法</title>
      <link href="/posts/60d2.html"/>
      <url>/posts/60d2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言</p></blockquote><p>有些时候，我们会遇到一些<code>小难题</code>，但并不难，因为你只要肯花个时间，肯定是能解决的。你与其花这个时间，为何不快速解决之后，好继续写你的主要逻辑代码呢？</p><p>比如你要判断用户是否是<code>手机端</code>输入<code>邮箱\手机号码...</code> 是否合法，将数字转换成 <code>汉字</code>。。。</p><p><strong>“工欲善其事，必先利其器！’’下面列举出了一些 JS 中常用的工具方法，复制粘贴，岂不美滋滋？，有了这些开发工具你就可以高效的处理任务和信息了。</strong></p><h2 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a>邮箱</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isEmail</span> = s =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]&#123;2,3&#125;)&#123;1,2&#125;)$/</span>.<span class="title function_">test</span>(s);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="手机号码"><a href="#手机号码" class="headerlink" title="手机号码"></a>手机号码</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isMobile</span> = s =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/^1[0-9]&#123;10&#125;$/</span>.<span class="title function_">test</span>(s);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="电话号码"><a href="#电话号码" class="headerlink" title="电话号码"></a>电话号码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">export <span class="type">const</span> <span class="variable">isPhone</span> <span class="operator">=</span> (s) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> /^([<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">3</span>,<span class="number">4</span>&#125;-)?[<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">7</span>,<span class="number">8</span>&#125;$/.test(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="是否-url-地址"><a href="#是否-url-地址" class="headerlink" title="是否 url 地址"></a>是否 url 地址</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isURL</span> = s =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/^http[s]?:\/\/.*/</span>.<span class="title function_">test</span>(s);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否字符串"><a href="#是否字符串" class="headerlink" title="是否字符串"></a>是否字符串</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isString</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;String&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否数字"><a href="#是否数字" class="headerlink" title="是否数字"></a>是否数字</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isNumber</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Number&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否-boolean"><a href="#是否-boolean" class="headerlink" title="是否 boolean"></a>是否 boolean</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isBoolean</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Boolean&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否函数"><a href="#是否函数" class="headerlink" title="是否函数"></a>是否函数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isFunction</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Function&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否为-null"><a href="#是否为-null" class="headerlink" title="是否为 null"></a>是否为 null</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isNull</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Null&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否-undefined"><a href="#是否-undefined" class="headerlink" title="是否 undefined"></a>是否 undefined</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isUndefined</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Undefined&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否对象"><a href="#是否对象" class="headerlink" title="是否对象"></a>是否对象</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isObj</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Object&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否数组"><a href="#是否数组" class="headerlink" title="是否数组"></a>是否数组</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isArray</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Array&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否时间"><a href="#是否时间" class="headerlink" title="是否时间"></a>是否时间</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isDate</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Date&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否正则"><a href="#是否正则" class="headerlink" title="是否正则"></a>是否正则</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isRegExp</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;RegExp&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否错误对象"><a href="#是否错误对象" class="headerlink" title="是否错误对象"></a>是否错误对象</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isError</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Error&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否-Symbol-函数"><a href="#是否-Symbol-函数" class="headerlink" title="是否 Symbol 函数"></a>是否 Symbol 函数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isSymbol</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Symbol&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否-Promise-对象"><a href="#是否-Promise-对象" class="headerlink" title="是否 Promise 对象"></a>是否 Promise 对象</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isPromise</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Promise&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否-Set-对象"><a href="#是否-Set-对象" class="headerlink" title="是否 Set 对象"></a>是否 Set 对象</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isSet</span> = o =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(o).<span class="title function_">slice</span>(<span class="number">8</span>, -<span class="number">1</span>) === <span class="string">&#x27;Set&#x27;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> ua = navigator.<span class="property">userAgent</span>.<span class="title function_">toLowerCase</span>();</span><br></pre></td></tr></table></figure><h2 id="是否是微信浏览器"><a href="#是否是微信浏览器" class="headerlink" title="是否是微信浏览器"></a>是否是微信浏览器</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isWeiXin</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/microMessenger/i</span>) == <span class="string">&#x27;micromessenger&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否是移动端"><a href="#是否是移动端" class="headerlink" title="是否是移动端"></a>是否是移动端</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isDeviceMobile</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/android|webos|iphone|ipod|balckberry/i</span>.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否是-QQ-浏览器"><a href="#是否是-QQ-浏览器" class="headerlink" title="是否是 QQ 浏览器"></a>是否是 QQ 浏览器</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isQQBrowser</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> !!navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/mqqbrowser|qzone|qqbrowser|qbwebviewtype/i</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否是爬虫"><a href="#是否是爬虫" class="headerlink" title="是否是爬虫"></a>是否是爬虫</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isSpider</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="regexp">/adsbot|googlebot|bingbot|msnbot|yandexbot|baidubot|robot|careerbot|seznambot|bot|baiduspider|jikespider|symantecspider|scannerlwebcrawler|crawler|360spider|sosospider|sogou web sprider|sogou orion spider/</span>.<span class="title function_">test</span>(</span><br><span class="line">        navigator.<span class="property">userAgent</span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否-ios"><a href="#是否-ios" class="headerlink" title="是否 ios"></a>是否 ios</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isIos</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> u = navigator.<span class="property">userAgent</span>;</span><br><span class="line">    <span class="keyword">if</span> (u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Android&#x27;</span>) &gt; -<span class="number">1</span> || u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Linux&#x27;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">//安卓手机</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (u.<span class="title function_">indexOf</span>(<span class="string">&#x27;iPhone&#x27;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">//苹果手机</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (u.<span class="title function_">indexOf</span>(<span class="string">&#x27;iPad&#x27;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">//iPad</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Windows Phone&#x27;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">//winphone手机</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="是否为-PC-端"><a href="#是否为-PC-端" class="headerlink" title="是否为 PC 端"></a>是否为 PC 端</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isPC</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> userAgentInfo = navigator.<span class="property">userAgent</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">Agents</span> = [<span class="string">&#x27;Android&#x27;</span>, <span class="string">&#x27;iPhone&#x27;</span>, <span class="string">&#x27;SymbianOS&#x27;</span>, <span class="string">&#x27;Windows Phone&#x27;</span>, <span class="string">&#x27;iPad&#x27;</span>, <span class="string">&#x27;iPod&#x27;</span>];</span><br><span class="line">    <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> v = <span class="number">0</span>; v &lt; <span class="title class_">Agents</span>.<span class="property">length</span>; v++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (userAgentInfo.<span class="title function_">indexOf</span>(<span class="title class_">Agents</span>[v]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="去除-html-标签"><a href="#去除-html-标签" class="headerlink" title="去除 html 标签"></a>去除 html 标签</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">removeHtmltag</span> = str =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/&lt;[^&gt;]+&gt;/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="获取-url-参数"><a href="#获取-url-参数" class="headerlink" title="获取 url 参数"></a>获取 url 参数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getQueryString</span> = name =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;(^|&amp;)&#x27;</span> + name + <span class="string">&#x27;=([^&amp;]*)(&amp;|$)&#x27;</span>, <span class="string">&#x27;i&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> search = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">split</span>(<span class="string">&#x27;?&#x27;</span>)[<span class="number">1</span>] || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> r = search.<span class="title function_">match</span>(reg) || [];</span><br><span class="line">    <span class="keyword">return</span> r[<span class="number">2</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="动态引入-js"><a href="#动态引入-js" class="headerlink" title="动态引入 js"></a>动态引入 js</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">injectScript</span> = src =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> s = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">    s.<span class="property">type</span> = <span class="string">&#x27;text/javascript&#x27;</span>;</span><br><span class="line">    s.<span class="property">async</span> = <span class="literal">true</span>;</span><br><span class="line">    s.<span class="property">src</span> = src;</span><br><span class="line">    <span class="keyword">const</span> t = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;script&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    t.<span class="property">parentNode</span>.<span class="title function_">insertBefore</span>(s, t);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="根据-url-地址下载"><a href="#根据-url-地址下载" class="headerlink" title="根据 url 地址下载"></a>根据 url 地址下载</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">download</span> = url =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> isChrome = navigator.<span class="property">userAgent</span>.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;chrome&#x27;</span>) &gt; -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> isSafari = navigator.<span class="property">userAgent</span>.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;safari&#x27;</span>) &gt; -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (isChrome || isSafari) &#123;</span><br><span class="line">        <span class="keyword">var</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        link.<span class="property">href</span> = url;</span><br><span class="line">        <span class="keyword">if</span> (link.<span class="property">download</span> !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> fileName = url.<span class="title function_">substring</span>(url.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>, url.<span class="property">length</span>);</span><br><span class="line">            link.<span class="property">download</span> = fileName;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">createEvent</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> e = <span class="variable language_">document</span>.<span class="title function_">createEvent</span>(<span class="string">&#x27;MouseEvents&#x27;</span>);</span><br><span class="line">            e.<span class="title function_">initEvent</span>(<span class="string">&#x27;click&#x27;</span>, <span class="literal">true</span>, <span class="literal">true</span>);</span><br><span class="line">            link.<span class="title function_">dispatchEvent</span>(e);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (url.<span class="title function_">indexOf</span>(<span class="string">&#x27;?&#x27;</span>) === -<span class="number">1</span>) &#123;</span><br><span class="line">        url += <span class="string">&#x27;?download&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">open</span>(url, <span class="string">&#x27;_self&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="el-是否包含某个-class"><a href="#el-是否包含某个-class" class="headerlink" title="el 是否包含某个 class"></a>el 是否包含某个 class</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">hasClass</span> = (<span class="params">el, className</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;(^|\\s)&#x27;</span> + className + <span class="string">&#x27;(\\s|$)&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> reg.<span class="title function_">test</span>(el.<span class="property">className</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="el-添加某个-class"><a href="#el-添加某个-class" class="headerlink" title="el 添加某个 class"></a>el 添加某个 class</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">addClass</span> = (<span class="params">el, className</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">hasClass</span>(el, className)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> newClass = el.<span class="property">className</span>.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">    newClass.<span class="title function_">push</span>(className);</span><br><span class="line">    el.<span class="property">className</span> = newClass.<span class="title function_">join</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="el-去除某个-class"><a href="#el-去除某个-class" class="headerlink" title="el 去除某个 class"></a>el 去除某个 class</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">removeClass</span> = (<span class="params">el, className</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_">hasClass</span>(el, className)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;(^|\\s)&#x27;</span> + className + <span class="string">&#x27;(\\s|$)&#x27;</span>, <span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">    el.<span class="property">className</span> = el.<span class="property">className</span>.<span class="title function_">replace</span>(reg, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="获取滚动的坐标"><a href="#获取滚动的坐标" class="headerlink" title="获取滚动的坐标"></a>获取滚动的坐标</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getScrollPosition</span> = (<span class="params">el = <span class="variable language_">window</span></span>) =&gt; (&#123;</span><br><span class="line">    <span class="attr">x</span>: el.<span class="property">pageXOffset</span> !== <span class="literal">undefined</span> ? el.<span class="property">pageXOffset</span> : el.<span class="property">scrollLeft</span>,</span><br><span class="line">    <span class="attr">y</span>: el.<span class="property">pageYOffset</span> !== <span class="literal">undefined</span> ? el.<span class="property">pageYOffset</span> : el.<span class="property">scrollTop</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="滚动到顶部"><a href="#滚动到顶部" class="headerlink" title="滚动到顶部"></a>滚动到顶部</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">scrollToTop</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> c = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span>;</span><br><span class="line">    <span class="keyword">if</span> (c &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">requestAnimationFrame</span>(scrollToTop);</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(<span class="number">0</span>, c - c / <span class="number">8</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="el-是否在视口范围内"><a href="#el-是否在视口范围内" class="headerlink" title="el 是否在视口范围内"></a>el 是否在视口范围内</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">elementIsVisibleInViewport</span> = (<span class="params">el, partiallyVisible = <span class="literal">false</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; top, left, bottom, right &#125; = el.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">    <span class="keyword">const</span> &#123; innerHeight, innerWidth &#125; = <span class="variable language_">window</span>;</span><br><span class="line">    <span class="keyword">return</span> partiallyVisible</span><br><span class="line">        ? ((top &gt; <span class="number">0</span> &amp;&amp; top &lt; innerHeight) || (bottom &gt; <span class="number">0</span> &amp;&amp; bottom &lt; innerHeight)) &amp;&amp;</span><br><span class="line">              ((left &gt; <span class="number">0</span> &amp;&amp; left &lt; innerWidth) || (right &gt; <span class="number">0</span> &amp;&amp; right &lt; innerWidth))</span><br><span class="line">        : top &gt;= <span class="number">0</span> &amp;&amp; left &gt;= <span class="number">0</span> &amp;&amp; bottom &lt;= innerHeight &amp;&amp; right &lt;= innerWidth;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="洗牌算法随机"><a href="#洗牌算法随机" class="headerlink" title="洗牌算法随机"></a>洗牌算法随机</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">shuffle</span> = arr =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> result = [],</span><br><span class="line">        random;</span><br><span class="line">    <span class="keyword">while</span> (arr.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        random = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * arr.<span class="property">length</span>);</span><br><span class="line">        result.<span class="title function_">push</span>(arr[random]);</span><br><span class="line">        arr.<span class="title function_">splice</span>(random, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="劫持粘贴板"><a href="#劫持粘贴板" class="headerlink" title="劫持粘贴板"></a>劫持粘贴板</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">copyTextToClipboard</span> = value =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> textArea = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;textarea&#x27;</span>);</span><br><span class="line">    textArea.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&#x27;transparent&#x27;</span>;</span><br><span class="line">    textArea.<span class="property">value</span> = value;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(textArea);</span><br><span class="line">    textArea.<span class="title function_">select</span>();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> successful = <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Oops, unable to copy&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(textArea);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="判断类型集合"><a href="#判断类型集合" class="headerlink" title="判断类型集合"></a>判断类型集合</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">checkStr</span> = (<span class="params">str, type</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;phone&#x27;</span>: <span class="comment">//手机号码</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^1[3|4|5|6|7|8|9][0-9]&#123;9&#125;$/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;tel&#x27;</span>: <span class="comment">//座机</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^(0\d&#123;2,3&#125;-\d&#123;7,8&#125;)(-\d&#123;1,4&#125;)?$/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;card&#x27;</span>: <span class="comment">//身份证</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/(^\d&#123;15&#125;$)|(^\d&#123;18&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>: <span class="comment">//密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[a-zA-Z]\w&#123;5,17&#125;$/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;postal&#x27;</span>: <span class="comment">//邮政编码</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/[1-9]\d&#123;5&#125;(?!\d)/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;QQ&#x27;</span>: <span class="comment">//QQ号</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[1-9][0-9]&#123;4,9&#125;$/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;email&#x27;</span>: <span class="comment">//邮箱</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;money&#x27;</span>: <span class="comment">//金额(小数点2位)</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^\d*(?:\.\d&#123;0,2&#125;)?$/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;URL&#x27;</span>: <span class="comment">//网址</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?/</span>.<span class="title function_">test</span>(</span><br><span class="line">                str</span><br><span class="line">            );</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;IP&#x27;</span>: <span class="comment">//IP</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.)&#123;3&#125;(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))/</span>.<span class="title function_">test</span>(</span><br><span class="line">                str</span><br><span class="line">            );</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;date&#x27;</span>: <span class="comment">//日期时间</span></span><br><span class="line">            <span class="keyword">return</span> (</span><br><span class="line">                <span class="regexp">/^(\d&#123;4&#125;)\-(\d&#123;2&#125;)\-(\d&#123;2&#125;) (\d&#123;2&#125;)(?:\:\d&#123;2&#125;|:(\d&#123;2&#125;):(\d&#123;2&#125;))$/</span>.<span class="title function_">test</span>(str) ||</span><br><span class="line">                <span class="regexp">/^(\d&#123;4&#125;)\-(\d&#123;2&#125;)\-(\d&#123;2&#125;)$/</span>.<span class="title function_">test</span>(str)</span><br><span class="line">            );</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;number&#x27;</span>: <span class="comment">//数字</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[0-9]$/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;english&#x27;</span>: <span class="comment">//英文</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[a-zA-Z]+$/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;chinese&#x27;</span>: <span class="comment">//中文</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[\\u4E00-\\u9FA5]+$/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;lower&#x27;</span>: <span class="comment">//小写</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[a-z]+$/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;upper&#x27;</span>: <span class="comment">//大写</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/^[A-Z]+$/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;HTML&#x27;</span>: <span class="comment">//HTML标记</span></span><br><span class="line">            <span class="keyword">return</span> <span class="regexp">/&lt;(&quot;[^&quot;]*&quot;|&#x27;[^&#x27;]*&#x27;|[^&#x27;&quot;&gt;])*&gt;/</span>.<span class="title function_">test</span>(str);</span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="严格的身份证校验"><a href="#严格的身份证校验" class="headerlink" title="严格的身份证校验"></a>严格的身份证校验</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isCardID</span> = sId =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="regexp">/(^\d&#123;15&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)/</span>.<span class="title function_">test</span>(sId)) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你输入的身份证长度或格式错误&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//身份证城市</span></span><br><span class="line">    <span class="keyword">var</span> aCity = &#123;</span><br><span class="line">        <span class="number">11</span>: <span class="string">&#x27;北京&#x27;</span>,</span><br><span class="line">        <span class="number">12</span>: <span class="string">&#x27;天津&#x27;</span>,</span><br><span class="line">        <span class="number">13</span>: <span class="string">&#x27;河北&#x27;</span>,</span><br><span class="line">        <span class="number">14</span>: <span class="string">&#x27;山西&#x27;</span>,</span><br><span class="line">        <span class="number">15</span>: <span class="string">&#x27;内蒙古&#x27;</span>,</span><br><span class="line">        <span class="number">21</span>: <span class="string">&#x27;辽宁&#x27;</span>,</span><br><span class="line">        <span class="number">22</span>: <span class="string">&#x27;吉林&#x27;</span>,</span><br><span class="line">        <span class="number">23</span>: <span class="string">&#x27;黑龙江&#x27;</span>,</span><br><span class="line">        <span class="number">31</span>: <span class="string">&#x27;上海&#x27;</span>,</span><br><span class="line">        <span class="number">32</span>: <span class="string">&#x27;江苏&#x27;</span>,</span><br><span class="line">        <span class="number">33</span>: <span class="string">&#x27;浙江&#x27;</span>,</span><br><span class="line">        <span class="number">34</span>: <span class="string">&#x27;安徽&#x27;</span>,</span><br><span class="line">        <span class="number">35</span>: <span class="string">&#x27;福建&#x27;</span>,</span><br><span class="line">        <span class="number">36</span>: <span class="string">&#x27;江西&#x27;</span>,</span><br><span class="line">        <span class="number">37</span>: <span class="string">&#x27;山东&#x27;</span>,</span><br><span class="line">        <span class="number">41</span>: <span class="string">&#x27;河南&#x27;</span>,</span><br><span class="line">        <span class="number">42</span>: <span class="string">&#x27;湖北&#x27;</span>,</span><br><span class="line">        <span class="number">43</span>: <span class="string">&#x27;湖南&#x27;</span>,</span><br><span class="line">        <span class="number">44</span>: <span class="string">&#x27;广东&#x27;</span>,</span><br><span class="line">        <span class="number">45</span>: <span class="string">&#x27;广西&#x27;</span>,</span><br><span class="line">        <span class="number">46</span>: <span class="string">&#x27;海南&#x27;</span>,</span><br><span class="line">        <span class="number">50</span>: <span class="string">&#x27;重庆&#x27;</span>,</span><br><span class="line">        <span class="number">51</span>: <span class="string">&#x27;四川&#x27;</span>,</span><br><span class="line">        <span class="number">52</span>: <span class="string">&#x27;贵州&#x27;</span>,</span><br><span class="line">        <span class="number">53</span>: <span class="string">&#x27;云南&#x27;</span>,</span><br><span class="line">        <span class="number">54</span>: <span class="string">&#x27;西藏&#x27;</span>,</span><br><span class="line">        <span class="number">61</span>: <span class="string">&#x27;陕西&#x27;</span>,</span><br><span class="line">        <span class="number">62</span>: <span class="string">&#x27;甘肃&#x27;</span>,</span><br><span class="line">        <span class="number">63</span>: <span class="string">&#x27;青海&#x27;</span>,</span><br><span class="line">        <span class="number">64</span>: <span class="string">&#x27;宁夏&#x27;</span>,</span><br><span class="line">        <span class="number">65</span>: <span class="string">&#x27;新疆&#x27;</span>,</span><br><span class="line">        <span class="number">71</span>: <span class="string">&#x27;台湾&#x27;</span>,</span><br><span class="line">        <span class="number">81</span>: <span class="string">&#x27;香港&#x27;</span>,</span><br><span class="line">        <span class="number">82</span>: <span class="string">&#x27;澳门&#x27;</span>,</span><br><span class="line">        <span class="number">91</span>: <span class="string">&#x27;国外&#x27;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (!aCity[<span class="built_in">parseInt</span>(sId.<span class="title function_">substr</span>(<span class="number">0</span>, <span class="number">2</span>))]) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你的身份证地区非法&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 出生日期验证</span></span><br><span class="line">    <span class="keyword">var</span> sBirthday = (</span><br><span class="line">            sId.<span class="title function_">substr</span>(<span class="number">6</span>, <span class="number">4</span>) +</span><br><span class="line">            <span class="string">&#x27;-&#x27;</span> +</span><br><span class="line">            <span class="title class_">Number</span>(sId.<span class="title function_">substr</span>(<span class="number">10</span>, <span class="number">2</span>)) +</span><br><span class="line">            <span class="string">&#x27;-&#x27;</span> +</span><br><span class="line">            <span class="title class_">Number</span>(sId.<span class="title function_">substr</span>(<span class="number">12</span>, <span class="number">2</span>))</span><br><span class="line">        ).<span class="title function_">replace</span>(<span class="regexp">/-/g</span>, <span class="string">&#x27;/&#x27;</span>),</span><br><span class="line">        d = <span class="keyword">new</span> <span class="title class_">Date</span>(sBirthday);</span><br><span class="line">    <span class="keyword">if</span> (sBirthday != d.<span class="title function_">getFullYear</span>() + <span class="string">&#x27;/&#x27;</span> + (d.<span class="title function_">getMonth</span>() + <span class="number">1</span>) + <span class="string">&#x27;/&#x27;</span> + d.<span class="title function_">getDate</span>()) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;身份证上的出生日期非法&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 身份证号码校验</span></span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>,</span><br><span class="line">        weights = [<span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>],</span><br><span class="line">        codes = <span class="string">&#x27;10X98765432&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; sId.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        sum += sId[i] * weights[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> last = codes[sum % <span class="number">11</span>]; <span class="comment">//计算出来的最后一位身份证号码</span></span><br><span class="line">    <span class="keyword">if</span> (sId[sId.<span class="property">length</span> - <span class="number">1</span>] != last) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你输入的身份证号非法&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="随机数范围"><a href="#随机数范围" class="headerlink" title="随机数范围"></a>随机数范围</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">random</span> = (<span class="params">min, max</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">arguments</span>.<span class="property">length</span> === <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(min + <span class="title class_">Math</span>.<span class="title function_">random</span>() * (max + <span class="number">1</span> - min));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="将阿拉伯数字翻译成中文的大写数字"><a href="#将阿拉伯数字翻译成中文的大写数字" class="headerlink" title="将阿拉伯数字翻译成中文的大写数字"></a>将阿拉伯数字翻译成中文的大写数字</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">numberToChinese</span> = num =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">AA</span> = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&#x27;零&#x27;</span>, <span class="string">&#x27;一&#x27;</span>, <span class="string">&#x27;二&#x27;</span>, <span class="string">&#x27;三&#x27;</span>, <span class="string">&#x27;四&#x27;</span>, <span class="string">&#x27;五&#x27;</span>, <span class="string">&#x27;六&#x27;</span>, <span class="string">&#x27;七&#x27;</span>, <span class="string">&#x27;八&#x27;</span>, <span class="string">&#x27;九&#x27;</span>, <span class="string">&#x27;十&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">BB</span> = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;十&#x27;</span>, <span class="string">&#x27;百&#x27;</span>, <span class="string">&#x27;仟&#x27;</span>, <span class="string">&#x27;萬&#x27;</span>, <span class="string">&#x27;億&#x27;</span>, <span class="string">&#x27;点&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> a = (<span class="string">&#x27;&#x27;</span> + num).<span class="title function_">replace</span>(<span class="regexp">/(^0*)/g</span>, <span class="string">&#x27;&#x27;</span>).<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>),</span><br><span class="line">        k = <span class="number">0</span>,</span><br><span class="line">        re = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = a[<span class="number">0</span>].<span class="property">length</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (k) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                re = <span class="variable constant_">BB</span>[<span class="number">7</span>] + re;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;0&#123;4&#125;//d&#123;&#x27;</span> + (a[<span class="number">0</span>].<span class="property">length</span> - i - <span class="number">1</span>) + <span class="string">&#x27;&#125;$&#x27;</span>).<span class="title function_">test</span>(a[<span class="number">0</span>]))</span><br><span class="line">                    re = <span class="variable constant_">BB</span>[<span class="number">4</span>] + re;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                re = <span class="variable constant_">BB</span>[<span class="number">5</span>] + re;</span><br><span class="line">                <span class="variable constant_">BB</span>[<span class="number">7</span>] = <span class="variable constant_">BB</span>[<span class="number">5</span>];</span><br><span class="line">                k = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (k % <span class="number">4</span> == <span class="number">2</span> &amp;&amp; a[<span class="number">0</span>].<span class="title function_">charAt</span>(i + <span class="number">2</span>) != <span class="number">0</span> &amp;&amp; a[<span class="number">0</span>].<span class="title function_">charAt</span>(i + <span class="number">1</span>) == <span class="number">0</span>) re = <span class="variable constant_">AA</span>[<span class="number">0</span>] + re;</span><br><span class="line">        <span class="keyword">if</span> (a[<span class="number">0</span>].<span class="title function_">charAt</span>(i) != <span class="number">0</span>) re = <span class="variable constant_">AA</span>[a[<span class="number">0</span>].<span class="title function_">charAt</span>(i)] + <span class="variable constant_">BB</span>[k % <span class="number">4</span>] + re;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a.<span class="property">length</span> &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 加上小数部分(如果有小数部分)</span></span><br><span class="line">        re += <span class="variable constant_">BB</span>[<span class="number">6</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; a[<span class="number">1</span>].<span class="property">length</span>; i++) re += <span class="variable constant_">AA</span>[a[<span class="number">1</span>].<span class="title function_">charAt</span>(i)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (re == <span class="string">&#x27;一十&#x27;</span>) re = <span class="string">&#x27;十&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (re.<span class="title function_">match</span>(<span class="regexp">/^一/</span>) &amp;&amp; re.<span class="property">length</span> == <span class="number">3</span>) re = re.<span class="title function_">replace</span>(<span class="string">&#x27;一&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> re;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="将数字转换为大写金额"><a href="#将数字转换为大写金额" class="headerlink" title="将数字转换为大写金额"></a>将数字转换为大写金额</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">changeToChinese</span> = <span class="title class_">Num</span> =&gt; &#123;</span><br><span class="line">    <span class="comment">//判断如果传递进来的不是字符的话转换为字符</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">Num</span> == <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">        <span class="title class_">Num</span> = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="title class_">Num</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Num</span> = <span class="title class_">Num</span>.<span class="title function_">replace</span>(<span class="regexp">/,/g</span>, <span class="string">&#x27;&#x27;</span>); <span class="comment">//替换tomoney()中的“,”</span></span><br><span class="line">    <span class="title class_">Num</span> = <span class="title class_">Num</span>.<span class="title function_">replace</span>(<span class="regexp">/ /g</span>, <span class="string">&#x27;&#x27;</span>); <span class="comment">//替换tomoney()中的空格</span></span><br><span class="line">    <span class="title class_">Num</span> = <span class="title class_">Num</span>.<span class="title function_">replace</span>(<span class="regexp">/￥/g</span>, <span class="string">&#x27;&#x27;</span>); <span class="comment">//替换掉可能出现的￥字符</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isNaN</span>(<span class="title class_">Num</span>)) &#123;</span><br><span class="line">        <span class="comment">//验证输入的字符是否为数字</span></span><br><span class="line">        <span class="comment">//alert(&quot;请检查小写金额是否正确&quot;);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//字符处理完毕后开始转换，采用前后两部分分别转换</span></span><br><span class="line">    <span class="keyword">var</span> part = <span class="title class_">String</span>(<span class="title class_">Num</span>).<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> newchar = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">//小数点前进行转化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = part[<span class="number">0</span>].<span class="property">length</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (part[<span class="number">0</span>].<span class="property">length</span> &gt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="comment">//若数量超过拾亿单位，提示</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> tmpnewchar = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">var</span> perchar = part[<span class="number">0</span>].<span class="title function_">charAt</span>(i);</span><br><span class="line">        <span class="keyword">switch</span> (perchar) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&#x27;零&#x27;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&#x27;壹&#x27;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&#x27;贰&#x27;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&#x27;叁&#x27;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&#x27;肆&#x27;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&#x27;伍&#x27;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&#x27;陆&#x27;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&#x27;柒&#x27;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&#x27;捌&#x27;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">                tmpnewchar = <span class="string">&#x27;玖&#x27;</span> + tmpnewchar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (part[<span class="number">0</span>].<span class="property">length</span> - i - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                tmpnewchar = tmpnewchar + <span class="string">&#x27;元&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&#x27;拾&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&#x27;佰&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&#x27;仟&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                tmpnewchar = tmpnewchar + <span class="string">&#x27;万&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&#x27;拾&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&#x27;佰&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                <span class="keyword">if</span> (perchar != <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&#x27;仟&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                tmpnewchar = tmpnewchar + <span class="string">&#x27;亿&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                tmpnewchar = tmpnewchar + <span class="string">&#x27;拾&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> newchar = tmpnewchar + newchar;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//小数点之后进行转化</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Num</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;.&#x27;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (part[<span class="number">1</span>].<span class="property">length</span> &gt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="comment">// alert(&quot;小数点之后只能保留两位,系统将自动截断&quot;);</span></span><br><span class="line">            part[<span class="number">1</span>] = part[<span class="number">1</span>].<span class="title function_">substr</span>(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; part[<span class="number">1</span>].<span class="property">length</span>; i++) &#123;</span><br><span class="line">            tmpnewchar = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            perchar = part[<span class="number">1</span>].<span class="title function_">charAt</span>(i);</span><br><span class="line">            <span class="keyword">switch</span> (perchar) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&#x27;零&#x27;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&#x27;壹&#x27;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&#x27;贰&#x27;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&#x27;叁&#x27;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&#x27;肆&#x27;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&#x27;伍&#x27;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&#x27;陆&#x27;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&#x27;柒&#x27;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&#x27;捌&#x27;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">                    tmpnewchar = <span class="string">&#x27;玖&#x27;</span> + tmpnewchar;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>) tmpnewchar = tmpnewchar + <span class="string">&#x27;角&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">1</span>) tmpnewchar = tmpnewchar + <span class="string">&#x27;分&#x27;</span>;</span><br><span class="line">            newchar = newchar + tmpnewchar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//替换所有无用汉字</span></span><br><span class="line">    <span class="keyword">while</span> (newchar.<span class="title function_">search</span>(<span class="string">&#x27;零零&#x27;</span>) != -<span class="number">1</span>) newchar = newchar.<span class="title function_">replace</span>(<span class="string">&#x27;零零&#x27;</span>, <span class="string">&#x27;零&#x27;</span>);</span><br><span class="line">    newchar = newchar.<span class="title function_">replace</span>(<span class="string">&#x27;零亿&#x27;</span>, <span class="string">&#x27;亿&#x27;</span>);</span><br><span class="line">    newchar = newchar.<span class="title function_">replace</span>(<span class="string">&#x27;亿万&#x27;</span>, <span class="string">&#x27;亿&#x27;</span>);</span><br><span class="line">    newchar = newchar.<span class="title function_">replace</span>(<span class="string">&#x27;零万&#x27;</span>, <span class="string">&#x27;万&#x27;</span>);</span><br><span class="line">    newchar = newchar.<span class="title function_">replace</span>(<span class="string">&#x27;零元&#x27;</span>, <span class="string">&#x27;元&#x27;</span>);</span><br><span class="line">    newchar = newchar.<span class="title function_">replace</span>(<span class="string">&#x27;零角&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    newchar = newchar.<span class="title function_">replace</span>(<span class="string">&#x27;零分&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (newchar.<span class="title function_">charAt</span>(newchar.<span class="property">length</span> - <span class="number">1</span>) == <span class="string">&#x27;元&#x27;</span>) &#123;</span><br><span class="line">        newchar = newchar + <span class="string">&#x27;整&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newchar;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="判断一个元素是否在数组中"><a href="#判断一个元素是否在数组中" class="headerlink" title="判断一个元素是否在数组中"></a>判断一个元素是否在数组中</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">contains</span> = (<span class="params">arr, val</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">indexOf</span>(val) != -<span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="数组排序，-type-1：从小到大-2：从大到小-3：随机"><a href="#数组排序，-type-1：从小到大-2：从大到小-3：随机" class="headerlink" title="数组排序，{type} 1：从小到大 2：从大到小 3：随机"></a>数组排序，<code>&#123;type&#125; 1：从小到大 2：从大到小 3：随机</code></h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">sort</span> = (<span class="params">arr, type = <span class="number">1</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> a - b;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> b - a;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">random</span>() - <span class="number">0.5</span>;</span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">                <span class="keyword">return</span> arr;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">unique</span> = arr =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;from&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="keyword">new</span> <span class="title class_">Set</span>(arr));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> n = &#123;&#125;,</span><br><span class="line">            r = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!n[arr[i]]) &#123;</span><br><span class="line">                n[arr[i]] = <span class="literal">true</span>;</span><br><span class="line">                r.<span class="title function_">push</span>(arr[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="求两个集合的并集"><a href="#求两个集合的并集" class="headerlink" title="求两个集合的并集"></a>求两个集合的并集</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">union</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> newArr = a.<span class="title function_">concat</span>(b);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">unique</span>(newArr);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="求两个集合的交集"><a href="#求两个集合的交集" class="headerlink" title="求两个集合的交集"></a>求两个集合的交集</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">intersect</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">    a = <span class="variable language_">this</span>.<span class="title function_">unique</span>(a);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">map</span>(a, <span class="keyword">function</span> (<span class="params">o</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> _this.<span class="title function_">contains</span>(b, o) ? o : <span class="literal">null</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="删除其中一个元素"><a href="#删除其中一个元素" class="headerlink" title="删除其中一个元素"></a>删除其中一个元素</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">remove</span> = (<span class="params">arr, ele</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> index = arr.<span class="title function_">indexOf</span>(ele);</span><br><span class="line">    <span class="keyword">if</span> (index &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">        arr.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="将类数组转换为数组"><a href="#将类数组转换为数组" class="headerlink" title="将类数组转换为数组"></a>将类数组转换为数组</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">formArray</span> = ary =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(ary)) &#123;</span><br><span class="line">        arr = ary;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        arr = <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(ary);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="最大值"><a href="#最大值" class="headerlink" title="最大值"></a>最大值</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">max</span> = arr =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="literal">null</span>, arr);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="最小值"><a href="#最小值" class="headerlink" title="最小值"></a>最小值</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">min</span> = arr =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="property">min</span>.<span class="title function_">apply</span>(<span class="literal">null</span>, arr);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="求和"><a href="#求和" class="headerlink" title="求和"></a>求和</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">sum</span> = arr =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">pre, cur</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pre + cur;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="平均值"><a href="#平均值" class="headerlink" title="平均值"></a>平均值</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">average</span> = arr =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">sum</span>(arr) / arr.<span class="property">length</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="去除空格-type-1-所有空格-2-前后空格-3-前空格-4-后空格"><a href="#去除空格-type-1-所有空格-2-前后空格-3-前空格-4-后空格" class="headerlink" title="去除空格,type: 1-所有空格 2-前后空格 3-前空格 4-后空格"></a>去除空格,<code>type: 1-所有空格 2-前后空格 3-前空格 4-后空格</code></h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">trim</span> = (<span class="params">str, type</span>) =&gt; &#123;</span><br><span class="line">    type = type || <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/\s+/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/(^\s*)|(\s*$)/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/(^\s*)/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/(\s*$)/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="字符转换，type-1-首字母大写-2：首字母小写-3：大小写转换-4：全部大写-5：全部小写"><a href="#字符转换，type-1-首字母大写-2：首字母小写-3：大小写转换-4：全部大写-5：全部小写" class="headerlink" title="字符转换，type: 1:首字母大写 2：首字母小写 3：大小写转换 4：全部大写 5：全部小写"></a>字符转换，<code>type: 1:首字母大写 2：首字母小写 3：大小写转换 4：全部大写 5：全部小写</code></h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">changeCase</span> = (<span class="params">str, type</span>) =&gt; &#123;</span><br><span class="line">    type = type || <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/\b\w+\b/g</span>, <span class="keyword">function</span> (<span class="params">word</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> word.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">1</span>).<span class="title function_">toUpperCase</span>() + word.<span class="title function_">substring</span>(<span class="number">1</span>).<span class="title function_">toLowerCase</span>();</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/\b\w+\b/g</span>, <span class="keyword">function</span> (<span class="params">word</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> word.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">1</span>).<span class="title function_">toLowerCase</span>() + word.<span class="title function_">substring</span>(<span class="number">1</span>).<span class="title function_">toUpperCase</span>();</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">return</span> str</span><br><span class="line">                .<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                .<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">word</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="regexp">/[a-z]/</span>.<span class="title function_">test</span>(word)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> word.<span class="title function_">toUpperCase</span>();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> word.<span class="title function_">toLowerCase</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">return</span> str.<span class="title function_">toUpperCase</span>();</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">return</span> str.<span class="title function_">toLowerCase</span>();</span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="检测密码强度"><a href="#检测密码强度" class="headerlink" title="检测密码强度"></a>检测密码强度</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">checkPwd</span> = str =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">Lv</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (str.<span class="property">length</span> &lt; <span class="number">6</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Lv</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/[0-9]/</span>.<span class="title function_">test</span>(str)) &#123;</span><br><span class="line">        <span class="title class_">Lv</span>++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/[a-z]/</span>.<span class="title function_">test</span>(str)) &#123;</span><br><span class="line">        <span class="title class_">Lv</span>++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/[A-Z]/</span>.<span class="title function_">test</span>(str)) &#123;</span><br><span class="line">        <span class="title class_">Lv</span>++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/[\.|-|_]/</span>.<span class="title function_">test</span>(str)) &#123;</span><br><span class="line">        <span class="title class_">Lv</span>++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Lv</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="函数节流器"><a href="#函数节流器" class="headerlink" title="函数节流器"></a>函数节流器</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">debouncer</span> = (<span class="params">fn, time, interval = <span class="number">200</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (time - (<span class="variable language_">window</span>.<span class="property">debounceTimestamp</span> || <span class="number">0</span>) &gt; interval) &#123;</span><br><span class="line">        fn &amp;&amp; <span class="title function_">fn</span>();</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">debounceTimestamp</span> = time;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="在字符串中插入新字符串"><a href="#在字符串中插入新字符串" class="headerlink" title="在字符串中插入新字符串"></a>在字符串中插入新字符串</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">insertStr</span> = (<span class="params">soure, index, newStr</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> str = soure.<span class="title function_">slice</span>(<span class="number">0</span>, index) + newStr + soure.<span class="title function_">slice</span>(index);</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="判断两个对象是否键值相同"><a href="#判断两个对象是否键值相同" class="headerlink" title="判断两个对象是否键值相同"></a>判断两个对象是否键值相同</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isObjectEqual</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> aProps = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(a);</span><br><span class="line">    <span class="keyword">var</span> bProps = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(b);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (aProps.<span class="property">length</span> !== bProps.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; aProps.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> propName = aProps[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a[propName] !== b[propName]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="16-进制颜色转-RGBRGBA-字符串"><a href="#16-进制颜色转-RGBRGBA-字符串" class="headerlink" title="16 进制颜色转 RGBRGBA 字符串"></a>16 进制颜色转 RGBRGBA 字符串</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">colorToRGB</span> = (<span class="params">val, opa</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> pattern = <span class="regexp">/^(#?)[a-fA-F0-9]&#123;6&#125;$/</span>; <span class="comment">//16进制颜色值校验规则</span></span><br><span class="line">    <span class="keyword">var</span> isOpa = <span class="keyword">typeof</span> opa == <span class="string">&#x27;number&#x27;</span>; <span class="comment">//判断是否有设置不透明度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!pattern.<span class="title function_">test</span>(val)) &#123;</span><br><span class="line">        <span class="comment">//如果值不符合规则返回空字符</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> v = val.<span class="title function_">replace</span>(<span class="regexp">/#/</span>, <span class="string">&#x27;&#x27;</span>); <span class="comment">//如果有#号先去除#号</span></span><br><span class="line">    <span class="keyword">var</span> rgbArr = [];</span><br><span class="line">    <span class="keyword">var</span> rgbStr = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> item = v.<span class="title function_">substring</span>(i * <span class="number">2</span>, i * <span class="number">2</span> + <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> num = <span class="built_in">parseInt</span>(item, <span class="number">16</span>);</span><br><span class="line">        rgbArr.<span class="title function_">push</span>(num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rgbStr = rgbArr.<span class="title function_">join</span>();</span><br><span class="line">    rgbStr = <span class="string">&#x27;rgb&#x27;</span> + (isOpa ? <span class="string">&#x27;a&#x27;</span> : <span class="string">&#x27;&#x27;</span>) + <span class="string">&#x27;(&#x27;</span> + rgbStr + (isOpa ? <span class="string">&#x27;,&#x27;</span> + opa : <span class="string">&#x27;&#x27;</span>) + <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> rgbStr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="追加-url-参数"><a href="#追加-url-参数" class="headerlink" title="追加 url 参数"></a>追加 url 参数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">appendQuery</span> = (<span class="params">url, key, value</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> options = key;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> options == <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">        options = &#123;&#125;;</span><br><span class="line">        options[key] = value;</span><br><span class="line">    &#125;</span><br><span class="line">    options = $.<span class="title function_">param</span>(options);</span><br><span class="line">    <span class="keyword">if</span> (url.<span class="title function_">includes</span>(<span class="string">&#x27;?&#x27;</span>)) &#123;</span><br><span class="line">        url += <span class="string">&#x27;&amp;&#x27;</span> + options;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        url += <span class="string">&#x27;?&#x27;</span> + options;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> url;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p><strong>最后</strong></p></blockquote><p>来源知乎上的一篇文章，觉得挺实用的，就搬来这了</p><p><a href="https://www.zhihu.com/question/64606609/answer/1760237940">点击访问</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js赖加载</title>
      <link href="/posts/4422.html"/>
      <url>/posts/4422.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>解释:</strong><br>啥叫懒加载呢？字面意思就是：懒惰加载, 举个栗子：</p></blockquote><p>你去衣物实体店买东西，老板/工作人员肯定是拿出你喜欢的衣物，不可能把整个仓库的衣物都拿出来。</p><blockquote><p><strong>Tip</strong><br>赖加载又称按需加载</p></blockquote><hr><blockquote><p><strong>常用的场景就是：</strong></p></blockquote><p><em>很多页面有很多图片，只有你眼睛能看到地方才会加载图片，还没看到的地方，就先不加载，毕竟谁能保证，你肯定会完完整整得把页面的图片全部看一遍呢？你中途如果不看了，岂不是白加载了？</em></p><p><strong>本文案例也是围绕这个场景实现</strong></p><hr><blockquote><p><strong>优点:</strong></p></blockquote><ul><li><em>页面加载速度快</em></li><li><em>减轻服务器压力</em></li><li><em>节约流量</em></li><li><em>用户体验好…</em></li></ul><hr><blockquote><p><strong>接着：</strong></p></blockquote><p>我现在都喜欢用 Jquery，它实在是太方便了。记得第一次学 Javascript 的时候，原生的 Api 实在是有些繁琐，对第一次接触的人来说，实在是太长了，何况咱英语也就小学的水平。</p><p><strong><em>原生的</em></strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;k&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong><em>Jquery 的</em></strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;#k&#x27;</span>);</span><br></pre></td></tr></table></figure><p>这区别，所以应该不止我喜欢 jQuery 吧？</p><p>由于 jQuery 实在是太好用了，然后有很多大神，就写了很多插件，在 jQuery 的基础上写了很多的库!</p><p>比如这个网站上全是：<a href="https://www.jq22.com/" title="点击访问">点击访问</a></p><p>很多常用的需求，都能给你整出插件，比如啥：瀑布流呀，懒加载呀，轮播图呀…</p><p>有一说一，确实非常方便！！！</p><p>咳咳，说了些题外话 ，我也是小白，这方面的技术不是很懂。</p><p><strong>我们今天的主题是：<code>用原生/jq的lazyload插件写图片懒加载</code></strong></p><blockquote><p><strong>那么，上代码</strong></p></blockquote><p><strong>jQuery + <code>lazyload</code>库</strong></p><p><em>CSS</em></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>HTML</em></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-original</span>=<span class="string">&quot;01.jpg&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-original</span>=<span class="string">&quot;02.jpg&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-original</span>=<span class="string">&quot;03.jpg&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-original</span>=<span class="string">&quot;04.jpg&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-original</span>=<span class="string">&quot;05.jpg&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-original</span>=<span class="string">&quot;06.jpg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><blockquote><p>TIP<br><code>data-original</code>标签，基于 jQuery 的图片延迟加载插件，在用户滚动页面到图片之后才进行加载。对于有较多的图片的网页，使用图片延迟加载，能有效的提高页面加载速度。</p></blockquote><hr><blockquote><p>注意事项:<br><code>需要真正实现图片延迟加载，必须将真实图片地址写在data-original属性中。若src与·data-original·相同，则只是—个特效而已，并不达到延迟加载的功能。</code></p></blockquote><p><em>JavaScript</em></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;=./jQuery.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./jq.lazyload.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   ($)(<span class="function"><span class="params">_</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     $(<span class="string">&quot;img&quot;</span>).<span class="title function_">lazyload</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       <span class="comment">//渐变加载</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       <span class="attr">effect</span>: <span class="string">&quot;fadeIn&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p><strong>总结：</strong><br>十分无脑，不用关心原理，几行代码就能出效果.</p></blockquote><p><strong>原生</strong><br><em>css</em></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="comment">/* 设置宽高看能见效 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="comment">/* 为了有渐变显示 */</span></span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.4s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>HTML</em></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;01.jpg&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;02.jpg&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;03.jpg&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;04.jpg&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;05.jpg&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;06.jpg&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>JavaScript</em></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">// 获取img dom</span></span><br><span class="line"><span class="keyword">let</span> el = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;img&quot;</span>);</span><br><span class="line"><span class="comment">// 创建IntersectionObserver女朋友</span></span><br><span class="line"><span class="keyword">let</span> observer = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(<span class="function"><span class="params">entries</span> =&gt;</span> &#123;</span><br><span class="line">entries.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 当前元素可见时</span></span><br><span class="line"><span class="keyword">if</span> (item.<span class="property">isIntersecting</span> == <span class="literal">true</span>) &#123;</span><br><span class="line"><span class="comment">// 获取图片链接</span></span><br><span class="line"><span class="keyword">let</span> data_src = item.<span class="property">target</span>.<span class="title function_">getAttribute</span>(<span class="string">&quot;data-src&quot;</span>)</span><br><span class="line"><span class="comment">// 设置图片src属性</span></span><br><span class="line">item.<span class="property">target</span>.<span class="title function_">setAttribute</span>(<span class="string">&quot;src&quot;</span>, data_src)</span><br><span class="line"><span class="comment">// 将图片设置为完全可见</span></span><br><span class="line">item.<span class="property">target</span>.<span class="property">style</span>.<span class="property">opacity</span> = <span class="number">1</span></span><br><span class="line"><span class="comment">// 关闭当前标签的监视</span></span><br><span class="line">observer.<span class="title function_">unobserve</span>(item.<span class="property">target</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 将所有的图片标签都套上</span></span><br><span class="line">el.<span class="title function_">forEach</span>(<span class="function">(<span class="params">e, i</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 开启监视图片标签</span></span><br><span class="line">observer.<span class="title function_">observe</span>(e)</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p><strong> 总结：</strong> 相当轻便，低耦合</p></blockquote><ul><li>这里用到了一个 Js 的类：IntersectionObserver，有兴趣可以去详细了解了解</li></ul><hr><blockquote><p><strong>最后</strong></p></blockquote><pre><code>其实这些东西，没有什么优劣之分，仅仅只是工具，或者说是一种技术手段/方案，你觉得哪种合适就用哪种。</code></pre><p>我学习一种学知识的时候，也是直接<strong>懵了</strong>完全不懂，然后慢慢琢磨，发现，也不是那么完全理解不了的！</p><p><em>我很享受这种堆积在心底很久的困扰被解开的那一瞬间-的感觉。</em></p><p>就是那种突然醒悟，脑洞打开了.</p><blockquote><p><strong>古人云：</strong>朝闻道，夕死可矣</p></blockquote><p>读书的时候不懂，现在逐渐开始认同了</p><p><strong><code>加油!</code></strong>此刻的自己一定比过去那个时候的自己又获得提升，向更完美的自己迈进了一步！</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最实用的JavaScript一行代码</title>
      <link href="/posts/8bf2.html"/>
      <url>/posts/8bf2.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="tip info"><p>Talk is cheap, show me the code!<br>很简单：用简单的逻辑和尽可能少的代码行来解决一个复杂的问题。随着 ES6 箭头函数的引入，可以创建看起来优雅而简单的单行代码。<br>在今天的文章中，我将与你一起来学习 11 个罕见但功能强大的单行代码。现在，准备好，让我们开始吧！</p></div><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><div class="tip warning faa-horizontal animated-hover"><p>获取字符串中的字符数</p></div><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">characterCount</span> = (<span class="params">str, char</span>) =&gt; str.<span class="title function_">split</span>(char).<span class="property">length</span> - <span class="number">1</span>;</span><br></pre></td></tr></table></figure><blockquote><p>获取字符数是一个有用的实用程序，在许多情况下都很有用，我们可以使用它来获取空格数和随后的单词数，或者这可用于获取字符串中某个分隔符的计数。<br>这个想法很简单，我们使用传递的参数 char 拆分字符串并获取返回数组的长度。由于每次将字符串拆分，都会比拆分器多一个；所以减去 1，我们有一个 characterCount 单行。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>检查对象是否为空</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">isEmpty</span> = obj =&gt; <span class="title class_">Reflect</span>.<span class="title function_">ownKeys</span>(obj).<span class="property">length</span> === <span class="number">0</span> &amp;&amp; obj.<span class="property">constructor</span> === <span class="title class_">Object</span>;</span><br></pre></td></tr></table></figure><blockquote><p>检查对象的空性实际上比看起来要困难得多，即使对象为空，每次检查对象是否等于 {} 也会返回 false。<br>幸运的是，下面的单行代码正是我们想要的。<br>在这一行中，我们检查对象的键长度是否等于 0，以及传递的参数是否为实际对象。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>等待一段时间再执行</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">wait</span> = <span class="keyword">async</span> milliseconds =&gt; <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, milliseconds));</span><br></pre></td></tr></table></figure><blockquote><p>在这一行中，我们将通过一些异步编程来弄脏我们的代码。这个想法很简单，在运行代码时，如果你想等待一定的时间，这里是等待单行<br>在等待单行中，我们创建一个承诺并在给定的时间后使用 setTimeout 函数解决它。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>获取两个日期之间的日差</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">daysBetween</span> = (<span class="params">date1, date2</span>) =&gt; <span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(date1 - date2) / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>));</span><br></pre></td></tr></table></figure><blockquote><p>在开发 Web 应用程序时，日期通常是实现起来最令人困惑的部分，因为有许多概念很容易被误算。<br>这是一个强大的单线计算两个日期之间的天差。但还有更多事情要做，正如我所做的那样，你可以创建自己的单线来计算月、年差异等。</p><p>这种单线背后的逻辑很容易理解。当两个日期相减时，返回值是以毫秒为单位的差值，要将毫秒转换为天，我们必须将其除以毫秒、秒、分钟和小时。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>检查设备上的触摸支持</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">touchSupported</span> = (<span class="params"></span>) =&gt;</span><br><span class="line">    <span class="string">&#x27;ontouchstart&#x27;</span> <span class="keyword">in</span> <span class="variable language_">window</span> || (<span class="title class_">DocumentTouch</span> &amp;&amp; <span class="variable language_">document</span> <span class="keyword">instanceof</span> <span class="title class_">DocumentTouch</span>);</span><br></pre></td></tr></table></figure><blockquote><p>随着可以连接到互联网的设备越来越多，创建响应式网站的必要性也在增加。20 年前，开发者应该考虑网站的桌面版本，但今天超过 50% 的网络流量来自触摸移动设备。因此，基于设备的触控支持采取一些行动是一个非常重要的概念。<br>在这一行中，我们正在检查文档是否支持 touchstart 事件。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>在元素后插入 HTML 字符串</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">insertHTMLAfter</span> = (<span class="params">html, el</span>) =&gt; el.<span class="title function_">insertAdjacentHTML</span>(<span class="string">&#x27;afterend&#x27;</span>, html);</span><br></pre></td></tr></table></figure><blockquote><p>开发 Web 应用程序时，使用 JavaScript 更新 DOM 是一件很常见的事情。有一些基本的方法可以完成工作，但是，当情况变得复杂时，就很难克服。<br>这是一个在 HTML 元素之后立即注入 HTML 字符串的单行代码。经过几分钟的思考和谷歌搜索，我相信你可以找到这个单线的以前版本。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>随机排列数组</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">shuffle</span> = arr =&gt; arr.<span class="title function_">sort</span>(<span class="function">() =&gt;</span> <span class="number">0.5</span> - <span class="title class_">Math</span>.<span class="title function_">random</span>());</span><br></pre></td></tr></table></figure><blockquote><p>在开发中打乱一组数据是一个常见的情况，你可以随时遇到，不幸的是，JavaScript 中没有内置数组的 shuffle 方法。<br>但是，这里有一个你可以每天使用的 shuffle one-liner<br>它利用数组的排序方法，在数组的前一个元素之前或之后随机排序。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>获取随机布尔值</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getRandomBoolean</span> = (<span class="params"></span>) =&gt; <span class="title class_">Math</span>.<span class="title function_">random</span>() &gt;= <span class="number">0.5</span>;</span><br></pre></td></tr></table></figure><blockquote><p>在开发时，尤其是在写游戏代码时，有时，我们会想随机采取行动。在这些情况下，下面的单行代码非常方便。<br>上面的单行代码有 50/50 的机会返回真或假。因为生成的随机数大于 0.5 的概率等于变小的概率。</p><p>然而，例如，如果你想得到一个概率为 70% 的随机布尔值，那么你可以简单地将 0.5 更改为 0.7 等等。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>计算数组的平均值</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">average</span> = arr =&gt; arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b) / arr.<span class="property">length</span>;</span><br></pre></td></tr></table></figure><blockquote><p>可以使用多种方法计算数组的平均值。但逻辑对所有人都是一样的，我们必须得到数组及其长度的总和；然后，通过除法给出平均值。<br>在平均单行中，我们使用 reduce 来获取一行中数组的总和，而不是使用循环。然后，我们将它除以数组长度，这是一个数组的平均值。</p></blockquote><p><p></p><br><div class="tip warning faa-horizontal animated-hover"><p>每隔 4 个空 1 格美团卷码</p></div></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">[...<span class="string">&#x27;088896520132&#x27;</span>].<span class="title function_">reduce</span>(<span class="function">(<span class="params">res, itm, idx</span>) =&gt;</span> (res += idx % <span class="number">4</span> === <span class="number">1</span> ? <span class="string">`<span class="subst">$&#123;itm&#125;</span> `</span> : itm), <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="comment">// 08 8896 5201 32</span></span><br></pre></td></tr></table></figure><p>转载: <a href="https://www.vvhan.com/practical-js.html">韩小韩</a><br><div class="note info simple"><p>END</p></div></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>侧边栏标签修改</title>
      <link href="/posts/de85.html"/>
      <url>/posts/de85.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>逛别人博客时经常看见标签页后面加了一个数量，起初因为懒没弄，但是最近几天感觉标签确实有一点的不好看，于是决定改一下。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><div class="note info simple"><div class="hide-block"><button type="button" class="hide-button" style="">预览效果    </button><div class="hide-content"><div class="img-wrap"><div class="img-bg"><img class="img" src="https://image.anzhiy.cn/adminuploads/1/2022/09/03/6312d3e52835c.webp"/></div></div></div></div></div><details class="folding-tag" cyan><summary> 点击查看参考教程 </summary>              <div class='content'>              <p>基于安知鱼方案进行修改</p><div class="table-container"><table><thead><tr><th><strong>参考方向</strong></th><th><strong>教程原贴</strong></th></tr></thead><tbody><tr><td>安知鱼原教程</td><td><a href="https://anzhiy.cn/posts/7d58.html">侧边栏标签修改</a></td></tr></tbody></table></div>              </div>            </details><details class="folding-tag" cyan><summary> 点击查看侧边栏标签修改魔改教程 </summary>              <div class='content'>              <div class="tabs" id="card_tags"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#card_tags-1">page.js</button></li><li class="tab"><button type="button" data-href="#card_tags-2">css</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="card_tags-1"><p><strong>打开 <span class='p red'>butterfly\scripts\helpers\page.js</span> 文件</strong></p><p><strong>如果你只是想添加一个数量的话，在第 52 行的<span class='p red'>${tag.name}</span> 后增加 <span class='p red'>(${tag.length})</span> ,如下:</strong></p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">  const length = sizes.length - 1</span><br><span class="line"><span class="deletion">- source.forEach(tag =&gt; &#123;</span></span><br><span class="line"><span class="addition">+ source.sort(&#x27;name&#x27;).forEach(tag =&gt; &#123;</span></span><br><span class="line">    const ratio = length ? sizes.indexOf(tag.length) / length : 0</span><br><span class="line">    const size = minfontsize + ((maxfontsize - minfontsize) * ratio)</span><br><span class="line">    let style = `font-size: $&#123;parseFloat(size.toFixed(2))&#125;$&#123;unit&#125;;`</span><br><span class="line">    const color = &#x27;rgb(&#x27; + Math.floor(Math.random() * 201) + &#x27;, &#x27; + Math.floor(Math.random() * 201) + &#x27;, &#x27; + Math.floor(Math.random() * 201) + &#x27;)&#x27; // 0,0,0 -&gt; 200,200,200</span><br><span class="line">    style += ` color: $&#123;color&#125;`</span><br><span class="line"><span class="deletion">-   result += `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;/a&gt;`</span></span><br><span class="line"><span class="addition">+   result += `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;sup&gt;$&#123;tag.length&#125;&lt;/sup&gt;&lt;/a&gt;`</span></span><br><span class="line">  &#125;)</span><br><span class="line">  return result</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="card_tags-2"><p><strong>加入以下 css</strong></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* tags样式 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--anzhiyu-fontcolor) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.05rem</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--anzhiyu-theme);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--anzhiyu-white) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--anzhiyu-shadow-theme);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">1300px</span>) &#123;</span><br><span class="line">    <span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.03</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.97</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-tag-cloud</span> <span class="selector-tag">a</span> <span class="selector-tag">sup</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.4</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><del>当然,你也可以按照自己的需要来书写 css 样式.</del></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><h2 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h2><p>我自己魔改时遇到的一个 <span class='p blue'>bug</span>。</p><p>修改了 <span class='p gray'>page.js</span> 文件,但是并没有起到效果;就很头痛!</p><blockquote><del>修改方案:</del></blockquote><p>打开文件 <mark class="hl-label orange">=>\node_modules\hexo\lib\plugins\helper\tagcloud.js</mark> </p><p>找到有关于标签 html 属性生成的代码，并添加 <mark class="hl-label orange">${tag.length}</mark>  后执行 hexo 三连。</p><p><img src="https://img.wwery.com/Sugar/8vVjkPng.png" alt=""></p><u>最终解决问题!</u>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>何为框架</title>
      <link href="/posts/9968.html"/>
      <url>/posts/9968.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p><strong>何为框架？为什么要学习框架技术？</strong></p></blockquote><p><em>本文将会围绕这个问题展开！</em></p><h2 id="框架的概念及作用"><a href="#框架的概念及作用" class="headerlink" title="框架的概念及作用"></a>框架的概念及作用</h2><blockquote><p><strong>概念：</strong></p></blockquote><ul><li><p>框架（Framework）是一种警告校验的、具有特定功能的半成品软件。</p></li><li><p>框架针对特定的功能或架构需要，对基础代码进行了封装并提供了相应的 <strong>API</strong> ，不同的框架能够提供不同的功能。</p></li><li><p>框架虽然可以实现特定功能，但又不是一套完整可运行的程序。</p></li><li><p>开发者需要在框架提供的功能或架构基础上，加入具体的业务逻辑，从而开发出一套自己的应用软件。</p></li></ul><blockquote><p><strong>作用：</strong></p></blockquote><ul><li>使用框架可以节省大量基础代码的编写工作，从而提高开发效率和开放速度。</li><li>为构建新的应用程序提供了极大的便利。</li><li>基于框架开发应用程序，框架就是应用的 <strong>“骨干”</strong> ，开发人员可以在这个 <strong>“骨干”</strong> 上添加自己的东西，组合出符合自己需要的应用程序。</li><li>框架提供了可以拿来即用的工具，更重要的是，框架提供了优秀的、可重用的设计。<strong>就如同想要制作一份看起来具有专业水准的 PPT 演示文稿 ，最便捷有效的方法就是使用 PPT 模板</strong> ，使用模板创建出来的 PPT 以及具有良好的设计风格，我们只需要把必要的信息套用进去即可。</li></ul><blockquote><p><strong>基于模板制作的 PPT 的优点：</strong></p></blockquote><ol><li>不必考虑布局、配色的等设计相关的专业问题，降低了制作难度。</li><li>可以专注于文档的内容，提高了效率。</li><li>新手也可以快速上手。</li></ol><p>此外，框架还有另一层面的价值，它使混乱的东西变的结构化、规范化。正如 <code>WebWork</code> 作者 <code>JBoos</code> 架构师 <code>Rickaed Oberg</code> 所说： <strong>“框架的强大之处不是源自它能让你做什么，而是它不能让你做什么”。</strong> 如果没有框架的话，N 个人将写出 N 中实现代码，且代码质量难免良莠不齐，而框架提供了优秀的架构设计，保证了应用程序的风格统一，且为基础功能提供了优质的实现。</p><p><strong>框架在规范与创新之间维持着合适的平衡，从企业的角度，这降低了人员培训成本，软件开发成本及维护，升级成本….</strong></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p><strong>使用框架技术优势的总结：</strong></p></blockquote><ol><li>无需考虑开发中公共问题、基础问题，框架已经做好了实现。</li><li>库专注于项目的业务逻辑设计，提升开发效率，并且有助于提高核心业务的开发质量。</li><li>项目架构统一，便于沟通协作，便于修改维护。</li><li>框架汇集了软件分析、设计、实现等多方面的优秀经验，可以帮助开发快速构建优美、运行稳定且性能优良的高质量应用。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术相关 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IE6/IE7不支持first-child的解决办法</title>
      <link href="/posts/85a2.html"/>
      <url>/posts/85a2.html</url>
      
        <content type="html"><![CDATA[<p><strong>IE6/IE7 不支持 first-child 的解决办法</strong></p><p><strong><em>不废话,上代码！</em></strong></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#sidebar</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">    <span class="attribute">border-top-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#sidebar</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">border-top-width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-top-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#dad3d0</span>;</span><br><span class="line">    *<span class="attribute">border-top-style</span>: <span class="built_in">expression</span>(this.previousSibling == null ? <span class="string">&#x27;none&#x27;</span>: <span class="string">&#x27;solid&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>给你们科普一下 (๑•̀ㅂ•́)و✧）</strong></p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">previousSibling</span>; <span class="comment">// 可以获取到元素的兄节点，如果不存在兄节点，就说明这个元素为第一个节点。而expression是css表达式，可以理解为在css里可以书写javascript语句，那么</span></span><br><span class="line"><span class="title function_">expression</span>(<span class="variable language_">this</span>.<span class="property">previousSibling</span> == <span class="literal">null</span> ? <span class="string">&#x27;none&#x27;</span> : <span class="string">&#x27;solid&#x27;</span>); <span class="comment">// 的意思是，如果这个元素没有兄节点（也就是它是第一个节点），返回none，否则返回solid</span></span><br></pre></td></tr></table></figure><p><em>只有 IE6 和 IE7 能识别此行代码</em></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术相关 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis框架的缓存</title>
      <link href="/posts/5c18.html"/>
      <url>/posts/5c18.html</url>
      
        <content type="html"><![CDATA[<p><em>正如大多数框架一样，<code>Mybatis</code> 框架也提供了缓存！</em></p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p><code>Mybatis</code> 框架的缓存分为两个级别。</p><h3 id="一级缓存"><a href="#一级缓存" class="headerlink" title="一级缓存"></a>一级缓存</h3><blockquote><p><strong><code>Mybatis</code> 框架的一级缓存是默认是开启的。</strong></p></blockquote><p><code>Mybatis</code> 框架的一级缓存是基于 <code>PerpetualCache</code> 的 <code>HashMap</code> 本地缓存，默认是 <strong>SqlSession</strong> 级别的缓存，在 <strong>SqlSession</strong> 的生命周期内有效。当 <strong>SqlSession</strong> 关闭后，该 <strong>SqlSession</strong> 中所有的一级缓存会被清空。</p><h3 id="二级缓存"><a href="#二级缓存" class="headerlink" title="二级缓存"></a>二级缓存</h3><blockquote><p><strong><code>Mybatis</code> 框架的二级缓存是默认是关闭的，</strong> 使用是需要在 <code>Mybatis</code> 核心配置文件中设置开启！</p></blockquote><p>二级缓存是 <strong>SqlSessionFactory</strong> 级别的，其作用域超出 <strong>SqlSession</strong> 范围，缓存中的数据可以被所有 <strong>SqlSession</strong> 共享。</p><h2 id="二级缓存使用方法"><a href="#二级缓存使用方法" class="headerlink" title="二级缓存使用方法"></a>二级缓存使用方法</h2><p>在 <code>Mybatis</code> 框架中使用二级缓存需要一下几个环节：</p><ol><li><p>在 <code>Mybatis</code> 框架的配置文件中设置全局开启二级缓存，代码如下</p> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>即使全局开启了二级缓存，默认情况下也是不使用二级缓存的。可以根据需要在 <strong>SQL</strong> 映射文件中（*Mapper.xml）中配置缓存，为当前 <strong>namespace</strong> 启用二级缓存，代码如下：</p> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.k.dao.sysUser.SysUserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 缓存配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag">    <span class="attr">eviction</span>=<span class="string">&quot;FIFO&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">flushInterval</span>=<span class="string">&quot;60000&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">size</span>=<span class="string">&quot;512&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">readOnly</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <strong>cache</strong> 元素中各种属性的作用介绍：</p><ul><li><strong>eviction</strong>：选择缓存回收策略，主要包括以下几种策略：<ul><li><strong>LRU</strong>：这是默认选项，最近最少回收，移除最长时间不被使用的缓存对象。</li><li><strong>FIFO：</strong>先进先出，按照对象进入缓存的顺序来移除它们。</li><li><strong>SOFT：</strong>软引用，移除基于垃圾回收器状态和软引用规则的对象。</li><li><strong>WEAK：</strong>弱引用，更积极地一出基于垃圾回收器和弱引用规则的对象。</li></ul></li><li><strong>flushInterval</strong>：设定缓存刷新间隔，以毫秒（ms）为单位设定缓存多长时间自动刷新一次，默认不自动刷新。</li><li><strong>size：</strong>设定缓存中最多存放多少个对象，默认是 1024.</li><li><strong>readOnly：</strong>设定缓存数据是否只读。默认是 <em>false</em> ，表示缓存数据会用于读写操作，<code>Mybatis</code> 框架会返回缓存的副本以避免脏读；<em>true</em> 表示缓存数据只会用于读操作，<code>Mybatis</code> 框架会为所有从缓存中获取数据的操作返回缓存对象得实例，以获得更好的性能。</li></ul></li><li><p>在 SQL 映射文件中配置支持二级缓存后，如需对个别查询进行调整，可以在 <code>select</code> 元素中单独设置，代码如下：</p> <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;gitUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;sysuser&quot;</span> <span class="attr">useCache</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p><strong>TIP</strong></p><p><code>Mybatis</code> 的核心是 SQL 管理，缓存并不是 <code>Mybatis</code> 所擅长的，所有应该采用 <code>Redis</code> 、<code>MongoDB</code> 等更专业的缓存技术会更加合理！</p></blockquote><p>完结撒花！</p><blockquote><p><strong>技术有限，如有错误，还请多多指教，谢谢！！！</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何发布npm包</title>
      <link href="/posts/b427.html"/>
      <url>/posts/b427.html</url>
      
        <content type="html"><![CDATA[<p><code>see</code> <a href="https://zhuanlan.zhihu.com/p/411524929">https://zhuanlan.zhihu.com/p/411524929</a></p><blockquote><p>验证是否登录</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm whoami</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Buyyerfly添加wowjs特效</title>
      <link href="/posts/18ac.html"/>
      <url>/posts/18ac.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>添加 <a href="[Add Blog Animation -- Wowjs | Akilar の糖果屋](https://akilar.top/posts/abab51cf/">wowjs 特效</a><br>see <a href="https://www.npmjs.com/package/hexo-butterfly-wowjs">https://www.npmjs.com/package/hexo-butterfly-wowjs</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-butterfly-wowjs --save</span><br></pre></td></tr></table></figure><p>添加配置项</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># wowjs</span><br><span class="line"># see https://www.npmjs.com/package/hexo-butterfly-wowjs</span><br><span class="line">wowjs:</span><br><span class="line">  enable: true #控制动画开关。true是打开，false是关闭</span><br><span class="line">  priority: 10 #过滤器优先级</span><br><span class="line">  mobile: false #移动端是否启用，默认移动端禁用</span><br><span class="line">  animateitem:</span><br><span class="line">    - class: recent-post-item #必填项，需要添加动画的元素的class</span><br><span class="line">      style: animate__zoomIn #必填项，需要添加的动画</span><br><span class="line">      duration: 1.5s #选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span><br><span class="line">      delay: 200ms #选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span><br><span class="line">      offset: 30 #选填项，开始动画的距离（相对浏览器底部）</span><br><span class="line">      iteration: 1 #选填项，动画重复的次数</span><br><span class="line">    - class: card-widget</span><br><span class="line">      style: animate__zoomIn</span><br><span class="line">      delay: 200ms</span><br><span class="line">    # - class: flink-list-card</span><br><span class="line">    #   style: wowpanels</span><br><span class="line">    - class: flink-list-card</span><br><span class="line">      style: animate__flipInY</span><br><span class="line">      duration: 3s</span><br><span class="line">    - class: flink-list-card</span><br><span class="line">      style: animate__animated</span><br><span class="line">      duration: 3s</span><br><span class="line">    - class: article-sort-item</span><br><span class="line">      style: animate__slideInRight</span><br><span class="line">      duration: 1.5s</span><br><span class="line">    - class: site-card</span><br><span class="line">      style: animate__flipInY</span><br><span class="line">      duration: 3s</span><br><span class="line">    - class: site-card</span><br><span class="line">      style: animate__animated</span><br><span class="line">      duration: 3s</span><br><span class="line">  animate_css: https://cdn.cbd.int/hexo-butterfly-wowjs/lib/animate.min.css</span><br><span class="line">  wow_js: https://cdn.cbd.int/hexo-butterfly-wowjs/lib/wow.min.js</span><br><span class="line">  wow_init_js: https://cdn.cbd.int/hexo-butterfly-wowjs/lib/wow_init.js</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于 Butterfly 的外挂标签引入</title>
      <link href="/posts/7d58.html"/>
      <url>/posts/7d58.html</url>
      
        <content type="html"><![CDATA[<ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p><br /><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义 font awesome 图标</p></div><br /><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><br /><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div><div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>活着本身就是一种勇气</title>
      <link href="/posts/2753.html"/>
      <url>/posts/2753.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>活着本身就是一种勇气</strong></p></blockquote><p>之前看董宇辉的直播推荐了余华老师的活着 我就买了一本阅读了一下</p><p><img src="https://www.gpdf.net/wp-content/uploads/2021/01/s29652928.jpg" alt=""></p><p>我花了一晚上的时间阅读了一遍 虽说读的很快，但是我读完之后内心真想呐喊一遍，因为富贵太惨了，真的是人生四大悲</p><p>少年丧父母，中年丧配偶，老年丧独子，少子无良师。</p><p>故事的主人公叫福贵，是个地主家的公子哥，谈不上真傻，我认为他是作，喜欢赌博 并输光了家产，然后他爹也被气死了，老婆也被接回了娘家，输光家产后福贵就变的本分起来，最后媳妇也回到他身边，本来想好好生活的。好景不长，晚上去诊所给他娘拿药的时候被国民党抓了壮丁，历经曲折回了家。回到家后他母亲去世了 女儿也因为一场病变成了哑巴，也是一家四口团圆了。之后就土地革命 ，因为福贵输光了家产被定了贫农 也分到了地，日子也好点了，在那个大锅饭时代，也经常挨饿，有一次因为县长夫人生孩子大出血需要输血，无量医生为了巴结县长，吧有庆的血抽干了 有庆也死了，福贵亲手把儿子给埋了，也没敢告诉得了软骨病的家珍。他凤霞因为生孩子大出血，孩子保住了，但是凤霞确走了。苦根生下来就没有母亲，最后苦根的父亲也在搬货的时候被砸死了，苦根就跟着福贵生活，有一次苦根生病了，福贵给苦根煮了豆子吃结果苦根被豆子噎死了，最后就剩福贵和一头牛孤苦伶仃的活着</p><ul><li>读后感</li></ul><p>福贵真的是经历了太多的苦难了，正如董宇辉老师在直播间说的 即使生活不如意，但是请你别忘记你自己有勇气去面对这一切。</p><p>也许活着的生命意义是珍惜，也是一种勇气。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阳光不燥</title>
      <link href="/posts/b417.html"/>
      <url>/posts/b417.html</url>
      
        <content type="html"><![CDATA[<h1 id="夏至"><a href="#夏至" class="headerlink" title="夏至"></a>夏至</h1><blockquote><p>一生的时间很短<br>短到不过是两颗心之间的距离<br>一生的时间也很长<br>不如我们试着走走看</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于我</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<!-- <div class="tip warning faa-horizontal animated"><p>博主熬夜开发中…</p></div> --><p>一名在读的学生…</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>归档</title>
      <link href="/archives/index.html"/>
      <url>/archives/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="//barrage/index.html"/>
      <url>//barrage/index.html</url>
      
        <content type="html"><![CDATA[<div id="barrage-container">    <div class="loading">与主机通讯中……</div></div><p><link rel="stylesheet" href="/css/barrage.css" media="none" onload="this.media='all'"></p><script defer type="text/javascript" src="/js/barrage.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/barrage.css"/>
      <url>/css/barrage.css</url>
      
        <content type="html"><![CDATA[#barrage-container {    width: 100%;    height: 70vh;    min-height: 300px;    background: url(https://markdown-img-1303371957.cos.ap-nanjing.myqcloud.com/dora/201704_C.png);    background-size: cover;    background-position: center;    border-radius: 8px;    position: relative;    display: flex;    justify-content: center;    align-items: center;}#barrage-container .loading {    padding: 16px;    border-radius: 5px;    background: var(--btn-bg);    opacity: 0.7;    color: #fff;}#barrage-container .barrage {    min-width: 150px;    max-width: 300px;    min-height: 80px;    max-height: 300px;    position: absolute;    padding: 8px;    background: rgba(0, 0, 0, 0.9);    border-radius: 8px;    color: #fff;    animation: barrageIn 0.3s cubic-bezier(0.25, 0.01, 0.5, 1.5);    transition: 1s;    display: flex;    flex-direction: column;    border: 1px solid rgba(255, 255, 255, 0.2);}#barrage-container .barrage.out {    opacity: 0;}@keyframes barrageIn {    0% {        transform: scale(0.1);    }    100% {        transform: scale(1);    }}#barrage-container .barrage .barrageHead {    height: 30px;    padding: 4px 0;    line-height: 22px;    font-size: 12px;    border-bottom: 1px solid rgba(255, 255, 255, 0.3);    display: flex;    justify-content: space-between;}#barrage-container .barrage .barrageAvatar {    width: 16px;    height: 16px;    margin: 0;    border-radius: 50%;}#barrage-container .barrage .barrageContent {    font-size: 14px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/coin.css"/>
      <url>/css/coin.css</url>
      
        <content type="html"><![CDATA[.tip-button {    border: 0;    border-radius: 0.25rem;    cursor: pointer;    font-size: 20px;    font-weight: 600;    height: 2.6rem;    margin-bottom: -4rem;    outline: 0;    position: relative;    top: 0;    transform-origin: 0% 100%;    transition: transform 50ms ease-in-out;    width: auto;    -webkit-tap-highlight-color: transparent;}.tip-button:active {    transform: rotate(4deg);}.tip-button.clicked {    animation: 150ms ease-in-out 1 shake;    pointer-events: none;}.tip-button.clicked .tip-button__text {    opacity: 0;    transition: opacity 100ms linear 200ms;}.tip-button.clicked::before {    height: 0.5rem;    width: 60%;    background: var(button-hover-color);}.tip-button.clicked .coin {    transition: margin-bottom 1s linear 200ms;    margin-bottom: 0;}.tip-button.shrink-landing::before {    transition: width 200ms ease-in;    width: 0;}.tip-button.coin-landed::after {    opacity: 1;    transform: scale(1);    transform-origin: 50% 100%;}.tip-button.coin-landed .coin-wrapper {    background: radial-gradient(            circle at 35% 97%,            rgba(3, 16, 50, 0.4) 0.04rem,            transparent 0.04rem        ),        radial-gradient(circle at 45% 92%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.02rem),        radial-gradient(circle at 55% 98%, rgba(3, 16, 50, 0.4) 0.04rem, transparent 0.04rem),        radial-gradient(circle at 65% 96%, rgba(3, 16, 50, 0.4) 0.06rem, transparent 0.06rem);    background-position: center bottom;    background-size: 100%;    bottom: -1rem;    opacity: 0;    transform: scale(2) translateY(-10px);}.tip-button__text {    color: #fff;    margin-right: 1.8rem;    opacity: 1;    position: relative;    transition: opacity 100ms linear 500ms;    z-index: 3;}.tip-button::before {    border-radius: 0.25rem;    bottom: 0;    content: '';    display: block;    height: 100%;    left: 50%;    position: absolute;    transform: translateX(-50%);    transition: height 250ms ease-in-out 400ms, width 250ms ease-in-out 300ms;    width: 100%;    z-index: 2;}.tip-button::after {    bottom: -1rem;    color: white;    content: 'ヾ(≧O≦)〃嗷~'; /*点击后显示的内容*/    height: 110%;    left: 0;    opacity: 0;    position: absolute;    pointer-events: none;    text-align: center;    transform: scale(0);    transform-origin: 50% 20%;    transition: transform 200ms cubic-bezier(0, 0, 0.35, 1.43);    width: 100%;    z-index: 1;}.coin-wrapper {    background: none;    bottom: 0;    height: 18rem;    left: 0;    opacity: 1;    overflow: hidden;    pointer-events: none;    position: absolute;    transform: none;    transform-origin: 50% 100%;    transition: opacity 200ms linear 100ms, transform 300ms ease-out;    width: 100%;}.coin {    --front-y-multiplier: 0;    --back-y-multiplier: 0;    --coin-y-multiplier: 0;    --coin-x-multiplier: 0;    --coin-scale-multiplier: 0;    --coin-rotation-multiplier: 0;    --shine-opacity-multiplier: 0.4;    --shine-bg-multiplier: 50%;    bottom: calc(var(--coin-y-multiplier) * 1rem - 3.5rem);    height: 3.5rem;    margin-bottom: 3.05rem;    position: absolute;    right: calc(var(--coin-x-multiplier) * 34% + 16%);    transform: translateX(50%) scale(calc(0.4 + var(--coin-scale-multiplier)))        rotate(calc(var(--coin-rotation-multiplier) * -1deg));    transition: opacity 100ms linear 200ms;    width: 3.5rem;    z-index: 3;}.coin__front,.coin__middle,.coin__back,.coin::before,.coin__front::after,.coin__back::after {    border-radius: 50%;    box-sizing: border-box;    height: 100%;    left: 0;    position: absolute;    width: 100%;    z-index: 3;}.coin__front {    background: radial-gradient(            circle at 50% 50%,            transparent 50%,            rgba(115, 124, 153, 0.4) 54%,            #c2cadf 54%        ),        linear-gradient(210deg, #8590b3 32%, transparent 32%),        linear-gradient(150deg, #8590b3 32%, transparent 32%),        linear-gradient(to right, #8590b3 22%, transparent 22%, transparent 78%, #8590b3 78%),        linear-gradient(            to bottom,            #fcfaf9 44%,            transparent 44%,            transparent 65%,            #fcfaf9 65%,            #fcfaf9 71%,            #8590b3 71%        ),        linear-gradient(            to right,            transparent 28%,            #fcfaf9 28%,            #fcfaf9 34%,            #8590b3 34%,            #8590b3 40%,            #fcfaf9 40%,            #fcfaf9 47%,            #8590b3 47%,            #8590b3 53%,            #fcfaf9 53%,            #fcfaf9 60%,            #8590b3 60%,            #8590b3 66%,            #fcfaf9 66%,            #fcfaf9 72%,            transparent 72%        );    background-color: #8590b3;    background-size: 100% 100%;    transform: translateY(calc(var(--front-y-multiplier) * 0.3181818182rem / 2))        scaleY(var(--front-scale-multiplier));}.coin__front::after {    background: rgba(0, 0, 0, 0.2);    content: '';    opacity: var(--front-y-multiplier);}.coin__middle {    background: #737c99;    transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / 2))        scaleY(var(--middle-scale-multiplier));}.coin__back {    background: radial-gradient(            circle at 50% 50%,            transparent 50%,            rgba(115, 124, 153, 0.4) 54%,            #c2cadf 54%        ),        radial-gradient(circle at 50% 40%, #fcfaf9 23%, transparent 23%),        radial-gradient(circle at 50% 100%, #fcfaf9 35%, transparent 35%);    background-color: #8590b3;    background-size: 100% 100%;    transform: translateY(calc(var(--back-y-multiplier) * 0.3181818182rem / 2))        scaleY(var(--back-scale-multiplier));}.coin__back::after {    background: rgba(0, 0, 0, 0.2);    content: '';    opacity: var(--back-y-multiplier);}.coin::before {    background: radial-gradient(circle at 25% 65%, transparent 50%, rgba(255, 255, 255, 0.9) 90%),        linear-gradient(            55deg,            transparent calc(var(--shine-bg-multiplier) + 0%),            #e9f4ff calc(var(--shine-bg-multiplier) + 0%),            transparent calc(var(--shine-bg-multiplier) + 50%)        );    content: '';    opacity: var(--shine-opacity-multiplier);    transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / -2))        scaleY(var(--middle-scale-multiplier)) rotate(calc(var(--coin-rotation-multiplier) * 1deg));    z-index: 10;}.coin::after {    background: #737c99;    content: '';    height: 0.3181818182rem;    left: 0;    position: absolute;    top: 50%;    transform: translateY(-50%);    width: 100%;    z-index: 2;}@keyframes shake {    0% {        transform: rotate(4deg);    }    66% {        transform: rotate(-4deg);    }    100% {        transform: rotate();    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/random-friends-post.css"/>
      <url>/css/random-friends-post.css</url>
      
        <content type="html"><![CDATA[/* 钓鱼 */.fcircle_page{    height: fit-content;    margin-bottom: 1rem;    font-family: '微软雅黑';}.title-h2-a {    display: flex;    align-items: center;    justify-content: space-between;    margin-top: .5rem;}.title-h2-a-left {    display: flex;    align-items: center;}#random-post {    min-height: 32px;    background: var(--card-bg);    border: var(--style-border-always);    box-shadow: var(--liusiqi-shadow-border);    padding: 20px 30px;    border-radius: 12px;    margin-top: 8px;    cursor: url(/img/x2.cur),auto;}.random-friends-post {    text-decoration: none;    border-bottom: 2px solid var(--heo-lighttext);    color: var(--heo-fontcolor);    font-weight: 700;    padding: 0 4px;}.random-friends-post:hover {    text-decoration: none;    border-bottom: 2px solid var(--heo-none);    color: var(--heo-white);    background: var(--heo-main);    border-radius: 4px;    box-shadow: var(--heo-shadow-main);}.random-post-start {    transition: 2s;}.random-post-start:hover {    color: var(--heo-hovertext);}#fcircleContainer{    width: 100%;    max-width: 1500px;    height: auto;    margin: auto;    display: flex;    flex-direction: row;    flex-wrap: wrap;    justify-content: space-between;}#fcircleContainer a {    display: flex;    align-items: center;    font-weight: 500;    border-bottom: solid 2px var(--liusiqi-lighttext);    color: var(--liusiqi-fontcolor);    padding: 0 .2em;    text-decoration: none;}.fc-article{    display: flex;    flex-direction: column;    justify-content: space-between;    box-shadow: var(--liusiqi-shadow-border);    margin: 8px 0;    border-radius: 8px;    font-weight: bolder;    overflow: hidden;    transition: all ease-out 0.3s;    position: relative;    padding: 0.8rem;    padding-bottom: 0.4rem;    width: calc(50% - 12px);    background: var(--liusiqi-card-bg);    border: var(--style-border-always);}.fc-article:hover{    border: var(--style-border-hover);    box-shadow: var(--liusiqi-shadow-main);}.fcircle_page a{    border-bottom: none !important;    font-family: '微软雅黑';}.fc-article-title{    font-weight: 700;    position: relative;    z-index: 2;    margin-right: auto;    display: block;    letter-spacing: 1.5px;    font-size: 16px;    align-self: start;    text-align: left;    line-height: 1.2;    padding: 0;    margin-bottom: 10px;    transition: 0.3s;    -webkit-line-clamp: 2;    overflow: hidden;    text-overflow: ellipsis;    display: -webkit-box !important;    -webkit-box-orient: vertical;}.fc-article-title:hover{    color: var(--liusiqi-theme) !important;}.fc-article-avatar{    line-height: 35px;    display: flex;    justify-content: space-between;}.fc-article-time{    font-size: 14px;    text-align: right;    float: right;    font-weight: 400;}.fc-article-author{    line-height: 35px;    font-size: 14px;    font-weight: 400;    margin-left: 5px;    align-self: center;    text-align: center;    white-space: nowrap;    overflow: hidden;    transition: 0.3s;}.fc-time-created,.fc-time-updated {    display: inline-block;    text-align: left;    white-space: nowrap;}.fc-article-floor,.fc-time-created,.fc-time-updated{    color: var(--liusiqi-fontcolor);    opacity: 0.4;    transition: 0.3s;}img.fc-img-avatar{    align-self: center;    text-align: center;    width: 22px !important;    height: 22px !important;    min-width: 22px !important;    min-height: 22px !important;    border-radius: 50%;    background: #fff;    margin-right: 0.3rem;    margin-bottom: 0 !important;    margin-top: 0 !important;}.fcircle-tips{    margin-top: 10px;    text-align: center;    color: var(--King-secondtext);}#fc-loading-test{    display: none;}#fcircle-footer {    margin: 1rem 0;    text-align: right;    font-size: 13px;    color: var(--King-secondtext);}.fc-data-lastupdated{    display: block;}/* 屏幕宽度小于768 */@media screen and (max-width: 768px) {    .fc-article {        width: 100% !important;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[#universe {    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    z-index: 1;}@media screen and (max-width: 768px) {    #universe {        display: none;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>即刻短文</title>
      <link href="/essay/index.html"/>
      <url>/essay/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>朋友圈</title>
      <link href="/fcircle/index.html"/>
      <url>/fcircle/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Gallery相册图库</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://img.wwery.com/Sugar/HGhVJgAt.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁纸</p>  <a href='/gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>关于漫威的图片</p>  <a href='/gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/gallery/ohmygirl'></a>  </figcaption>  </figure>  </div><script type="text/javascript">    document.querySelector('.page-title').style.textAlign = 'center';</script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/barrage.js"/>
      <url>/js/barrage.js</url>
      
        <content type="html"><![CDATA[//这里可以定义弹幕的背景色与字体色const barrageColors = [    ['#386adecc', '#fffa'],    ['#9248f0cc', '#fffa'],    ['#2da55dcc', '#fffa'],    ['#ffc505cc', '#fffc'],    ['#d44e30cc', '#fffa'],];//这两个是与随机位置的范围相关的const maxBarrageWidth = 150;const maxBarrageHeight = 100;//最多同时显示的弹幕个数const maxBarrage = 10;//每个弹幕的间隔时间const barrageTime = 1500;//我用的是Vercel部署，这里链接就是Vercel的链接，腾讯云的自己琢磨一下哈，应该也差不多const twikooUrl = 'https://twikoo.top/';//token要手动获取（反正我是开发者工具里获取的，教程在下面const accessToken = '9901a847ec7ab9994996c424e5dbecb0';const pageUrl = '/barrage/';const barrageTimer = [];let barrageList = [];let barrageIndex = 0;const barrageDom = document.getElementById('barrage-container');window.addEventListener('load', () => {    var data = JSON.stringify({        event: 'COMMENT_GET',        accessToken: accessToken,        url: pageUrl,    });    var xhr = new XMLHttpRequest();    xhr.withCredentials = true;    xhr.addEventListener('readystatechange', function () {        if (this.readyState === 4) {            barrageList = linkFilter(JSON.parse(this.responseText).data);            barrageDom.innerHTML = '';        }    });    xhr.open('POST', twikooUrl);    xhr.setRequestHeader('Content-Type', 'application/json');    xhr.send(data);    setInterval(() => {        if (barrageList.length) {            popBarrage(barrageList[barrageIndex]);            barrageIndex += 1;            barrageIndex %= barrageList.length;        }        if (            barrageTimer.length >            (barrageList.length > maxBarrage ? maxBarrage : barrageList.length)        ) {            removeBarrage(barrageTimer.shift());        }    }, barrageTime);});function linkFilter(data) {    const newData = data.filter(comment => {        return !comment.master;    });    return newData;}function popBarrage(data) {    let barrage = document.createElement('div');    let width = barrageDom.clientWidth;    let height = barrageDom.clientHeight;    barrage.className = 'barrage';    barrage.style.top = Math.floor(Math.random() * (height - maxBarrageHeight)) + 'px';    barrage.style.left = Math.floor(Math.random() * (width - maxBarrageWidth)) + 'px';    let ran = Math.floor(Math.random() * barrageColors.length);    barrage.style.background = barrageColors[ran][0];    barrage.style.color = barrageColors[ran][1];    barrage.innerHTML = `<div class="barrageHead"><img class="barrageAvatar" src="https://cravatar.cn/avatar/${data.mailMd5}"/><div class="barrageNick">${data.nick}</div></div><div class="barrageContent">${data.comment}</div>`;    barrageTimer.push(barrage);    barrageDom.append(barrage);    //防止溢出（这里防止随机位置产生的溢出，弹幕太大产生的溢出就要靠css了    if (barrage.clientWidth + parseInt(barrage.style.left) > width) {        barrage.style.left = width - barrage.clientWidth + 'px';    }    if (barrage.clientHeight + parseInt(barrage.style.top) > height) {        barrage.style.top = height - barrage.clientHeight + 'px';    }}function removeBarrage(barrage) {    barrage.className = 'barrage out';    setTimeout(() => {        barrageDom.removeChild(barrage);    }, 1000);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/waterfall.js"/>
      <url>/js/waterfall.js</url>
      
        <content type="html"><![CDATA['use strict';// 瀑布流方法function waterfall(e) {    let item = document.getElementsByClassName('bber-item');    if (!item.length) return;    //获取元素的宽度    let width = item[0].offsetWidth;    //计算出应该放几列（向下取整）    let cols = Math.floor(e.offsetWidth / width);    // 设置el盒子的高度    totalHeight(e, item, cols);    // 设置每一个item元素的排列位置    //  第一行整体的top值都是0 后面的依次找上一行高度最小的容器，在它下面进行排列    let hrr = [];    for (let i = 0; i < item.length; i++) {        //定位第一行的图片        if (i < cols) {            item[i].style.top = '0px';            i != 0                ? (item[i].style.left = i * width + i * 28 + 'px')                : (item[i].style.left = i * width + 'px');            hrr.push(item[i].offsetHeight + 16);        } else {            //第一行之后的            //选择总高度最小的列            let min = Math.min(...hrr);            let index = hrr.indexOf(min);            //将每个元素定位到当前总高度最小的列下            item[i].style.top = min + 'px';            // 设置每个item定位的位置(间距)            /*                width------>item的宽度                count------>到三归零, 因为最大就排3列                    index = 0  就直接 index * width就好了, left = index * width(0); /第一列                    index = 1  就直接 width + 28的间距距离   left = index(1) * width + 28 + 'px'; 第二列                    index = 2  left = index * width + count * 28的间距                        还有一种情况, 上一列的某个item内容较多, 高度高出其它的item高度, 导致下列排不下三个item                          0  1  2                          0     1                          0  1  2                             0  2                            index === 2 && count === 1  这个说明第一列变成第二列、二---->三(0 2)                            那么它的间距要是28的双倍也就是56; left = index * width + 56 + 'px'                */            index != 0                ? index != 1                    ? (item[i].style.left = index * width + index * 28 + 'px')                    : (item[i].style.left = width + 28 + 'px')                : (item[i].style.left = 0 + 'px');            //当前定位的元素加入该列            hrr[index] += item[i].offsetHeight + 16;        }    }}// 该方法用于求出`item`平均高度function averageHeight(target) {    let sum = 0;    let len = target.length;    for (let i = 0; i < target.length; i++) {        sum += target[i].offsetHeight + 16;    }    let avg = Math.ceil(sum / len);    return avg;}// 该方法用于 set element 高度function totalHeight(el, item, cols) {    let w = document.body.clientWidth || window.innerWidth;    let rows = Math.round(item.length / cols);    let totalHeight =        w > 1450            ? Math.round(averageHeight(item)) * rows + rows * 20            : Math.round(averageHeight(item)) * rows;    el.style.height = totalHeight + 20 + 'px';}// reflashEssayWaterFall 处理瀑布流显示function reflashEssayWaterFall() {    let e = document.getElementById('waterfall');    e != null &&        setTimeout(function () {            waterfall(e);            e.classList.add('show');        }, 500);}// 时间格式化function changeTimeInEssay() {    document.querySelector('#bber') &&        document.querySelectorAll('#bber time').forEach(function (e) {            var t = e,                o = t.getAttribute('datetime');            (t.innerText = bbDiffDate(o, !0)), (t.style.display = 'inline');        });}// diffDate为处理时间的方法function bbDiffDate(e, t) {    var n,        r,        o,        i = 1 < arguments.length && void 0 !== t && t,        a = new Date(),        s = new Date(e),        u = a.getTime() - s.getTime();    return i        ? ((n = u / 864e5),          (r = u / 36e5),          (o = u / 6e4),          12 < u / 2592e6              ? s.toLocaleDateString()              : 7 <= n              ? s.toLocaleDateString().substr(5)              : 1 <= n              ? parseInt(n) + '' + GLOBAL_CONFIG.date_suffix.day              : 1 <= r || 1 <= o              ? '最近'              : GLOBAL_CONFIG.date_suffix.just)        : parseInt(u / 864e5);}// 即刻文章点击跳转评论function rightMenuCommentText(e) {    var n = document.getElementsByClassName('el-textarea__inner')[0],        t = document.createEvent('HTMLEvents');    if (!n) return;    document.getElementById('comment-tips').classList.add('show');    t.initEvent('input', !0, !0);    var o = replaceAll(e, '\n', '\n> ');    (n.value = '"' + o + '" >>> \n'), n.dispatchEvent(t);    var i = document.querySelector('#post-comment').offsetTop;    window.scrollTo(0, i - 80),        n.focus(),        n.setSelectionRange(-1, -1),        document.getElementById('comment-tips') &&            document.getElementById('comment-tips').classList.add('show');}function replaceAll(e, t, n) {    return e.split(t).join(n);}function owoBig() {    let e = 1,        t = '',        n = document.createElement('div');    (n.id = 'owo-big'),        document.querySelector('body').appendChild(n),        document.getElementById('post-comment').addEventListener('DOMNodeInserted', o => {            if (o.target.classList && (o.target.classList.value, 1)) {                let a = o.target;                a.addEventListener('contextmenu', e => e.preventDefault()),                    a.addEventListener('mouseover', o => {                        'LI' == o.target.tagName &&                            e &&                            ((e = !1),                            (t = setTimeout(() => {                                let e = 3 * o.path[0].clientHeight,                                    t = 3 * o.path[0].clientWidth,                                    a = o.x - o.offsetX - (t - o.path[0].clientWidth) / 2,                                    l = o.y - o.offsetY;                                (n.style.height = e + 'px'),                                    (n.style.width = t + 'px'),                                    (n.style.left = a + 'px'),                                    (n.style.top = l + 'px'),                                    (n.style.display = 'flex'),                                    (n.innerHTML = `<img src="${                                        o.target.querySelector('img').src                                    }">`);                            }, 300)));                    }),                    a.addEventListener('mouseout', o => {                        (n.style.display = 'none'), (e = 1), clearTimeout(t);                    });            }        });}// 执行函数reflashEssayWaterFall(),    window.addEventListener('resize', reflashEssayWaterFall),    changeTimeInEssay(),    document.getElementById('post-comment') && owoBig();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友人帐</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐馆</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<h2>我的音乐收藏</h2><p><strong>2022/9/26</strong></p><h3 id="万物有灵-✨"><a href="#万物有灵-✨" class="headerlink" title="万物有灵 ✨"></a>万物有灵 ✨</h3>  <div data-pjax class="aplayer no-destroy" data-id="7591760875" data-server="tencent" data-type="playlist" data-order="list" data-fixed="true" data-preload="auto" data-autoplay="false" data-mutex="true"></div><!-- <div class="tip warning faa-horizontal animated"><p>博主拼命开发中…</p></div> -->]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>句子</title>
      <link href="/sentence/index.html"/>
      <url>/sentence/index.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>记录一些喜欢的句子以及人生感悟。</p></div><h3 id="严于律己，宽以待人"><a href="#严于律己，宽以待人" class="headerlink" title="严于律己，宽以待人"></a>严于律己，宽以待人</h3><h3 id="比你优秀的人，比你还努力"><a href="#比你优秀的人，比你还努力" class="headerlink" title="比你优秀的人，比你还努力"></a>比你优秀的人，比你还努力</h3><h3 id="do-now"><a href="#do-now" class="headerlink" title="do now"></a>do now</h3><h3 id="多观摩大佬，可以学到更多"><a href="#多观摩大佬，可以学到更多" class="headerlink" title="多观摩大佬，可以学到更多"></a>多观摩大佬，可以学到更多</h3><h3 id="时间很快，很多事我们来不及做。时间很慢，我们可以做很多事。"><a href="#时间很快，很多事我们来不及做。时间很慢，我们可以做很多事。" class="headerlink" title="时间很快，很多事我们来不及做。时间很慢，我们可以做很多事。"></a>时间很快，很多事我们来不及做。时间很慢，我们可以做很多事。</h3><h3 id="你可以回头看-但不能往回走-因为逆行是全责"><a href="#你可以回头看-但不能往回走-因为逆行是全责" class="headerlink" title="你可以回头看 但不能往回走 因为逆行是全责"></a>你可以回头看 但不能往回走 因为逆行是全责</h3><h3 id="鱼和熊掌不可兼得"><a href="#鱼和熊掌不可兼得" class="headerlink" title="鱼和熊掌不可兼得"></a>鱼和熊掌不可兼得</h3><h3 id="条条大路通罗马"><a href="#条条大路通罗马" class="headerlink" title="条条大路通罗马"></a>条条大路通罗马</h3><h3 id="仓廪实而知礼节，衣食足而知荣辱"><a href="#仓廪实而知礼节，衣食足而知荣辱" class="headerlink" title="仓廪实而知礼节，衣食足而知荣辱"></a>仓廪实而知礼节，衣食足而知荣辱</h3><h3 id="落俗不可避免，浪漫至死不渝"><a href="#落俗不可避免，浪漫至死不渝" class="headerlink" title="落俗不可避免，浪漫至死不渝"></a>落俗不可避免，浪漫至死不渝</h3><h3 id="把喜欢的事情做到极致，做给自己看，也做给怀疑我们的世界看"><a href="#把喜欢的事情做到极致，做给自己看，也做给怀疑我们的世界看" class="headerlink" title="把喜欢的事情做到极致，做给自己看，也做给怀疑我们的世界看"></a>把喜欢的事情做到极致，做给自己看，也做给怀疑我们的世界看</h3><h3 id="Spring———“反转人生，如此惊艳！”"><a href="#Spring———“反转人生，如此惊艳！”" class="headerlink" title="Spring———“反转人生，如此惊艳！”"></a>Spring———“反转人生，如此惊艳！”</h3><h3 id="时间未到，资格未够，请继续努力"><a href="#时间未到，资格未够，请继续努力" class="headerlink" title="时间未到，资格未够，请继续努力"></a>时间未到，资格未够，请继续努力</h3><h3 id="我双手合十的愿望里是永远有你"><a href="#我双手合十的愿望里是永远有你" class="headerlink" title="我双手合十的愿望里是永远有你"></a>我双手合十的愿望里是永远有你</h3><h3 id="假如我能使一颗心免于破碎，我便没有白活一场。假如我能消除一个人的痛苦，或者平息一个人的悲伤，或者帮助一只迷途的知更鸟-重新回到它的巢中，我便没有虚度此生"><a href="#假如我能使一颗心免于破碎，我便没有白活一场。假如我能消除一个人的痛苦，或者平息一个人的悲伤，或者帮助一只迷途的知更鸟-重新回到它的巢中，我便没有虚度此生" class="headerlink" title="假如我能使一颗心免于破碎，我便没有白活一场。假如我能消除一个人的痛苦，或者平息一个人的悲伤，或者帮助一只迷途的知更鸟 重新回到它的巢中，我便没有虚度此生"></a>假如我能使一颗心免于破碎，我便没有白活一场。假如我能消除一个人的痛苦，或者平息一个人的悲伤，或者帮助一只迷途的知更鸟 重新回到它的巢中，我便没有虚度此生</h3><h3 id="我大抵是恋爱了，这春风终是那样袭来，让我心甚是欢喜"><a href="#我大抵是恋爱了，这春风终是那样袭来，让我心甚是欢喜" class="headerlink" title="我大抵是恋爱了，这春风终是那样袭来，让我心甚是欢喜"></a>我大抵是恋爱了，这春风终是那样袭来，让我心甚是欢喜</h3><h3 id="“我已经够勇敢了，该遗憾的不是我”"><a href="#“我已经够勇敢了，该遗憾的不是我”" class="headerlink" title="“我已经够勇敢了，该遗憾的不是我”"></a>“我已经够勇敢了，该遗憾的不是我”</h3><h3 id="当然会有遗憾啊，这是人间常态呀"><a href="#当然会有遗憾啊，这是人间常态呀" class="headerlink" title="当然会有遗憾啊，这是人间常态呀"></a>当然会有遗憾啊，这是人间常态呀</h3><h3 id="至于未来我还不清楚，反正路还长，天总会亮"><a href="#至于未来我还不清楚，反正路还长，天总会亮" class="headerlink" title="至于未来我还不清楚，反正路还长，天总会亮"></a>至于未来我还不清楚，反正路还长，天总会亮</h3><h3 id="我已经努力的加上你了，剩下的请你努力"><a href="#我已经努力的加上你了，剩下的请你努力" class="headerlink" title="我已经努力的加上你了，剩下的请你努力"></a>我已经努力的加上你了，剩下的请你努力</h3><h3 id="盛年不重来，一日难再晨"><a href="#盛年不重来，一日难再晨" class="headerlink" title="盛年不重来，一日难再晨"></a>盛年不重来，一日难再晨</h3><h3 id="“即使这个世界对你不好，你也不能丢了骄傲！”"><a href="#“即使这个世界对你不好，你也不能丢了骄傲！”" class="headerlink" title="“即使这个世界对你不好，你也不能丢了骄傲！”"></a>“即使这个世界对你不好，你也不能丢了骄傲！”</h3><h3 id="你看那西日的北风，那便是我今日的三餐，还好今日多了些尘土足以饱腹"><a href="#你看那西日的北风，那便是我今日的三餐，还好今日多了些尘土足以饱腹" class="headerlink" title="你看那西日的北风，那便是我今日的三餐，还好今日多了些尘土足以饱腹"></a>你看那西日的北风，那便是我今日的三餐，还好今日多了些尘土足以饱腹</h3>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>闲言碎语</title>
      <link href="//artitalk/index.html"/>
      <url>//artitalk/index.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>这里都是我的牢骚 🍉</p></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>SVG 鼠标悬停效果</title>
      <link href="//svghovereffect/index.html"/>
      <url>//svghovereffect/index.html</url>
      
        <content type="html"><![CDATA[<iframe class='transparent-page iframe' src="/page/svghovereffect" frameborder="no" scrolling='no'></iframe>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime/runtime.css"/>
      <url>/css/runtime/runtime.css</url>
      
        <content type="html"><![CDATA[div#runtime {    width: 180px;    margin: auto;    color: #fff;    padding-inline: 5px;    border-radius: 10px;    background-color: rgba(0, 0, 0, 0.7);}#workboard {    font-size: 12px;}[data-theme='dark'] div#runtime {    color: #28b4c8;    box-shadow: 0 0 5px rgba(28, 69, 218, 0.71);    animation: flashlight 1s linear infinite alternate;}@-moz-keyframes flashlight {    from {        box-shadow: 0 0 5px #1478d2;    }    to {        box-shadow: 0 0 2px #1478d2;    }}@-webkit-keyframes flashlight {    from {        box-shadow: 0 0 5px #1478d2;    }    to {        box-shadow: 0 0 2px #1478d2;    }}@-o-keyframes flashlight {    from {        box-shadow: 0 0 5px #1478d2;    }    to {        box-shadow: 0 0 2px #1478d2;    }}@keyframes flashlight {    from {        box-shadow: 0 0 5px #1478d2;    }    to {        box-shadow: 0 0 2px #1478d2;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime/runtime.min.css"/>
      <url>/css/runtime/runtime.min.css</url>
      
        <content type="html"><![CDATA[div#runtime{width:180px;margin:auto;color:#fff;padding-inline:5px;border-radius:10px;background-color:rgba(0,0,0,.7)}#workboard{font-size:12px}[data-theme=dark] div#runtime{color:#28b4c8;box-shadow:0 0 5px rgba(28,69,218,.71);animation:flashlight 1s linear infinite alternate}@-moz-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-webkit-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-o-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Marvel</title>
      <link href="/gallery/marvel/index.html"/>
      <url>/gallery/marvel/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Jj8FXuKVlOea4Ec.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/eqBGrXx9tWsZOao.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/LjW2CfNSD7OaY4v.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/pGIhaPjxtl438U9.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/hzjJBR2x5SEmsbC.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ucNDmUqQkrFfAWv.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/oj1wAnGSKtFvXIJ.jpg" alt=""></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>ohmygirl</title>
      <link href="/gallery/ohmygirl/index.html"/>
      <url>/gallery/ohmygirl/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg" alt=""></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>壁纸</title>
      <link href="/gallery/wallpaper/index.html"/>
      <url>/gallery/wallpaper/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="https://img.wwery.com/Sugar/1WIS0Yrb.webp" alt=""><br><img src="http://img.wwery.com/Sugar/K81Rt0DE.jpg" alt=""><br><img src="https://img.wwery.com/Sugar/GfUVwxls.png" alt=""><br><img src="http://img.wwery.com/Sugar/fPcdwnDj.jpg" alt=""><br><img src="https://img.wwery.com/Sugar/5DowTe8o.jpg" alt=""><br><img src="http://img.wwery.com/Sugar/DKultI7U.jpg" alt=""><br><img src="http://img.wwery.com/Sugar/mjYVBNkj.jpg" alt=""><br><img src="https://img.wwery.com/Sugar/R0qysPUe.png" alt=""><br><img src="https://img.wwery.com/Sugar/0jMKNDqc.jpg" alt=""><br><img src="https://img.wwery.com/Sugar/oSEupdjk.png" alt=""><br><img src="https://img.wwery.com/Sugar/baDq40q7.jpg" alt=""><br><img src="https://img.wwery.com/Sugar/6ih6G7Kq.png" alt=""><br><img src="https://img.wwery.com/Sugar/1PkIgasW.png" alt=""><br><img src="https://img.wwery.com/Sugar/HdX6BrLP.png" alt=""><br><img src="https://img.wwery.com/Sugar/gBNVi6Mh.jpg" alt=""><br><img src="https://img.wwery.com/Sugar/HGhVJgAt.png" alt=""><br><img src="https://img.wwery.com/Sugar/QTF6vcZo.png" alt=""><br><img src="https://img.wwery.com/Sugar/t306AFbf.png" alt=""><br><img src="https://img.wwery.com/Sugar/HrNvjXaS.png" alt=""><br><img src="https://img.wwery.com/Sugar/l3bDt289.png" alt=""><br><img src="https://img.wwery.com/Sugar/HGawPyFe.png" alt=""><br><img src="https://img.wwery.com/Sugar/h1ScFpOe.png" alt=""><br><img src="https://img.wwery.com/Sugar/eBhTo60A.png" alt=""><br><img src="https://img.wwery.com/Sugar/jEakrwwB.png" alt=""><br><img src="https://img.wwery.com/Sugar/t9U3MG5G.png" alt=""><br><img src="https://img.wwery.com/Sugar/Tyt0jWUe.png" alt=""><br><img src="https://img.wwery.com/Sugar/uwcsSm6s.png" alt=""></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/src/coin.js"/>
      <url>/js/src/coin.js</url>
      
        <content type="html"><![CDATA[var tipButtons = document.querySelectorAll('.tip-button');function coinAudio() {  var coinAudio = document.getElementById('coinAudio');  if (coinAudio) {    coinAudio.play(); //有音频时播放  }}// Loop through all buttons (allows for multiple buttons on page)tipButtons.forEach(button => {  var coin = button.querySelector('.coin');  // The larger the number, the slower the animation  coin.maxMoveLoopCount = 90;  button.addEventListener('click', () => {    if (/Android|webOS|BlackBerry/i.test(navigator.userAgent)) return true; //媒体选择    if (button.clicked) return;    button.classList.add('clicked');    // Wait to start flipping th coin because of the button tilt animation    setTimeout(() => {      // Randomize the flipping speeds just for fun      coin.sideRotationCount = Math.floor(Math.random() * 5) * 90;      coin.maxFlipAngle = (Math.floor(Math.random() * 4) + 3) * Math.PI;      button.clicked = true;      flipCoin();      coinAudio();    }, 50);  });  var flipCoin = () => {    coin.moveLoopCount = 0;    flipCoinLoop();  };  var resetCoin = () => {    coin.style.setProperty('--coin-x-multiplier', 0);    coin.style.setProperty('--coin-scale-multiplier', 0);    coin.style.setProperty('--coin-rotation-multiplier', 0);    coin.style.setProperty('--shine-opacity-multiplier', 0.4);    coin.style.setProperty('--shine-bg-multiplier', '50%');    coin.style.setProperty('opacity', 1);    // Delay to give the reset animation some time before you can click again    setTimeout(() => {      button.clicked = false;    }, 300);  };  var flipCoinLoop = () => {    coin.moveLoopCount++;    var percentageCompleted = coin.moveLoopCount / coin.maxMoveLoopCount;    coin.angle = -coin.maxFlipAngle * Math.pow(percentageCompleted - 1, 2) + coin.maxFlipAngle;    // Calculate the scale and position of the coin moving through the air    coin.style.setProperty('--coin-y-multiplier', -11 * Math.pow(percentageCompleted * 2 - 1, 4) + 11);    coin.style.setProperty('--coin-x-multiplier', percentageCompleted);    coin.style.setProperty('--coin-scale-multiplier', percentageCompleted * 0.6);    coin.style.setProperty('--coin-rotation-multiplier', percentageCompleted * coin.sideRotationCount);    // Calculate the scale and position values for the different coin faces    // The math uses sin/cos wave functions to similate the circular motion of 3D spin    coin.style.setProperty('--front-scale-multiplier', Math.max(Math.cos(coin.angle), 0));    coin.style.setProperty('--front-y-multiplier', Math.sin(coin.angle));    coin.style.setProperty('--middle-scale-multiplier', Math.abs(Math.cos(coin.angle), 0));    coin.style.setProperty('--middle-y-multiplier', Math.cos((coin.angle + Math.PI / 2) % Math.PI));    coin.style.setProperty('--back-scale-multiplier', Math.max(Math.cos(coin.angle - Math.PI), 0));    coin.style.setProperty('--back-y-multiplier', Math.sin(coin.angle - Math.PI));    coin.style.setProperty('--shine-opacity-multiplier', 4 * Math.sin((coin.angle + Math.PI / 2) % Math.PI) - 3.2);    coin.style.setProperty(      '--shine-bg-multiplier',      -40 * (Math.cos((coin.angle + Math.PI / 2) % Math.PI) - 0.5) + '%'    );    // Repeat animation loop    if (coin.moveLoopCount < coin.maxMoveLoopCount) {      if (coin.moveLoopCount === coin.maxMoveLoopCount - 6) button.classList.add('shrink-landing');      window.requestAnimationFrame(flipCoinLoop);    } else {      button.classList.add('coin-landed');      coin.style.setProperty('opacity', 0);      setTimeout(() => {        button.classList.remove('clicked', 'shrink-landing', 'coin-landed');        setTimeout(() => {          resetCoin();        }, 300);      }, 1500);    }  };});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/src/crash_cheat.js"/>
      <url>/js/src/crash_cheat.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = 'w(ﾟДﾟ)w 不要走！再看看嘛！';    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = '♪(^∇^*)欢迎肥来！' + OriginTitile;    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/src/custom.js"/>
      <url>/js/src/custom.js</url>
      
        <content type="html"><![CDATA[/* * @Description: custom js * @version: * @Author: king * @Date: 2022-09-16 00:49:50 * @LastEditors: king * @LastEditTime: 2022-09-19 22:34:00 */var flag;//  @Description: 返回顶部 显示网页阅读进度window.addEventListener('scroll', percent); // 执行函数// 页面百分比function percent() {    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度        b =            Math.max(                document.body.scrollHeight,                document.documentElement.scrollHeight,                document.body.offsetHeight,                document.documentElement.offsetHeight,                document.body.clientHeight,                document.documentElement.clientHeight            ) - document.documentElement.clientHeight, // 整个网页高度 减去 可视高度        result = Math.round((a / b) * 100), // 计算百分比        btn = document.querySelector('#percent'); // 获取图标    result <= 99 || (result = 99), (btn.innerHTML = result);}document.getElementById('page-name').innerText = document.title.split(' | king')[0];// 隐藏分页按钮(function () {    let p_father = document.getElementById('pagination');    if (p_father == null) return;    let count = p_father.getElementsByTagName('a').length;    // 如果分页只有一页就隐藏    count < 1 ? (p_father.style.display = 'none') : '';})();/*     通过 data-pjax属性的的js，在页面切换后执行重载，达到局部刷新的效果。    see: https://akilar.top/posts/3b78b69a/ */// 监听网络状态window.addEventListener('online', function () {    // alert('网络连接了');    btf.snackbarShow('网络连接了~');});window.addEventListener('offline', function () {    alert('网络断开了');    // btf.snackbarShow('网络断开了~');});// 禁止用户 f12document.οncοntextmenu = function () {    return false;};document.onselectstart = function () {    return false;};document.oncontextmenu = function () {    return false;};//在本网页的任何键盘敲击事件都是无效操作 （防止F12和shift+ctrl+i调起开发者工具）window.onkeydown =    window.onkeyup =    window.onkeypress =        function () {            return true;        };//禁用开发者工具F12document.onkeydown = function () {    if (window.event && window.event.keyCode == 123) {        console.log(`%c W23-12 %c 你已打开控制台.`, 'color:white; background-color:#4f90d9');        console.log(`%c S013-782 %c 你现在正处于监控中.`, 'color:white; background-color:#d9534f');        btf.snackbarShow('开发者模式已打开，请遵循GPL协议');        return true;    }};window.onload = function () {    if (isWeiXin()) return alert('微信浏览器~推荐在PC端访问哦~');    if (isQQBrowser()) return alert('QQ浏览器~推荐在PC端访问哦~');    if (!isPC()) {        // alert('PC端访问效果更加哦');        btf.snackbarShow('PC端访问效果更加哦~');    }};/** * @description 是否是PC端 * @returns */var isPC = () => {    var userAgentInfo = navigator.userAgent;    var Agents = ['Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod'];    var flag = true;    for (var v = 0; v < Agents.length; v++) {        if (userAgentInfo.indexOf(Agents[v]) > 0) {            flag = false;            break;        }    }    return flag;};/** * @description 是否是微信浏览器 * @returns */var isWeiXin = () => {    return navigator.userAgent.match(/microMessenger/i) == 'micromessenger';};/**s * @description 是否是qq浏览器 * @returns */var isQQBrowser = () => {    return !!navigator.userAgent.match(/mqqbrowser|qzone|qqbrowser|qbwebviewtype/i);};/** * @description custom 函数 */var king = {    showIndexElement(e) {        e &&            setTimeout(() => {                e.classList.add('show');            }, 500);    },    initIndexEssay: function () {        setTimeout(() => {            let essaybarswiper = new Swiper('.essay-bar-swiper-container', {                passiveListeners: true,                direction: 'vertical',                loop: true,                autoplay: {                    disableOnInteraction: true,                    delay: 3000,                },                mousewheel: true,            });            let essaybarcomtainer = document.getElementById('bbtalk');            if (essaybarcomtainer !== null) {                essaybarcomtainer.onmouseenter = function () {                    essaybarswiper.autoplay.stop();                };                essaybarcomtainer.onmouseleave = function () {                    essaybarswiper.autoplay.start();                };            }        }, 100);    },    changeAttribute(el, attr) {        let hours = new Date().getHours();        if ((hours >= 0 && hours <= 6) || hours >= 19) el.setAttribute(attr, 'dark');        else {            window.location.pathname === '/svghovereffect/' && el.setAttribute(attr, 'dark');        }    },};/** * @description 执行函数 */king.initIndexEssay();king.changeAttribute(document.querySelector('html'), 'data-theme'); // 修改 html 模式 ['light','dark']king.showIndexElement(document.getElementById('content-inner'));]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/src/fcircle.js"/>
      <url>/js/src/fcircle.js</url>
      
        <content type="html"><![CDATA[var fdata = {    apiurl: 'https://kkapi.top/',    defaultFish: 500,    hungryFish: 500,};// see https://blog.zhheo.com///可通过 var fdataUser 替换默认值if (typeof fdataUser !== 'undefined') {    for (var key in fdataUser) {        if (fdataUser[key]) {            fdata[key] = fdataUser[key];        }    }}var randomPostTimes = 0;var randomPostWorking = false;var randomPostTips = [    '钓到了绝世好文！',    '在河边打了个喷嚏，吓跑了',    '你和小伙伴抢夺着',    '你击败了巨龙，在巢穴中发现了',    '挖掘秦始皇坟时找到了',    '在路边闲逛的时候随手买了一个',    '从学校班主任那拿来了孩子上课偷偷看的',    '你的同桌无情的从你的语文书中撕下了那篇你最喜欢的',    '考古学家近日发现了',    '外星人降临地球学习地球文化，落地时被你塞了',    '从图书馆顶层的隐秘角落里发现了闪着金光的',    '徒弟修炼走火入魔，为师立刻掏出了',    '在大山中唱山歌，隔壁的阿妹跑来了，带着',    '隔壁家的孩子数学考了满分，都是因为看了',    '隔壁家的孩子英语考了满分，都是因为看了',    '小米研发了全新一代MIX手机，据说灵感',    '修炼渡劫成功，还好提前看了',    '库克坐上了苹果CEO的宝座，因为他面试的时候看了',    '阿里巴巴大喊芝麻开门，映入眼帘的就是',    '师傅说练武要先炼心，然后让我好生研读',    '科考队在南极大陆发现了被冰封的',    '飞机窗户似乎被一张纸糊上了，仔细一看是',    '历史上满写的仁义道德四个字，透过字缝里却全是',    '十几年前的录音机似乎还能够使用，插上电发现正在播的是',    '新版语文书拟增加一篇熟读并背诵的',    '经调查，99%的受访者都没有背诵过',    '今年的高考满分作文是',    '唐僧揭开了佛祖压在五指山上的',    '科学家发现能够解决衰老的秘密，就是每日研读',    '英特尔发布了全新的至强处理器，其芯片的制造原理都是',    '新的iPhone产能很足，新的进货渠道是',    '今年亩产突破了八千万斤，多亏了',    '陆隐一统天上宗，在无数祖境高手的目光下宣读了',    '黑钻风跟白钻风说道，吃了唐僧肉能长生不老，他知道是因为看了',    '上卫生间没带纸，直接提裤跑路也不愿意玷污手中',    '种下一篇文章就会产生很多很多文章，我种下了',    '三十年河东，三十年河西，莫欺我没有看过',    '踏破铁血无觅处，得来全靠',    '今日双色球中了两千万，预测全靠',    '因为卷子上没写名字，老师罚抄',    '为了抗议世间的不公，割破手指写下了',    '在艺术大街上被贴满了相同的纸，走近一看是',    '这区区迷阵岂能难得住我？其实能走出来多亏了',    '今日被一篇文章顶上了微博热搜，它是',    '你送给乞丐一个暴富秘籍，它是',    'UZI一个走A拿下五杀，在事后采访时说他当时回想起了',    '科学家解刨了第一个感染丧尸病毒的人，发现丧尸抗体存在于',];var randomPostClick = 0;function fetchRandomPost() {    if (randomPostWorking == false) {        randomPostWorking = true;        //获取旋转角度        let randomRotate = randomPostTimes * 360;        let randomPostTipsItem = randomPostTips[Math.floor(Math.random() * randomPostTips.length)];        let randomPostLevel = '';        if (randomPostTimes > 10000) {            randomPostLevel = '愿者上钩';        } else if (randomPostTimes > 1000) {            randomPostLevel = '俯览天下';        } else if (randomPostTimes > 1000) {            randomPostLevel = '超越神了';        } else if (randomPostTimes > 100) {            randomPostLevel = '绝世渔夫';        } else if (randomPostTimes > 75) {            randomPostLevel = '钓鱼王者';        } else if (randomPostTimes > 50) {            randomPostLevel = '钓鱼宗师';        } else if (randomPostTimes > 20) {            randomPostLevel = '钓鱼专家';        } else if (randomPostTimes > 5) {            randomPostLevel = '钓鱼高手';        } else {            randomPostLevel = '钓鱼新手';        }        if (randomPostTimes >= 5) {            document.getElementById('random-post').innerHTML =                `钓鱼中... （Lv.` + randomPostTimes + ` 当前称号：` + randomPostLevel + `）`;        } else {            document.getElementById('random-post').innerHTML = `钓鱼中...`;        }        $('.random-post-start').css('transform', 'rotate(' + randomRotate + 'deg)');        window.setTimeout(function () {            //判断是否饥饿            if (                randomPostClick * fdata.hungryFish + fdata.defaultFish < randomPostTimes &&                Math.round(Math.random()) == 0            ) {                document.getElementById('random-post').innerHTML =                    '因为只钓鱼不吃鱼，过分饥饿导致本次钓鱼失败...';                randomPostWorking = false;            } else {                let fetchUrl = fdata.apiurl + 'randompost';                fetch(fetchUrl)                    .then(res => res.json())                    .then(json => {                        var title = json.title;                        var link = json.link;                        var author = json.author;                        if (document.querySelector('#random-post')) {                            document.getElementById('random-post').innerHTML =                                randomPostTipsItem +                                `来自友链 <b>` +                                author +                                `</b> 的文章：<a class="random-friends-post" onclick="randomClickLink()" target="_blank" href="` +                                link +                                `" rel="external nofollow">` +                                title +                                `</a>`;                        }                    });                randomPostWorking = false;            }            randomPostTimes += 1;        }, 2000);    }}fetchRandomPost();//添加点击统计function randomClickLink() {    randomPostClick += 1;}// 鱼塘列表function fetchAllPost() {    if (        window.localStorage.getItem('fcircleAllPost') &&        window.localStorage.getItem('fcirclePostData')    ) {        let { data, time } = JSON.parse(window.localStorage.getItem('fcircleAllPost'));        elementAppend(data);        clearLoadData('fcircleAllPost', time);    } else {        let fetchUrl = fdata.apiurl + 'all';        try {            fetch(fetchUrl)                .then(res => res.json())                .then(json => {                    if (!json && !json.article_data) return;                    $('#fc-loading-test').toggle();                    // 只需要前30条                    let result = json.article_data.filter((e, i) => i <= 30);                    window.localStorage.setItem(                        'fcirclePostData',                        JSON.stringify({ date: getDate(), postStatistical: json.statistical_data })                    );                    window.localStorage.setItem(                        'fcircleAllPost',                        JSON.stringify({ time: Date.now(), data: result })                    );                    setTimeout(() => ($('#fc-loading-test').toggle(), elementAppend(result)), 2000);                });        } catch (error) {            console.log(error);            alert('获取鱼塘数据出了点小问题~');        }    }}fetchAllPost();function elementAppend(target) {    target.forEach((e, i) => {        $('#fcircleContainer').append(            `<div class="fc-article">                    <a class="fc-article-title" href="${e.link}" target="_blank" rel="noopener nofollow" data-title="${e.title}">${e.title}</a>                    <div class="fc-article-avatar">                        <a data-link="${e.link}" rel="noopener nofollow" href="javascript:;">                            <img class="fc-img-avatar avatar entered loading" alt="avatar" src="${e.avatar}" data-ll-status="loading"></img>                            <span class="fc-article-author">${e.author}</span>                        </a>                        <span class="fc-article-time">                            <span class="fc-time-created">${e.created}</span>                        </span>                    </div>                </div>`        );    });    handleFcircleFooter();}// 一天后清空本地存储的数据, 重新获取function clearLoadData(name, time) {    // 过期清除localstorage    if (time) {        let t = Date.now() - time;        // time(1440) * 60 * 1000  即是一天的毫秒数        if (!(t < 1440 * 60 * 1000 && t > -1)) localStorage.removeItem(name);    }}function handleFcircleFooter() {    if (!document.getElementById('fcircle-footer')) return;    let e = document.querySelectorAll('.fc-data-lastupdated');    let { postStatistical } = JSON.parse(window.localStorage.getItem('fcirclePostData')) || {};    e[0].innerHTML = `更新于: ${window.localStorage.getItem('updatePostDate') || getDate()}`;    e[1].innerHTML = `订阅:${postStatistical.friends_num} 活跃:${postStatistical.active_num} 日志:${postStatistical.article_num}`;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/src/grayscale.js"/>
      <url>/js/src/grayscale.js</url>
      
        <content type="html"><![CDATA[/* * @Description: 站点公祭日自动变灰判定 * @version:  * @Author: king * @Date: 2022-09-13 23:04:33 * @LastEditors: king * @LastEditTime: 2022-09-13 23:04:34 */if(PublicSacrificeDay()){  document.getElementsByTagName("html")[0].setAttribute("style","filter:gray !important;filter:grayscale(100%);-webkit-filter:grayscale(100%);-moz-filter:grayscale(100%);-ms-filter:grayscale(100%);-o-filter:grayscale(100%);");}function PublicSacrificeDay(){    var PSFarr=new Array("0403","0404","0405","0406","0414","0512","0707","0807","0814","0909","0918","0930","1025","1213");    //2020年4月4日 新冠肺炎哀悼日，清明节    //2010年4月14日，青海玉树地震    //2008年5月12日，四川汶川地震    //1937年7月7日,七七事变 又称卢沟桥事变    //2010年8月7日，甘肃舟曲特大泥石流  //8月14日，世界慰安妇纪念日    //1976年9月9日，毛主席逝世  //1931年9月18日，九一八事变  //烈士纪念日为每年9月30日    //1950年10月25日，抗美援朝纪念日    //1937年12月13日，南京大屠杀    var currentdate = new Date();    var str = "";    var mm = currentdate.getMonth()+1;    if(currentdate.getMonth()>9){      str += mm;    }else{      str += "0" + mm;    }    if(currentdate.getDate()>9){      str += currentdate.getDate();    }else{      str += "0" + currentdate.getDate();    }    if(PSFarr.indexOf(str)>-1){        return 1;    }else{        return 0;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/src/runtime.js"/>
      <url>/js/src/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {    var grt = new Date('08/30/2022 00:00:00');    now.setTime(now.getTime() + 250);    var days = (now - grt) / 1e3 / 60 / 60 / 24,        dnum = Math.floor(days),        hours = (now - grt) / 1e3 / 60 / 60 - 24 * dnum,        hnum = Math.floor(hours);    1 == String(hnum).length && (hnum = '0' + hnum);    var minutes = (now - grt) / 1e3 / 60 - 1440 * dnum - 60 * hnum,        mnum = Math.floor(minutes);    1 == String(mnum).length && (mnum = '0' + mnum);    var seconds = (now - grt) / 1e3 - 86400 * dnum - 3600 * hnum - 60 * mnum,        snum = Math.round(seconds);    1 == String(snum).length && (snum = '0' + snum);    let currentTimeHtml = '';    (currentTimeHtml =        hnum < 18 && hnum >= 9            ? `<span class='textTip'> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`            : `<span class='textTip'> 本站居然运行了 ${dnum} 天</span><span id='runtime'> ${hnum} 小时 ${mnum} 分 ${snum} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`),        document.getElementById('workboard') &&            (document.getElementById('workboard').innerHTML = currentTimeHtml);}setInterval(() => {    createtime();}, 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/src/winbox.js"/>
      <url>/js/src/winbox.js</url>
      
        <content type="html"><![CDATA[/* * @Description: 切换博客背景 js * @version: 0.0.1 * @Author: king * @Date: 2022-09-26 10:56:18 * @LastEditors: king * @LastEditTime: 2022-09-26 11:43:29 */console.log(    `  %cHello,欢迎你来到我的博客。  如果你喜欢上了本站某个样式的话，尽管借鉴即可。  让我们一起学习进步，如果有什么不解可以给我留言。  但是请不要恶意攻击本站哦~在此先行谢过了，请你吃糖🍭🍭🍭`,    'line-height:22px;color:#00a5f2');// 获取当前年月日时分秒function getDate() {    var date = new Date();    var year = date.getFullYear(); //  返回的是年份    var month = date.getMonth() + 1; //  返回的月份上个月的月份，记得+1才是当月    var day = date.getDate(); //  返回的是几号    var hours = date.getHours(); // 返回的是小时(0 ~ 23)    var minutes = date.getMinutes(); // 返回的是分钟(0 ~ 59)    var seconds = date.getSeconds(); // 返回的是秒数(0 ~ 59)    month < 10 ? (month = '0' + month) : month;    day < 10 ? (day = '0' + day) : day;    hours < 10 ? (hours = '0' + hours) : hours;    minutes < 10 ? (minutes = '0' + minutes) : minutes;    seconds < 10 ? (seconds = '0' + seconds) : seconds;    return year + '-' + month + '-' + day + ' ' + hours + ':' + minutes + ':' + seconds;}// 存数据// name：命名 data：数据function saveData(name, data) {    localStorage.setItem(name, JSON.stringify({ time: Date.now(), data: data }));}// 取数据// name：命名 time：过期时长,单位分钟,如传入30,即加载数据时如果超出30分钟返回0,否则返回数据;  默认传入的1440function loadData(name, time) {    let d = JSON.parse(localStorage.getItem(name));    // 过期或有错误返回 0 否则返回数据    if (d) {        let t = Date.now() - d.time;        // time(1440) * 60 * 1000  即是一天的毫秒数        if (t < time * 60 * 1000 && t > -1) return d.data;    }    return 0;}// 上面两个函数如果你有其他需要存取数据的功能，也可以直接使用// 读取背景try {    let data = loadData('blogbg', 1440);    if (data) changeBg(data, 1);    else localStorage.removeItem('blogbg');} catch (error) {    localStorage.removeItem('blogbg');}// 切换背景函数// 此处的flag是为了每次读取时都重新存储一次,导致过期时间不稳定// 如果flag为0则存储,即设置背景. 为1则不存储,即每次加载自动读取背景.function changeBg(s, flag) {    let bg = document.getElementById('web_bg');    if (s.charAt(0) == '#') {        bg.style.backgroundColor = s;        bg.style.backgroundImage = 'none';    } else bg.style.backgroundImage = s;    if (!flag) {        btf.snackbarShow('壁纸切换成功，将于一天后到期~');        saveData('blogbg', s);    }}// 以下为2.0新增内容// 创建窗口var winbox = '';function createWinbox() {    let div = document.createElement('div');    document.body.appendChild(div);    winbox = WinBox({        id: 'changeBgBox',        index: 999,        title: '切换背景',        x: 'center',        y: 'center',        minwidth: '300px',        height: '60%',        background: 'var(--referto-literature-background-color)',        onmaximize: () => {            div.innerHTML = `<style>body::-webkit-scrollbar {display: none;}div#changeBgBox {width: 100% !important;}</style>`;        },        onrestore: () => {            div.innerHTML = '';        },    });    winResize();    window.addEventListener('resize', winResize);    // 每一类我放了一个演示，直接往下复制粘贴 a标签 就可以，需要注意的是 函数里面的链接 冒号前面需要添加反斜杠\进行转义    winbox.body.innerHTML = `    <style>        #changeBgBox .note {            font-size: 14px;            margin: 0 0 10px;            padding: 9px 0 9px 2.3rem;        }        #changeBgBox .note:not(.no-icon)::before,        #changeBgBox .note>.note-icon {            left: 0.5em;        }        #changeBgBox button {            padding:12px 0 !important;        }        #changeBgBox a.imgbox {            text-decoration: none !important;        }        #changeBgBox .toggle>.toggle-content {            margin: 0;        }    </style>    <div id="article-container" style="padding:10px;">        <div class="note info simple">    <p>点击对应样式即可切换背景。<br>相册图片也可以当作壁纸哦～<a href="/gallery/wallpaper/" data-pjax-state="">前往相册</a></p>    </div>    <div class="note pink icon-padding simple">    <i class="note-icon fas fa-image"></i>    <p>有效期为一天，到期切回默认壁纸。</p>    </div>    <p><button onclick="localStorage.removeItem('blogbg');location.reload();" style="background:#5fcdff;display:block;width:100%;padding: 15px 0;border-radius:6px;color:white;"><i class="fa-solid fa-arrows-rotate"></i> 点我恢复默认背景</button></p>        <h2 id="图片（电脑）"><a href="#图片（电脑）" class="headerlink" title="图片（电脑）"></a>图片（电脑）</h2>    <details class="toggle">    <summary class="toggle-button">查看手机壁纸</summary>    <div class="toggle-content">        <div class="bgbox">        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2020/12/2020121409235638.jpeg)" class="imgbox" onclick="changeBg('url(https://img.vm.laomishuo.com/image/2020/12/2020121409235638.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/11/2021111016580917.jpeg)" class="imgbox" onclick="changeBg('url(https://img.vm.laomishuo.com/image/2021/11/2021111016580917.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://xinzhuobu.com/wp-content/uploads/2022/06/20220617004th.jpg)" class="imgbox" onclick="changeBg('url(https://xinzhuobu.com/wp-content/uploads/2022/06/20220617004th.jpg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/11/2021110119420045.jpeg)" class="imgbox" onclick="changeBg('url(https://img.vm.laomishuo.com/image/2021/11/2021110119420045.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/11/2021111016525829.jpeg)" class="imgbox" onclick="changeBg('url(https://img.vm.laomishuo.com/image/2021/11/2021111016525829.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://www.toopic.cn/public/uploads/image/20200407/20200407210607_94155.jpg)" class="imgbox" onclick="changeBg('url(https://www.toopic.cn/public/uploads/image/20200407/20200407210607_94155.jpg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/04/2021040311203011.jpeg)" class="imgbox" onclick="changeBg('url(https://img.vm.laomishuo.com/image/2021/04/2021040311203011.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(http://img.wwery.com/Sugar/mjYVBNkj.jpg)" class="imgbox" onclick="changeBg('url(http://img.wwery.com/Sugar/mjYVBNkj.jpg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.wwery.com/Sugar/t306AFbf.png)" class="imgbox" onclick="changeBg('url(https://img.wwery.com/Sugar/t306AFbf.png)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.wwery.com/Sugar/HGawPyFe.png)" class="imgbox" onclick="changeBg('url(https://img.wwery.com/Sugar/HGawPyFe.png)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.wwery.com/Sugar/6ih6G7Kq.png)" class="imgbox" onclick="changeBg('url(https://img.wwery.com/Sugar/6ih6G7Kq.png)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.wwery.com/Sugar/oSEupdjk.png)" class="imgbox" onclick="changeBg('url(https://img.wwery.com/Sugar/oSEupdjk.png)')"></a>        </div>    </div>    </details>            <h2 id="图片（手机）"><a href="#图片（手机）" class="headerlink" title="图片（手机）" data-pjax-state=""></a>图片（手机）</h2>    <details class="toggle">    <summary class="toggle-button">查看手机壁纸</summary>    <div class="toggle-content">        <div class="bgbox">        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/12/2021122715170589.jpeg)" class="pimgbox" onclick="changeBg('url(https\://img.vm.laomishuo.com/image/2021/12/2021122715170589.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/05/2021053107390019.jpeg)" class="pimgbox" onclick="changeBg('url(https\://img.vm.laomishuo.com/image/2021/05/2021053107390019.jpeg')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/08/2021082418471438.jpeg)" class="pimgbox" onclick="changeBg('url(https\://img.vm.laomishuo.com/image/2021/08/2021082418471438.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/05/2021053111333664.jpeg)" class="pimgbox" onclick="changeBg('url(https\://img.vm.laomishuo.com/image/2021/05/2021053111333664.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/05/2021052509214162.jpeg)" class="pimgbox" onclick="changeBg('url(https\://img.vm.laomishuo.com/image/2021/05/2021052509214162.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/10/2021101113150626.jpeg)" class="pimgbox" onclick="changeBg('url(https\://img.vm.laomishuo.com/image/2021/10/2021101113150626.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/12/2021121119294157.jpeg)" class="pimgbox" onclick="changeBg('url(https\://img.vm.laomishuo.com/image/2021/12/2021121119294157.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2022/05/2022050211365433.jpg)" class="pimgbox" onclick="changeBg('url(https:\//img.vm.laomishuo.com/image/2022/05/2022050211365433.jpg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/01/2021011114540487.jpeg)" class="pimgbox" onclick="changeBg('url(https\://img.vm.laomishuo.com/image/2021/01/2021011114540487.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/10/2021101112481925.jpeg)" class="pimgbox" onclick="changeBg('url(https\://img.vm.laomishuo.com/image/2021/10/2021101112481925.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2020/12/2020120109592351.jpeg)" class="pimgbox" onclick="changeBg('url(https\://img.vm.laomishuo.com/image/2020/12/2020120109592351.jpeg)')"></a>        <a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://img.vm.laomishuo.com/image/2021/08/2021081519313621.jpeg)" class="pimgbox" onclick="changeBg('url(https\://img.vm.laomishuo.com/image/2021/08/2021081519313621.jpeg)')"></a>        </div>    </div>    </details>    <h2 id="渐变色"><a href="#渐变色" class="headerlink" title="渐变色"></a>渐变色</h2>    <details class="toggle"><summary class="toggle-button" style="">查看渐变背景</summary>        <div class="toggle-content">            <div class="bgbox">            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: linear-gradient(to right, #eecda3, #ef629f)" onclick="changeBg('linear-gradient(to right, #eecda3, #ef629f)')"></a>            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: linear-gradient(to right, rgb(255, 110, 127), rgb(191, 233, 255))" onclick="changeBg('linear-gradient(to right, #eecda3, #ef629f)')"></a>            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: linear-gradient(to right, #ff4b1f, #1fddff)" onclick="changeBg('linear-gradient(to right, #ff4b1f, #1fddff)')"></a>            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: linear-gradient(to right, rgb(251, 215, 134), rgb(247, 121, 125))" onclick="changeBg('linear-gradient(to right, rgb(251, 215, 134), rgb(247, 121, 125))')"></a>            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: linear-gradient(to right, #16bffd, #cb3066)" onclick="changeBg('linear-gradient(to right, #16bffd, #cb3066)')"></a>            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: linear-gradient(to right, rgb(192, 192, 170), rgb(28, 239, 255))" onclick="changeBg('linear-gradient(to right, rgb(192, 192, 170), rgb(28, 239, 255))')"></a>            </div>        </div>    </details>    <h2 id="纯色"><a href="#纯色" class="headerlink" title="纯色"></a>纯色</h2>    <details class="toggle"><summary class="toggle-button" style="">查看纯色背景</summary>        <div class="toggle-content">            <div class="bgbox">            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: #F4E2D8" onclick="changeBg('#F4E2D8')"></a>            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: #7D9D9C" onclick="changeBg('#7D9D9C')"></a>            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: #F2D7D9" onclick="changeBg('#F2D7D9')"></a>            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: #76BA99" onclick="changeBg('#76BA99')"></a>            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: #9FC088" onclick="changeBg('#9FC088')"></a>            <a href="javascript:;" rel="noopener external nofollow" class="box" style="background: #CEAB93" onclick="changeBg('#CEAB93')"></a>            </div>        </div>    </details>`;}// 适应窗口大小function winResize() {    var offsetWid = document.documentElement.clientWidth;    if (offsetWid <= 768) {        winbox.resize(offsetWid * 0.95 + 'px', '90%').move('center', 'center');    } else {        winbox.resize(offsetWid * 0.6 + 'px', '70%').move('center', 'center');    }}// 切换状态，窗口已创建则控制窗口显示和隐藏，没窗口则创建窗口function toggleWinbox() {    if (document.querySelector('#changeBgBox')) winbox.toggleClass('hide');    else createWinbox();}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[.folding-tag .content {    font-size: 1rem;}.folding-tag table {    text-align: left;}#article-container    a:not([data-fancybox='gallery']):not([data-caption]):not(.headerlink):not(.ghcard):not(.fancybox):not(.article-sort-item-img):not(.article-sort-item-title):not(.fc-overshow-heada):not(.flink-list-card):not(.site-card):not(.flink-list-item        > a):not(.fArticlelink):not(.fArticleTitle):not(.bangumi-title        > a):not(.bangumi-button):not(.bangumi-tab) {    border-bottom: solid 2px var(--liusiqi-lighttext);    color: var(--liusiqi-fontcolor) !important;    padding: 0 0.2em;    text-decoration: none;}#article-container    a:not([data-fancybox='gallery']):not([data-caption]):not(.headerlink):not(.ghcard):not(.fancybox):not(.article-sort-item-img):not(.article-sort-item-title):not(.fc-overshow-heada):not(.flink-list-card):not(.site-card):not(.flink-list-item        > a):not(.fArticlelink):not(.fArticleTitle):not(.bangumi-title        > a):not(.bangumi-button):not(.bangumi-tab):hover {    color: var(--liusiqi-white) !important;    background: var(--liusiqi-theme);    box-shadow: var(--liusiqi-shadow-lightblack);    border-radius: 0.25em;}/* 页面布局大小 */.page .layout,.post .layout {    max-width: 1450px;    font-size: 1rem;}.page .layout {    transition: all .3s;    opacity: 0 !important;}.page #content-inner.layout div{    visibility: visible;}.page #content-inner.layout.show {    opacity: 1 !important;}.aside-content {    max-width: 312px;    min-width: 250px;}#page .transparent-page #article-container .recent-post-item{    border: var(--style-border);    border-radius: 12px;    background: var(--card-bg);    margin: 1rem 0;    cursor: url('/img/x2.cur'), auto;}#page .transparent-page #article-container .recent-post-item:hover{    border: var(--style-border-hover);    box-shadow: var(--liusiqi-shadow-main);}/* @font-face {  font-family: Candyhome;  src: url(https://cdn.cbd.int/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://cdn.cbd.int/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;}/*3s为加载动画的时间，1为加载动画的次数，ease-in-out为动画效果*//* #page-header,#web_bg {    -webkit-animation: imgblur 3s 1 ease-in-out;    animation: imgblur 3s 1 ease-in-out;} *//* @keyframes imgblur {    0% {        filter: blur(5px);    }    100% {        filter: blur(0px);    }} *//*适配使用-webkit内核的浏览器 *//* @-webkit-keyframes imgblur {    0% {        -webkit-filter: blur(5px);    }    100% {        -webkit-filter: blur(0px);    }} */div#menus {    font-family: 'ZhuZiAYuanJWD';}h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;}a.article__title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {    font-family: ZhuZiAYuanJWD;}/* 时间轴生肖icon */svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;}/* svg.icon */.icon-zhongbiao::before {    color: #f7c768;}/* bilibli番剧插件 */.bangumi-active {    background: #dbecfe !important;    border-radius: 10px !important;}a.bangumi-tab:hover {    text-decoration: none !important;}.bangumi-button:hover {    background: #dbecfe !important;    border-radius: 10px !important;}a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;}.bangumi-button {    padding: 5px 10px !important;}a.bangumi-tab {    padding: 5px 10px !important;}svg.icon.faa-tada {    font-size: 1.1em;}/* 解决artitalk的图标问题 */#uploadSource > svg {    width: 1.19em;    height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 *//* #page-header:not(.not-top-img):before {    background-color: transparent !important;} *//* 首页文章卡片 */.bbTimeList .bber-logo {    animation: rotate 1.6s linear infinite;}@keyframes rotate {    0% {        -webkit-transform: rotate(0);        transform: rotate(0);    }    to {        -webkit-transform: rotate(-1turn);        transform: rotate(-1turn);    }}.bber-logo {    font-size: 1.5rem !important;    line-height: 22px;    margin-right: 1rem;    transition: all 0.3s ease 0s;}#recent-posts > .recent-post-item {    position: relative;    background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {    background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {    background: rgba(255, 255, 255, 0.9);    overflow: hidden;    /* background: var(--global-bg); */}/* 归档页面 */div#archive {    background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {    background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {    background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme='dark'] #recent-posts > .recent-post-item {    background: #121212;}[data-theme='dark'] .card-widget {    background: #121212 !important;}[data-theme='dark'] div#post {    background: #121212 !important;}[data-theme='dark'] div#tag {    background: #121212 !important;}[data-theme='dark'] div#archive {    background: #121212 !important;}[data-theme='dark'] div#page {    background: #121212;}[data-theme='dark'] div#category {    background: #121212 !important;}[data-theme='dark'] div#category {    background: transparent !important;}/* 头图透明 */#page-header {    background: transparent !important;}#rightside > div > button {    border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar-thumb {    background-color: #007aff;    border-radius: 2em;}::-webkit-scrollbar-corner {    background-color: transparent;}::-moz-selection {    color: #fff;    background-color: #007aff;}/* background: rgba(18,18,18,0.8); */[data-theme='dark'] ::-webkit-scrollbar-thumb {    background: rgba(18, 18, 18, 0.8);}[data-theme='dark'] ::-moz-selection {    background: rgba(18, 18, 18, 0.8);}/* 音乐播放器 *//* .aplayer .aplayer-lrc {    display: none !important;  } */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {    z-index: 999999 !important;}/* 评论框  */.vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;}/* 鼠标图标 */body {    cursor: url('/img/x1.cur'), auto;}a,[type='button']:not(:disabled),[type='reset']:not(:disabled),[type='submit']:not(:disabled),button:not(:disabled) {    cursor: url('/img/x2.cur'), auto !important;}/* md网站下划线 */#article-container a:hover {    text-decoration: none !important;}#article-container #hpp_talk p img {    display: inline;}/* 404页面 */#error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);}#error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;}#error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #49b1f5;    background-position: center;    background-size: cover;}#error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft JhengHei',        'Microsoft YaHei', sans-serif;}#error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;}#error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);}#body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--heo-card-bg);    display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;}#body-wrap.error .aside-list .aside-list-item .content time {    display: none;}/* 代码框主题 */#article-container figure.highlight {    border-radius: 10px;}/*哔哩哔哩视频适配*/.aspect-ratio {    position: relative;    width: 100%;    height: 0;    padding-bottom: 75%;    margin: 3% auto;    text-align: center;}.aspect-ratio iframe {    position: absolute;    width: 100%;    height: 100%;    left: 0;    top: 0;}/* 文章页H1-H6图标样式效果 */h1::before,h2::before,h3::before,h4::before,h5::before,h6::before {    -webkit-animation: ccc 1.6s linear infinite;    animation: ccc 1.6s linear infinite;}@-webkit-keyframes ccc {    0% {        -webkit-transform: rotate(0deg);        transform: rotate(0deg);    }    to {        -webkit-transform: rotate(-1turn);        transform: rotate(-1turn);    }}@keyframes ccc {    0% {        -webkit-transform: rotate(0deg);        transform: rotate(0deg);    }    to {        -webkit-transform: rotate(-1turn);        transform: rotate(-1turn);    }}#content-inner #post {    font-size: 1rem;}/* h1-h6小风车颜色大小修改 */#content-inner.layout h1::before {    color: #ef50a8;    margin-left: -1.55rem;    font-size: 1.3rem;    margin-top: -0.23rem;}#content-inner.layout h2::before {    color: #fb7061;    margin-left: -1.35rem;    font-size: 1.1rem;    margin-top: -0.12rem;}#content-inner.layout h3::before {    color: #ffbf00;    margin-left: -1.22rem;    font-size: 0.95rem;    margin-top: -0.09rem;}#content-inner.layout h4::before {    color: #a9e000;    margin-left: -1.05rem;    font-size: 0.8rem;    margin-top: -0.09rem;}#content-inner.layout h5::before {    color: #57c850;    margin-left: -0.9rem;    font-size: 0.7rem;    margin-top: 0rem;}#content-inner.layout h6::before {    color: #5ec1e0;    margin-left: -0.9rem;    font-size: 0.66rem;    margin-top: 0rem;}/* h1-h6小风车hover效果 *//* 页面设置icon转动速度调整 */#rightside_config i.fas.fa-cog.fa-spin {    animation: fa-spin 5s linear infinite;}#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover {    color: #425aef;}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before {    color: #425aef;    -webkit-animation: ccc 3.2s linear infinite;    animation: ccc 3.2s linear infinite;}/* tags样式 */#aside-content .card-tag-cloud a {    color: var(--liusiqi-fontcolor) !important;    font-size: 1.05rem !important;    border-radius: 8px;    display: inline-block;    margin-right: 4px;}#aside-content .card-tag-cloud a:hover {    background: var(--liusiqi-theme);    color: var(--liusiqi-white) !important;    box-shadow: var(--liusiqi-shadow-theme);}@media screen and (min-width: 1300px) {    #aside-content .card-tag-cloud a:hover {        transform: scale(1.03);    }    #aside-content .card-tag-cloud a:active {        transform: scale(0.97);    }}#aside-content .card-tag-cloud a sup {    opacity: 0.4;    margin-left: 2px;}/* 归档样式 */span.card-archive-list-count {    width: auto;    text-align: left;    font-size: 1.5rem;    line-height: 0.9;    font-weight: 700;}.card-archive-list-count-group {    display: flex;    flex-direction: row;    align-items: baseline;}#aside-content .card-archives ul.card-archive-list > .card-archive-list-item a span:last-child,#aside-content .card-categories ul.card-category-list > .card-category-list-item a span:last-child {    width: fit-content;    margin-left: 4px;}span.card-archive-list-count {    width: auto;    text-align: left;    font-size: 1.1rem;    line-height: 0.9;    font-weight: 700;}.card-archive-list-date {    font-size: 14px;    opacity: 0.6;}li.card-archive-list-item {    width: 100%;    flex: 0 0 48%;}#aside-content .card-archives ul.card-archive-list > .card-archive-list-item a:hover,#aside-content .card-categories ul.card-category-list > .card-category-list-item a:hover {    color: var(--liusiqi-white);    background-color: var(--liusiqi-theme);    box-shadow: var(--liusiqi-shadow-theme);    border-radius: 8px;    padding-left: 0.5rem;    padding-right: 0.5rem;}@media screen and (min-width: 1300px) {    #aside-content .card-archives ul.card-archive-list > .card-archive-list-item a:hover,    #aside-content .card-categories ul.card-category-list > .card-category-list-item a:hover {        transform: scale(1.03);    }    #aside-content .card-archives ul.card-archive-list > .card-archive-list-item a:active,    #aside-content .card-categories ul.card-category-list > .card-category-list-item a:active {        transform: scale(0.97);    }}#aside-content .card-archives ul.card-archive-list > .card-archive-list-item a,#aside-content .card-categories ul.card-category-list > .card-category-list-item a {    border-radius: 8px;    margin: 4px 0;    display: flex;    flex-direction: column;    align-content: space-between;    border: var(--style-border);}#aside-content .card-archives ul.card-archive-list > .card-archive-list-item a span:first-child,#aside-content    .card-categories    ul.card-category-list    > .card-category-list-item    a    span:first-child {    width: auto;    flex: inherit;}#aside-content .card-archives ul.card-archive-list,#aside-content .card-categories ul.card-category-list {    display: flex;    flex-direction: row;    justify-content: space-between;    flex-wrap: wrap;}#aside-content .aside-list > .aside-list-item .content > time {    display: none;}#aside-content .aside-list > .aside-list-item .content > .title {    -webkit-line-clamp: 3;    font-weight: 700;    padding: 2px 0;}#aside-content .aside-list > .aside-list-item {    padding: 8px;    padding-top: 6px !important;    padding-bottom: 6px !important;    border-radius: 12px;    transition: 0.3s;    margin: 4px 0;    cursor: pointer;}@media screen and (max-width: 900px) {    #aside-content {        max-width: 100%;    }}@media screen and (min-width: 1300px) {    #aside-content .aside-list > .aside-list-item:hover {        transform: scale(1.03);    }    #aside-content .aside-list > .aside-list-item:active {        transform: scale(0.97);    }}#aside-content .aside-list > .aside-list-item:hover .thumbnail > img {    transform: scale(1);}#aside-content .aside-list > .aside-list-item:not(:last-child) {    border-bottom: 0 dashed var(--liusiqi-background) !important;}#aside-content .aside-list > .aside-list-item .thumbnail {    border-radius: 8px;    border: var(--style-border);}#aside-content .aside-list > .aside-list-item:hover {    background: var(--liusiqi-blue-main);    color: var(--liusiqi-white);    transition: 0.3s;    box-shadow: var(--liusiqi-shadow-main);}#aside-content .aside-list > .aside-list-item:hover a {    color: var(--liusiqi-white) !important;}.card-widget.card-recent-post {    padding: 0.4rem 0.6rem !important;}/* 最近文章css样式 */#aside-content .aside-list > .aside-list-item .content > time {    display: none;}#aside-content .aside-list > .aside-list-item .content > .title {    -webkit-line-clamp: 3;    font-weight: 700;    padding: 2px 0;}#aside-content .aside-list > .aside-list-item {    padding: 8px;    padding-top: 6px !important;    padding-bottom: 6px !important;    border-radius: 12px;    transition: 0.3s;    margin: 4px 0;    cursor: pointer;}@media screen and (min-width: 1300px) {    #aside-content .aside-list > .aside-list-item:hover {        transform: scale(1.03);    }    #aside-content .aside-list > .aside-list-item:active {        transform: scale(0.97);    }}#aside-content .aside-list > .aside-list-item:hover .thumbnail > img {    transform: scale(1);}#aside-content .aside-list > .aside-list-item:not(:last-child) {    border-bottom: 0 dashed var(--liusiqi-background) !important;}#aside-content .aside-list > .aside-list-item .thumbnail {    border-radius: 8px;    border: var(--style-border);}#aside-content .aside-list > .aside-list-item:hover {    background: var(--liusiqi-blue-main);    color: var(--liusiqi-white);    transition: 0.3s;    box-shadow: var(--liusiqi-shadow-main);}#aside-content .aside-list > .aside-list-item:hover a {    color: var(--liusiqi-white) !important;}.card-widget.card-recent-post {    padding: 0.4rem 0.6rem !important;}/* 修改侧边栏 author 样式 */#aside-content > .card-widget.card-info {    background: linear-gradient(-45deg, var(--liusiqi-theme), #031764, #150136, #67044d);    background-size: 400%;    /* box-shadow: var(--heo-shadow-black); */    animation: gradient 15s ease infinite;    position: relative;    color: var(--liusiqi-white);}@-webkit-keyframes gradient {    0% {        background-position: 0 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0 50%;    }}@keyframes gradient {    0% {        background-position: 0 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0 50%;    }}#aside-content .card-info .author-info__name {    font-size: 1.7rem !important;}#aside-content .card-info .author-info__description {    font-size: 1rem !important;}.site-data > a .headline,.site-data > a .length-num {    color: var(--liusiqi-white);    font-size: 1.2em;    font-family: 'ZhuZiAYuanJWD';    font-weight: 500;}#aside-content .card-info #card-info-btn {    border-radius: 7px;    font-size: 1.2em;    font-family: 'ZhuZiAYuanJWD';    font-weight: 500;}#aside-content .card-info .card-info-social-icons {    font-size: 1rem;}/* 修改侧边栏今日诗词样式 */div#poem_sentence,div#poem_info {    font-family: 'ZhuZiAYuanJWD' !important;    text-shadow: 2px 2px 4px rgb(0 0 0 / 15%);    font-size: 1.2rem !important;}div#poem_info {    font-size: inherit !important;}/* 修改分页按钮样式 */#pagination {    width: 100%;}#pagination .pagination {    position: relative;    display: flex;    justify-content: center;}@media screen and (min-width: 768px) {    #pagination a.extend.next,    #pagination a.extend.prev {        width: 3rem;        background: var(--liusiqi-card-bg);        box-shadow: var(--liusiqi-shadow-border);        border: var(--style-border);        display: flex;        align-items: center;        justify-content: center;        overflow: hidden;        transition: 0.3s;        position: absolute;    }    #pagination a.extend.next {        right: 0;    }    #pagination a.extend.prev {        left: 0;    }}#pagination .page-number.current {    background-color: #425aef;}#pagination .fa-solid,#pagination .fas,#pagination .page-number {    color: black;}/* 黑色背景下分页数字颜色 */[data-theme='dark'] #pagination .fa-solid,[data-theme='dark'] #pagination .fas,[data-theme='dark'] #pagination .page-number {    color: var(--white);}/* 加载渐变条 */.pace {    -webkit-pointer-events: none;    pointer-events: none;    -webkit-user-select: none;    -moz-user-select: none;    user-select: none;    z-index: 2000;    position: fixed;    margin: auto;    top: 10px;    left: 0;    right: 0;    height: 8px;    border-radius: 8px;    width: 4rem;    background: #eaecf2;    border: 1px #e3e8f7;    overflow: hidden;}.pace-inactive .pace-progress {    opacity: 0;    transition: 0.3s ease-in;}.pace .pace-progress {    -webkit-box-sizing: border-box;    -moz-box-sizing: border-box;    -ms-box-sizing: border-box;    -o-box-sizing: border-box;    box-sizing: border-box;    -webkit-transform: translate3d(0, 0, 0);    -moz-transform: translate3d(0, 0, 0);    -ms-transform: translate3d(0, 0, 0);    -o-transform: translate3d(0, 0, 0);    transform: translate3d(0, 0, 0);    max-width: 200px;    position: absolute;    z-index: 2000;    display: block;    top: 0;    right: 100%;    height: 100%;    width: 100%;    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);    animation: gradient 1.5s ease infinite;    background-size: 200%;}.pace.pace-inactive {    opacity: 0;    transition: 0.3s;    top: -8px;}/* 文章目录 */#aside-content .card-widget {    border-radius: 12px;    /* font-weight: 500; */}#aside-content .item-headline {    display: none;}#aside-content #card-toc:hover .toc-content .toc-link:not(.active) span {    opacity: 1;    filter: blur(0);}#aside-content #card-toc .toc-content {    overflow-y: auto;}#aside-content #card-toc .toc-content .toc-link {    line-height: 1.2;    padding: 8px;    border-left: 0 solid transparent;    border-radius: 12px;    color: var(--liusiqi-secondtext);    cursor: default;}#aside-content #card-toc .toc-content .toc-link:hover {    color: var(--liusiqi-lighttext);}#aside-content #card-toc .toc-content .toc-link:not(.active) span {    opacity: 0.6;    cursor: pointer;    filter: blur(1px);    transition: 0.3s;}#aside-content #card-toc .toc-content .toc-link:not(.active) span:hover {    color: var(--liusiqi-lighttext);}/* active */#aside-content #card-toc .toc-content .toc-item.active .toc-link {    opacity: 1;}#aside-content #card-toc .toc-content .toc-link.active {    line-height: 1.2;    border-left-color: var(--liusiqi-hovertext);    background-color: transparent !important;    color: var(--liusiqi-lighttext);    font-weight: 700;}#aside-content #card-toc .toc-content .toc-link.active span {    font-size: 20px;}/* 评论 *//* 设置文字内容 :nth-child(1)的作用是选择第几个 */#twikoo .el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(1):before {    content: '输入QQ号会自动获取昵称和头像🐧';}#twikoo .el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(2):before {    content: '收到回复将会发送到您的邮箱📧';}#twikoo .el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(3):before {    content: '可以通过昵称访问您的网站🔗';}/* 当用户点击输入框时显示 */#twikoo .el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::before,#twikoo .el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::after {    display: block;}/* 主内容区 */#twikoo .el-input.el-input--small.el-input-group.el-input-group--prepend::before {    /* 先隐藏起来 */    display: none;    /* 绝对定位 */    position: absolute;    /* 向上移动60像素 */    top: -60px;    /* 文字强制不换行，防止left:50%导致的文字换行 */    white-space: nowrap;    /* 圆角 */    border-radius: 10px;    /* 距离左边50% */    left: 50%;    /* 然后再向左边挪动自身的一半，即可实现居中 */    transform: translate(-50%);    /* 填充 */    padding: 14px 18px;    background: #444;    color: #fff;}/* 小角标 */#twikoo .el-input.el-input--small.el-input-group.el-input-group--prepend::after {    display: none;    content: '';    position: absolute;    /* 内容大小（宽高）为0且边框大小不为0的情况下，每一条边（4个边）都是一个三角形，组成一个正方形。    我们先将所有边框透明，再给其中的一条边添加颜色就可以实现小三角图标 */    border: 12px solid transparent;    border-top-color: #444;    left: 50%;    transform: translate(-50%, -48px);}/* 评论样式 */.tk-comments-container > .tk-comment {    margin-top: 0 !important;    margin-bottom: 1.5rem;    background: var(--liusiqi-card-bg);    transition: 0.3s;    border-radius: 12px;    padding: 1.2em;    border: none;    border-top: var(--style-border-dashed);}#twikoo .tk-comment > .tk-main .tk-content {    background: var(--liusiqi-card-child-bg);    padding: 15px 20px;    border-radius: 10px;}#twikoo .tk-comment>.tk-main .tk-content blockquote,div.barrageContent blockquote {    padding: 0;     border: none;     background-color: transparent;}#twikoo .tk-comment>.tk-main .tk-content p{    margin: 0;}.tk-extras {    margin-top: 0.5rem;    padding-bottom: 0.5rem;}b,strong {    color: var(--liusiqi-lighttext);}#footer-wrap {    color: var(--font-color);}/* 即刻短文 */.title-and-tips {    display: flex;    align-items: center;}.title-and-tips .page-title {    line-height: 1;    margin: 0;}.title-and-tips .page-tips {    background: var(--King-yellow-op);    color: var(--King-yellow);    margin-bottom: auto;    border-radius: 8px;    padding: 2px 6px;    font-size: 0.5rem;    margin-left: 8px;}#bber {    margin-top: 1rem;    width: 100%;}li,ul {    list-style: none;    display: block;    margin: 0;    padding: 0;}#bber ul.list {    display: flex;    flex-direction: row;    flex-wrap: wrap;    justify-content: space-between;    position: relative;    /* column-count: 3;    column-gap: 20px; */    height: 1000px;}#bber .timeline #waterfall {    opacity: 0;    transition: all 0.3s ease 0s;}#bber .timeline #waterfall.show{    opacity: 1;}#bber .timeline ul li.bber-item {    position: absolute;    width: 32%;    border: var(--style-border-always);    border-radius: 12px;    padding: 1rem;    padding-bottom: 0.5rem;    transition: all 0.3s ease 0s;    display: flex;    flex-direction: column;    flex-wrap: nowrap;    justify-content: space-between;    align-items: flex-start;    background: var(--King-card-bg);    box-shadow: var(--King-shadow-border);}#bber .timeline ul li.bber-item:hover {    border: var(--style-border-hover);}#bber div.bber-content {    display: flex;    flex-flow: wrap;    border-radius: 12px;    width: 100%;    height: 100%;    padding-bottom: 8px;    border-bottom: 1px dashed var(--King-theme-op);}#bber .bber-content .datacont {    order: 0;    font-size: 0.9rem;    font-weight: 700;    color: var(--King-fontcolor);    width: 100%;    line-height: 1.38;    border-radius: 12px;    margin-bottom: 0.5rem;    display: flex;    flex-direction: column;    text-align: justify;}#bber .bber-container-img{    display: flex;    align-items: center;    justify-content: space-around;    width: 100%;    flex-wrap: wrap;    margin-bottom: .3rem;}#bber .bber-content-img{    height: 100px;    border-radius: 12px;    overflow: hidden;    display: flex;    position: relative;    width: calc(100% / 4 - 5px);}#bber .bber-content-img img {    object-fit: cover;    max-height: 100%;    border-radius: 12px;}[data-theme='dark'] img {    filter: brightness(0.8);}#bber .bber-container-img .bber-content-noimg{    width: calc(100% / 4 - 5px);}#bber .bber-video{    width: calc(100% / 3);    height: 183px;    border-radius: 12px;    overflow: hidden;}#bber .bber-music{    width: 100%;    height: 90px;    margin: .5rem 0;    border-radius: 8px;    overflow: hidden;    border: var(--style-border-always);    background: var(--liusiqi-secondbg);}#bber .bber-music .aplayer {    margin: 0;}#bber .bber-bottom {    display: flex;    justify-content: space-between;    width: 100%;    margin-top: 8px;}#bber a {    color: var(--King-fontcolor);}#bber a:hover {    color: var(--King-hovertext);}a {    text-decoration: none;    transition: all 0.2s ease 0s;    overflow-wrap: break-word;}#bber-tips {    text-align: center;}#bber .bber-info {    display: flex;    align-items: center;}.bber-info-time {    color: var(--King-fontcolor);    font-size: 0.7rem;    background-color: var(--King-gray-op);    padding: 0 8px;    border-radius: 20px;    cursor: default;}#bber .bber-info-time .fa-clock {    margin-right: 6px;}#bber .bber-content-link {    display: flex;    margin-left: 0.5rem;    font-size: 0.7rem;    align-items: center;    background-color: rgba(245, 108, 108, 0.13);    color: #f56c6c;    padding: 0 8px;    border-radius: 20px;}#bber .bber-content-link:hover {    background-color: var(--King-main);    color: var(--King-white);}#post-comment .comment-tips.show {    display: block;}#post-comment .comment-tips {    background-color: rgba(103, 194, 58, 0.13);    border: var(--style-border-always);    border-color: var(--King-green);    color: var(--King-green);    border-radius: 8px;    padding: 8px 12px;    margin-top: 0.5rem;    display: none;}/* 即刻文章banner图 */.author-content.author-content-item.essayPage {    height: 19rem;    background: url(https://img.wwery.com/Sugar/hJaCWRu7.jpg) left / cover no-repeat;    color: var(--liusiqi-white);    overflow: hidden;    margin-top: 0;    animation: gradient 15s ease infinite;}.author-content {    position: relative;    width: 100%;    border-radius: 24px;    background: var(--liusiqi-card-bg);    border: var(--style-border-always);    box-shadow: var(--liusiqi-shadow-border);    padding: 1rem 2rem;}.author-content-item .card-content {    position: absolute;    width: 100%;    height: 100%;    top: 0;    left: 0;    z-index: 2;    display: flex;    flex-direction: column;    padding: 1rem 2rem;}.author-content-item .author-content-item-tips {    opacity: 0.8;    margin-bottom: 0.5rem;}.author-content-item .card-content .author-content-item-title {    margin-bottom: 0.5rem;}.author-content-item .author-content-item-title {    font-size: 36px;    font-weight: 700;    line-height: 1;}.author-content-item .content-bottom {    margin-top: auto;}.author-content-item .card-content .banner-button-group {    position: absolute;    bottom: 1.5rem;    right: 2rem;}.author-content-item .card-content .banner-button-group .banner-button {    height: 40px;    width: 124px;    border-radius: 20px;    background: var(--liusiqi-card-bg);    color: var(--font-color);    display: flex;    justify-content: center;    align-items: center;    z-index: 1;    transition: 0.3s;    cursor: pointer;}.author-content-item .card-content .banner-button-group .banner-button:hover{    background: var(--liusiqi-main) !important;    color: var(--liusiqi-white) !important;    box-shadow: var(--liusiqi-shadow-main);}.author-content-item .card-content .banner-button-group .banner-button i {    font-size: 1.5rem;    margin-right: 8px;}#categoryBar ul.categoryBar-list {    margin: 5px !important;}/* 主页哔哔bb */#home_top {    max-width: 1450px;    margin: auto;    margin-top: 0.5rem;    padding: 0 15px;    width: 100%;    transition: all 0.5s;}[data-theme='dark'] #bbTimeList {    background: #121212;}#bbTimeList {    width: 100%;    background: var(--King-white);    font-family: 'ZhuZiAYuanJWD';    color: var(--liusiqi-fontcolor);    padding: 0.5rem 1rem;    border-radius: 20px;    box-shadow: var(--King-shadow-lightblack);    display: flex;    align-items: center;    transition: all 0.3s ease 0s;    margin-top: 1rem;    border: var(--style-border);    height: 50px;    cursor: pointer;}#bbTimeList:hover {    border: var(--style-border-hover);    box-shadow: var(--card-hover-box-shadow);}#bber-talk {    width: 100%;    height: 25px;    line-height: 25px;}#bber-talk .li-style {    width: 100%;    height: 25px;    text-align: center;    -webkit-line-clamp: 1;    -webkit-box-orient: vertical;    overflow: hidden;    text-overflow: ellipsis;    transition: 0.3s;}#bber-talk ul,li {    list-style: none;    display: block;    margin: 0;    padding: 0;}#bbtalk {    display: flex;    flex-direction: column;    overflow: hidden;}.card-widget.card-clock{    font-size: 15px;}/* home banner样式 */#recent-top-post-group.recent-top-post-group {    width: 100%;    height: auto;    margin-bottom: 1rem;}.recent-post-top {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    width: 100%;}#random-banner canvas{    width: 100%;}.categoryGroup{    display: flex;    flex-direction: row;    justify-content: space-between;    align-items: center;    min-width: 200px;    height: 24%;    width: 100%;}.categoryGroup .categoryItem {    width: calc(100% / 3 - 0.33rem);    height: 100%;    margin-right: 0.5rem;    overflow: hidden;    transform: scale(1);    transition: all 0.8s cubic-bezier(0.65, 0.15, 0.37, 1.19);    border-radius: 12px;}.categoryGroup .categoryItem:hover{    width: 50%;}.categoryGroup .categoryItem:hover i{    opacity: 0.8;    transition: 0.8s;    transition-delay: 0.15s;    transform: scale(1.03);    font-size: 2.5rem;    filter: blur(0);}a.categoryButton{    height: 100%;    width: 100%;    border-radius: 12px;    display: inline-block;    text-align: left;    line-height: 4em;    font-weight: 700;    font-size: 0.9rem;    color: var(--liusiqi-white);    transition: all 0.8s cubic-bezier(0.39, 0.575, 0.565, 1);    transform: scale(1);    overflow: hidden;    font-family: PingFang SC,    Hiragino Sans GB,    Microsoft YaHei;}a.categoryButton:after{    content: '';    position: absolute;    top: 40px;    width: 1rem;    left: 21px;    height: 2px;    background: var(--liusiqi-white);    border-radius: 1px;}a.categoryButton span{    padding-left: 21px;}a.categoryButton i{    font-size: 5rem;    opacity: 0.2;    position: absolute;    right: 0;    top: 20%;    transition: 0.3s;    width: 100px;    text-align: center;    filter: blur(2px);}a.categoryButton.blue{    background: linear-gradient(to right, #358bff, #15c6ff);    background-size: 200%;}a.categoryButton.red{    background: linear-gradient(to right, #f65, #ffbf37);    background-size: 200%;}a.categoryButton.green{    background: linear-gradient(to right, #18e7ae, #1eebeb);    background-size: 200%;}#swiper_container_blog{    width: 57%;    -webkit-transition: all .3s;    -moz-transition: all .3s;    -o-transition: all .3s;    -ms-transition: all .3s;    transition: all .3s;    border-radius: 12px;}div#swiper_container:hover{    border: var(--style-border-hover);    box-shadow: var(--liusiqi-shadow-main);}#top-group {    display: flex;    flex-direction: row;    flex-wrap: wrap;    justify-content: space-between;    margin-top: 10px;    height: 128px;    align-content: space-between;    width: 100%;}#top-group .top-group-list-item{    display: flex;    width: calc(100% / 4 - 5px);    flex-direction: column;    align-items: flex-start;    background: var(--liusiqi-card-bg);    border-radius: 12px;    overflow: hidden;    height: 128px;    max-height: 128px;    border: var(--style-border-always);    transition: .3s;    box-shadow: var(--liusiqi-shadow-border);}#top-group .top-group-list-item:hover{    border: var(--style-border-hover);    box-shadow: var(--liusiqi-shadow-main);    transform: scale(1.03);}.top-group-list-item:hover span.top-group__text{    left: 0;}#top-group .top-group-list-item:hover .article__title{    color: var(--liusiqi-theme);}#top-group .top-group-list-item .post_cover{    width: 100%;}#top-group .top-group-list-item .post_cover a{    height: 80px;    overflow: hidden;    display: flex;}span.top-group__text{    position: absolute;    top: 0;    left: -40px;    display: flex;    z-index: 1;    background: var(--liusiqi-theme);    color: var(--liusiqi-white);    padding: 2px 8px;    font-size: .6rem;    border-radius: 12px 0 12px 0;    transition: .3s;    cursor: pointer;}#top-group .post_cover img{    object-fit: cover;    width: 100%;    border-radius: 12px 12px 0 0;}#top-group .top-group-list-item .top-group-info{    width: 100%;    text-align: center;}#top-group .top-group-list-item .top-group-info .article__title{    font-size: .8rem !important;    color: var(--liusiqi-fontcolor);}/* 最新文章图标 */.newPost {    position: absolute;    top: 15px;    right: 0;    color: rgba(255, 255, 255, 0.92);    padding: 0 12px 0 15px;    background-color: #49b0f5b9;    border-radius: 20px 0px 0px 20px;}/* Snackbar 弹窗 css */.snackbar-container {    color: #fff !important;    border-radius: 0 !important;    display: flex;    justify-content: center;    max-width: none !important;    min-width: 100% !important;    margin: 0 !important;    left: 0 !important;    height: 60px !important;    transform: none !important;}.snackbar-container p {    width: 100%;    font-weight: 600 !important;    text-align: center !important;    font-size: 1rem !important;}.snackbar-container::after {    position: absolute;    width: 0;    height: 100%;    left: 0;    top: 0;    background: #fff;    opacity: 0.1;    content: '';    animation: snackbar-progress 2s linear forwards;    pointer-events: none;}@keyframes snackbar-progress {    from {        width: 0;    }    to {        width: 100%;    }}iframe.iframe{    width: -webkit-fill-available;    height: 1061px;    overflow: hidden;}/* 屏幕宽度小于1450px */@media screen and (max-width: 1450px) {    div#bannerGroup {        display: none;    }    div#top-group{        display: none;    }    .layout>div:first-child{        width: 74%;    }    .layout{        padding: 0 15px;    }    #bber .bber-video{        height: 283px;    }}/* 媒体查询 *//* 屏幕宽度小于1300 */@media screen and (max-width: 1300px) {    #bber .timeline ul li.bber-item {        width: 100%;        margin-right: 0;    }    }/* 屏幕宽度小于768 */@media screen and (max-width: 768px) {    #bber .timeline ul li.bber-item {        padding: 16px 20px;    }    /* 即刻文章banner图 */    .author-content-item .card-content .banner-button-group .banner-button {        background: 0 0;        padding: 0;    }    [data-theme='dark'] .author-content-item .card-content .banner-button-group .banner-button {        color: var(--liusiqi-black);    }    .author-content-item .card-content .banner-button-group {        right: 1rem;        bottom: 1rem;    }    .author-content-item .card-content .banner-button-group .banner-button i {        margin-right: 0;        background: #fff;        border-radius: 50%;        padding: 6px;        margin-left: 80px;    }    .author-content-item .card-content .banner-button-group .banner-button-text {        display: none;    }    #rightMenu #switch_comment,    #rightside-config-show #switch_commentBarrage,    #rightside-config-show #chat_btn {        display: none;    }    #home_top {        padding: 0px 5px;    }    #bber .bber-video {        width: 100%;        height: fit-content;    }    .newPost {        padding: 0 10px 0 15px;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[!function(c){var l,h,a,t,i,v='<svg><symbol id="icon-dragon_chen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-498.122105 265.620211L431.157895 754.526316V485.052632h-66.074948c-14.470737 110.645895-44.355368 197.066105-102.696421 260.742736l-39.747368-36.432842C306.526316 617.876211 323.368421 462.901895 323.368421 242.526316V215.578947h377.263158v53.894737H377.182316c-0.404211 58.260211-2.209684 112.128-6.359579 161.684211H700.631579v53.894737h-122.152421a481.172211 481.172211 0 0 0 76.826947 119.70021l66.479158-39.855158 27.728842 46.214737-54.460631 32.687158c29.507368 24.953263 63.757474 45.675789 102.80421 58.098526l-16.303158 51.361684c-134.224842-42.711579-222.773895-167.073684-261.551158-268.207157H485.052632v221.857684l68.985263-41.391158 27.728842 46.214737-109.783579 65.886316zM646.736842 377.263158h-215.578947v-53.894737h215.578947v53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-dog_xu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-375.592421 150.393263c33.684211 44.544 75.210105 74.698105 124.739369 90.812632l11.425684 3.718737 10.401684-6.009264C781.204211 727.740632 808.421053 622.565053 808.421053 592.842105h-53.894737c0 22.069895-19.132632 80.869053-33.711158 103.504842-34.816-14.605474-64.538947-39.262316-89.249684-74.13221 48.316632-55.269053 92.079158-117.328842 120.535579-179.900632l-49.044211-22.285473c-23.767579 52.250947-59.742316 104.717474-100.055579 152.656842-24.010105-50.930526-41.148632-115.927579-51.658105-195.395369H700.631579v-53.894737h-155.189895A1848.050526 1848.050526 0 0 1 538.947368 161.684211h-53.894736c0 58.206316 2.155789 112.074105 6.494315 161.68421H323.368421v26.947368c0 216.549053-13.177263 263.545263-100.702316 359.046737l39.747369 36.432842c63.326316-69.093053 92.806737-118.272 105.714526-206.848H485.052632v-53.894736h-111.319579a1742.147368 1742.147368 0 0 0 3.449263-107.789474h120.158316c12.611368 98.250105 35.031579 177.475368 67.395368 238.187789-61.978947 65.536-128.053895 117.975579-173.298526 142.282106l25.519158 47.481263c47.589053-25.573053 114.095158-77.446737 177.55621-142.821053z m125.170526-411.971368l-80.842105-80.842106-38.103579 38.103579 80.842105 80.842106 38.103579-38.103579z" fill="#231F20" ></path></symbol><symbol id="icon-dog" viewBox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE" ></path><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20" ></path></symbol><symbol id="icon-goat" viewBox="0 0 1024 1024"><path d="M548.378947 646.736842a952.32 952.32 0 0 1 140.90779-161.68421H107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L66.721684 754.526316h417.172211c20.345263-41.472 43.654737-77.446737 64.485052-107.789474z" fill="#F7C768" ></path><path d="M608.256 144.734316C555.762526 115.577263 506.098526 107.789474 485.052632 107.789474V53.894737c32.579368 0 91.270737 11.452632 149.369263 43.735579 75.290947 41.822316 130.694737 94.531368 171.385263 150.878316C755.873684 288.013474 697.101474 323.368421 646.736842 323.368421h-107.789474v-53.894737h107.789474c20.506947 0 48.424421-11.210105 80.437895-31.285895a471.04 471.04 0 0 0-118.918737-93.453473zM832.673684 342.231579c-16.384 0-29.642105 10.24-29.642105 44.463158 0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642105-44.463158c0-34.223158-13.231158-44.463158-29.642105-44.463158zM1024 619.789474C1024 347.109053 901.066105 122.448842 686.753684 3.395368l-26.165895 47.104C914.324211 191.461053 964.688842 440.400842 969.647158 592.842105h-84.506947c-17.92-35.624421-45.352421-69.12-87.013053-101.995789l-16.788211-13.285053-16.734315 13.392842c-66.128842 52.897684-134.629053 127.083789-187.311158 209.677474H102.965895l-8.272842-20.318316C159.043368 617.013895 161.684211 603.109053 161.684211 485.052632v-53.894737h485.052631v-53.894737H161.684211c0-80.384 14.309053-110.026105 66.586947-137.916632l-25.384421-47.535158C123.365053 234.226526 107.789474 291.920842 107.789474 377.263158v107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L110.618947 862.315789h58.206316l-43.897263-107.789473h103.477895l43.897263 107.789473h58.206316l-43.897263-107.789473h259.47621C508.981895 824.939789 485.052632 899.152842 485.052632 970.105263h53.894736c0-68.688842 27.270737-144.060632 68.958316-215.578947H687.157895c7.410526 0 13.473684 6.063158 13.473684 13.473684V862.315789h53.894737v-94.315789c0-37.160421-30.208-67.368421-67.368421-67.368421h-44.65179c40.771368-58.017684 89.438316-111.427368 138.913684-153.626947C841.512421 600.037053 862.315789 655.225263 862.315789 754.526316h53.894737c0-38.912-2.748632-74.482526-11.102315-107.789474H1024v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-goat_wei" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 50.202947c52.304842 70.925474 136.973474 152.144842 232.528843 190.383158l19.994947-50.041263c-109.271579-43.708632-202.805895-152.629895-238.780632-217.49221H808.421053v-53.894737H538.947368v-53.894737h215.578948v-53.894737h-215.578948V161.684211h-53.894736v161.68421h-215.578948v53.894737h215.578948v53.894737H215.578947v53.894737h255.757474c-35.974737 64.862316-129.536 173.783579-238.807579 217.49221l20.021895 50.041263c95.528421-38.238316 180.197053-119.484632 232.501895-190.383158V808.421053h53.894736v-246.218106z" fill="#231F20" ></path></symbol><symbol id="icon-dragon" viewBox="0 0 1024 1024"><path d="M366.376421 344.441263l152.980211-152.98021c43.142737-43.142737 141.204211-9.216 270.201263 115.738947-15.225263 9.835789-25.114947 15.818105-44.13979 32.256s-38.076632 35.489684-59.418947 56.832c-4.203789 4.203789-51.173053 53.221053-78.740211 82.027789-10.805895-12.126316-22.743579-24.171789-34.654315-36.082526L493.136842 362.792421l-54.218105 54.218105-72.542316-72.569263zM862.315789 512c0 46.834526-45.352421 80.842105-107.789473 80.842105-108.948211 0-189.359158-28.806737-267.129263-56.697263C414.100211 509.871158 344.872421 485.052632 258.182737 485.052632 80.788211 485.052632 0 588.126316 0 683.897263h53.894737C73.216 659.779368 135.302737 646.736842 177.340632 646.736842c77.338947 0 223.124211 23.282526 291.893894 47.912421C547.462737 722.701474 615.989895 754.526316 734.315789 754.526316 862.315789 754.526316 916.210526 670.315789 916.210526 512h-53.894737z" fill="#FF8787" ></path><path d="M552.421053 1024c-69.766737 0-113.825684-13.958737-156.402527-27.459368-54.487579-17.273263-110.807579-35.004632-232.421052-26.516211l-3.826527-53.733053c131.718737-9.458526 195.934316 10.967579 252.52379 28.887579 42.226526 13.365895 78.686316 24.926316 140.126316 24.926316 92.752842 0 148.210526-57.936842 148.210526-113.960421 0-16.949895-5.524211-101.618526-114.634105-101.618526-64.970105 0-112.747789 23.336421-163.328 48.02021C365.325474 830.571789 300.301474 862.315789 204.288 862.315789 85.908211 862.315789 0 787.294316 0 683.897263 0 588.126316 80.788211 485.052632 258.182737 485.052632c86.689684 0 155.917474 24.818526 229.214316 51.09221 45.810526 16.410947 92.564211 33.172211 145.488842 44.166737 9.000421-7.033263 13.850947-16.276211 13.850947-26.758737 0-37.187368-37.672421-74.859789-74.13221-111.265684l-3.287579-3.287579 38.103579-38.103579 3.260631 3.287579C652.853895 446.275368 700.631579 494.026105 700.631579 553.552842c0 12.719158-2.802526 24.926316-7.976421 36.109474A594.997895 594.997895 0 0 0 754.526316 592.842105c62.437053 0 107.789474-34.007579 107.789473-80.842105 0-58.853053-52.870737-110.268632-108.840421-164.702316l-8.057263-7.841684c-19.024842 16.437895-38.076632 35.489684-59.418947 56.832l-38.103579-38.103579c74.805895-74.832842 134.898526-134.898526 268.314947-141.931789V55.619368c-63.407158 7.787789-120.993684 39.424-121.667368 39.801264l-15.818105 8.811789-14.120421-11.344842C731.701895 66.452211 709.712842 53.894737 673.684211 53.894737c-41.418105 0-74.347789 25.869474-109.190737 53.301895-26.624 20.911158-54.137263 42.549895-86.851369 53.194105L469.342316 161.684211h-69.093053l-105.525895 105.525894-38.103579-38.130526L324.015158 161.684211H161.684211V107.789474h303.104c22.231579-8.272842 43.708632-25.168842 66.398315-42.981053C569.829053 34.438737 613.618526 0 673.684211 0c48.909474 0 81.408 17.946947 110.888421 40.097684C813.702737 26.300632 877.729684 0 943.157895 0h26.947368v323.368421h-53.894737v-53.167158c-54.164211 3.098947-92.914526 15.845053-127.002947 36.675369l1.832421 1.778526C852.587789 368.505263 916.210526 430.376421 916.210526 512c0 60.928-43.708632 109.945263-107.789473 127.622737V700.631579h53.894736v-53.894737h53.894737v53.894737h53.894737v53.894737h-53.894737v53.894737h-53.894737v-53.894737h-53.894736c-29.722947 0-53.894737-24.171789-53.894737-53.894737v-53.894737c-118.325895 0-207.063579-31.797895-285.318737-59.877053C400.437895 562.229895 335.494737 538.947368 258.182737 538.947368 117.059368 538.947368 53.894737 611.732211 53.894737 683.897263 53.894737 757.221053 115.738947 808.421053 204.288 808.421053c11.910737 0 23.228632-0.538947 34.034526-1.536C248.454737 796.321684 269.473684 770.640842 269.473684 739.166316c0-33.118316-43.088842-70.979368-58.152421-81.596632l30.935579-44.139789c8.299789 5.793684 81.111579 58.664421 81.111579 125.736421 0 19.429053-4.527158 37.052632-10.994526 52.304842 30.773895-10.051368 58.314105-23.498105 86.662737-37.349053C452.877474 727.848421 508.577684 700.631579 585.997474 700.631579 702.410105 700.631579 754.526316 778.725053 754.526316 856.144842 754.526316 938.657684 678.912 1024 552.421053 1024z m-21.180632-623.104L493.136842 362.792421l137.889684-137.889684 38.103579 38.103579-137.889684 137.889684z m-126.760421-18.351158l-38.103579-38.103579 152.980211-152.98021 38.103579 38.103579-152.980211 152.98021z m282.004211-218.624c15.494737-9.754947 43.331368-31.447579 43.331368-31.447579-25.734737-27.809684-49.556211-33.333895-67.368421-29.07621-19.240421 4.608-37.753263 24.602947-37.753263 24.602947s42.253474 22.447158 61.790316 35.920842z" fill="#231F20" ></path></symbol><symbol id="icon-horse" viewBox="0 0 1024 1024"><path d="M776.003368 646.736842c16.599579-99.947789 43.439158-181.086316 83.213474-256.538947l6.817684-12.934737H269.473684c-36.756211 0-53.894737 54.945684-53.894737 92.05221 0 46.753684 6.656 77.527579 70.278737 176.074106l84.533895 128.269473L498.876632 646.736842h277.126736z" fill="#FFAF6E" ></path><path d="M1024 0v404.210526c0 33.333895 0 134.736842-92.079158 134.736842h-13.824l-78.362947-109.056c-22.743579 49.906526-40.340211 103.046737-53.490527 162.950737h115.092211C937.310316 592.842105 970.105263 625.637053 970.105263 661.638737c0 60.631579-69.389474 154.300632-77.312 164.75621l-43.008-32.471579C875.466105 759.861895 916.210526 693.813895 916.210526 661.638737c0-5.982316-8.919579-14.901895-14.901894-14.901895h-125.332211C761.128421 736.121263 754.526316 840.569263 754.526316 970.105263h-53.894737c0-283.971368 31.097263-453.605053 110.888421-605.049263l20.318316-38.534737 112.801684 156.995369c14.443789-4.419368 25.465263-20.938105 25.465263-79.306106V0h53.894737z m-161.684211 161.684211h53.894737V0h-53.894737v80.842105c-17.381053-14.955789-38.184421-26.947368-80.842105-26.947368h-134.736842v53.894737h134.736842c37.672421 0 80.842105 40.906105 80.842105 53.894737z m-107.789473 0h-215.578948v53.894736h161.684211l53.894737-53.894736zM300.894316 766.544842L400.680421 916.210526h64.754526l-95.043368-142.551579L498.876632 646.736842h167.855157a1212.631579 1212.631579 0 0 1 9.431579-53.894737h-199.383579l-175.885473 173.702737z m109.97221-184.400842l-37.861052-38.319158-132.419369 130.802526C173.729684 571.095579 161.684211 529.812211 161.684211 469.315368 161.684211 398.578526 199.464421 323.368421 269.473684 323.368421h323.368421l53.894737-53.894737H269.473684c-6.709895 0-13.258105 0.565895-19.698526 1.482105C234.927158 249.451789 204.638316 215.578947 160.633263 215.578947 65.967158 215.578947 0 349.291789 0 469.315368c0 70.170947 16.141474 136.650105 49.232842 202.671158L6.197895 723.833263l41.472 34.41179 66.128842-79.737264-8.704-16.033684C83.105684 622.133895 53.894737 558.214737 53.894737 469.315368 53.894737 368.451368 106.765474 269.473684 160.633263 269.473684c13.231158 0 25.815579 9.889684 35.43579 20.533895C142.874947 321.967158 107.789474 388.500211 107.789474 469.315368c0 78.201263 19.698526 130.937263 93.642105 243.981474l-55.296 54.622316L280.899368 970.105263h64.754527l-130.048-195.072 195.260631-192.889263z" fill="#231F20" ></path></symbol><symbol id="icon-monkey_shen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 134.736842h161.684211v53.894737h53.894737V269.473684h-215.578948V161.684211h-53.894736v107.789473h-215.578948v431.157895h53.894737v-53.894737h161.684211v215.578947h53.894736v-215.578947z m0-161.68421h161.684211v107.789473h-161.684211v-107.789473z m-215.578947 0h161.684211v107.789473h-161.684211v-107.789473z m215.578947-161.684211h161.684211v107.789474h-161.684211v-107.789474z m-215.578947 0h161.684211v107.789474h-161.684211v-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-ox_chou" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-161.68421 188.631579h-159.555369c13.985684-172.813474 43.115789-357.429895 70.817684-385.158737L700.631579 269.473684H323.368421v53.894737h107.169684c-1.940211 45.756632-8.192 103.962947-15.76421 161.684211H323.368421v53.894736h83.968c-9.862737 68.446316-20.264421 130.128842-25.734737 161.684211H215.578947v53.894737h592.842106v-53.894737z m-346.543158-161.684211h149.800421a3313.717895 3313.717895 0 0 0-16.842105 161.684211h-158.477474c6.036211-35.247158 16.114526-95.636211 25.519158-161.684211z m22.608842-215.578947h171.735579c-15.198316 41.121684-27.405474 100.594526-36.890948 161.684211h-150.123789c7.383579-57.505684 13.419789-115.361684 15.279158-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-monkey" viewBox="0 0 1024 1024"><path d="M757.733053 485.052632H565.894737a80.842105 80.842105 0 0 0-80.842105 80.842105v215.578947c0 40.96 43.546947 99.678316 77.446736 139.210105C596.426105 960.215579 603.055158 970.105263 603.055158 970.105263H754.526316s15.144421-18.674526 45.891368-58.071579S862.315789 809.984 862.315789 717.608421c0-89.573053-47.993263-166.346105-104.582736-232.555789z" fill="#C3D686" ></path><path d="M538.947368 1024h-53.894736c0-32.794947 25.869474-87.417263 77.446736-103.316211C528.599579 881.152 485.052632 822.433684 485.052632 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h80.842105v53.894737h-80.842105a26.947368 26.947368 0 0 0-26.947369 26.947368c0 19.725474 36.675368 77.473684 92.133053 134.736842h88.602947c20.210526-14.147368 88.737684-71.464421 88.737685-198.602105 0-108.382316-93.237895-202.967579-168.151579-278.986105-49.502316-50.202947-88.576-89.842526-98.735158-128.61979-11.749053-44.732632-21.584842-112.586105-26.327579-148.318315H377.263158c-45.136842 0-89.519158 8.434526-121.802105 53.894736H431.157895v53.894737c-97.28 0-107.789474 113.071158-107.789474 161.684211v53.894737h53.894737v161.68421h-53.894737v-107.789474h-26.947368c-170.253474 0-188.631579-94.234947-188.631579-134.736842 0-31.043368 35.220211-72.326737 55.727158-93.722947 2.694737-14.686316 5.847579-28.348632 9.431579-41.013895H161.684211V215.578947h31.528421C239.642947 120.993684 317.224421 107.789474 377.263158 107.789474h185.640421l2.802526 23.794526c0.134737 1.050947 12.719158 106.657684 27.944421 164.756211 6.494316 24.872421 44.624842 63.514947 84.965053 104.448C760.481684 483.813053 862.315789 587.129263 862.315789 717.608421c0 92.375579-31.124211 155.028211-61.898105 194.425263C904.919579 892.146526 970.105263 803.004632 970.105263 673.684211c0-91.405474-42.819368-154.381474-84.237474-215.255579C847.791158 402.458947 808.421053 344.576 808.421053 269.473684c0-119.349895 87.093895-161.684211 161.68421-161.68421v53.894737c-32.417684 0-107.789474 10.509474-107.789474 107.789473 0 58.502737 31.555368 104.933053 68.096 158.639158C974.282105 492.597895 1024 565.679158 1024 673.684211c0 177.286737-108.301474 296.421053-269.473684 296.421052h-161.684211c-37.672421 0-53.894737 40.906105-53.894737 53.894737zM229.214316 269.473684a384.808421 384.808421 0 0 0-14.012632 58.341053l-1.401263 8.488421-6.090105 6.117053c-22.878316 22.932211-44.813474 52.601263-46.026105 62.275368 0 56.805053 53.76 75.264 107.789473 79.386947V431.157895c0-58.691368 13.473684-119.619368 46.511158-161.684211h-86.770526zM323.368421 1024h-53.894737c0-32.794947 25.869474-87.417263 77.446737-103.316211C313.020632 881.152 269.473684 822.433684 269.473684 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h45.16379A188.847158 188.847158 0 0 1 565.894737 592.842105h134.736842v53.894737h-134.736842c-74.293895 0-134.736842 60.442947-134.736842 134.736842v26.516211l-53.894737 0.377263V781.473684c0-9.162105 0.646737-18.135579 1.913263-26.947368H350.315789c-14.848 0-26.947368 12.072421-26.947368 26.947368 0 19.725474 36.675368 77.473684 92.133053 134.736842H431.157895v53.894737h-53.894737c-37.672421 0-53.894737 40.906105-53.894737 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-horse_wu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 26.947368h269.473685v-53.894736H538.947368v-161.684211h161.684211v-53.894737H411.001263c12.045474-33.28 20.156632-69.793684 20.156632-107.789473h-53.894737c0 121.963789-105.364211 233.391158-106.415158 234.496l38.858105 37.349052c2.883368-3.018105 43.816421-46.133895 77.392842-110.160842H485.052632v161.684211H215.578947v53.894736h269.473685v323.368421h53.894736V538.947368z" fill="#231F20" ></path></symbol><symbol id="icon-ox" viewBox="0 0 1025 1024"><path d="M540.294737 754.526316h215.578947c20.210526 0 35.112421 1.374316 53.894737 4.581052 91.863579 15.656421 145.354105 67.691789 161.684211 86.069895V916.210526h53.894736V635.580632l-7.895579-7.895579c-9.269895-9.269895-36.513684-49.232842-44.032-196.527158H540.294737a161.684211 161.684211 0 0 0-161.684211 161.68421v131.098948c43.304421 20.210526 97.28 30.585263 161.684211 30.585263z" fill="#FFAF6E" ></path><path d="M1025.347368 635.580632V916.210526h-53.894736v-71.033263c-16.330105-18.405053-69.820632-70.413474-161.684211-86.069895V916.210526h-53.894737v-161.68421h-107.789473v215.578947h-53.894737V700.631579h161.68421c100.998737 0 172.570947 38.669474 215.578948 71.868632v-115.738948c-33.684211-43.627789-51.712-137.458526-53.706106-279.498105H701.978947c-76.934737 0-127.218526-26.219789-175.804631-51.550316a1556.048842 1556.048842 0 0 0-26.839579-13.743158c-26.839579 26.004211-66.209684 44.921263-115.738948 55.511579 24.441263 22.986105 60.874105 52.116211 106.469053 72.838737l-22.312421 49.044211c-76.584421-34.816-129.589895-88.926316-150.824421-113.125053-10.644211 0.619789-21.477053 1.024-32.687158 1.024a473.734737 473.734737 0 0 1-123.365053-15.952842l-93.022315 186.314105 68.581052 53.86779C167.882105 579.557053 237.891368 538.947368 324.715789 538.947368v53.894737c-95.986526 0-170.361263 62.490947-171.088842 63.137684l-16.78821 14.282106-136.838737-107.358316 109.729684-219.809684C46.430316 314.448842 1.347368 267.371789 1.347368 199.868632 1.347368 89.815579 121.586526 53.894737 163.031579 53.894737v53.894737c-14.120421 0-107.789474 17.165474-107.789474 92.079158C55.242105 290.465684 192.188632 323.368421 284.240842 323.368421c67.907368 0 122.421895-12.988632 157.696-35.624421-42.711579-14.336-95.097263-23.120842-169.337263-18.324211l-3.503158-53.786947c95.878737-6.117053 160.148211 8.515368 211.429053 28.833684C484.244211 235.439158 486.4 225.818947 486.4 215.578947c0-48.855579-57.829053-76.288-58.394947-76.557473l22.393263-49.017263C454.063158 91.648 540.294737 131.826526 540.294737 215.578947c0 18.566737-3.422316 35.84-9.997474 51.631158 7.060211 3.584 13.985684 7.168 20.776421 10.698106C597.854316 302.322526 638.248421 323.368421 701.978947 323.368421h269.473685v26.947368c0 214.689684 35.220211 266.590316 45.999157 277.369264l7.895579 7.895579z m-729.384421 25.141894l-98.789052 118.541474 86.797473 137.835789 45.594948-28.725894-65.913263-104.690527 37.052631-44.43621C358.642526 785.192421 439.080421 808.421053 540.294737 808.421053v-53.894737c-99.893895 0-175.077053-24.549053-223.474526-72.946527l-20.857264-20.857263z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit_mao" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-377.263158-188.631579h107.789474v323.368421c-20.48 0-39.936-11.264-40.016842-11.317895l-27.728842 46.214737c3.206737 1.940211 32.660211 18.997895 67.745684 18.997895 30.746947 0 53.894737-23.147789 53.894737-53.894737V269.473684h-215.578948v538.947369h53.894737V323.368421z m-107.789473 242.526316v-242.526316h-53.894737v196.904421l-107.789474 40.421053v-243.927579l169.094737-48.316632-14.821053-51.819789L269.473684 276.102737v304.801684l-36.405895 13.662316 18.917053 50.472421 178.741895-67.018105c-5.039158 69.928421-55.269053 106.981053-165.133474 122.933894l7.733895 53.328842C325.712842 746.657684 485.052632 723.536842 485.052632 565.894737z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit" viewBox="0 0 1024 1024"><path d="M680.96 488.744421a1666.667789 1666.667789 0 0 0-54.433684-23.95621c-16.006737 12.234105-33.899789 20.264421-60.631579 20.264421h-80.842105c-36.810105 0-83.644632 30.396632-104.394106 67.772631-42.819368 77.123368-53.409684 117.813895-11.021473 201.701053C397.096421 808.879158 431.157895 876.409263 431.157895 970.105263h338.539789l68.338527-138.859789c20.129684-40.96 24.252632-73.701053 24.252631-110.349474 0.026947-57.397895-25.061053-159.717053-181.328842-232.151579z" fill="#FFBDD8" ></path><path d="M862.315789 720.896c0 36.621474-4.122947 69.389474-24.252631 110.349474L769.697684 970.105263H485.052632v-53.894737h48.370526C507.877053 880.074105 485.052632 833.509053 485.052632 781.473684c0-59.418947 24.171789-113.313684 63.218526-152.360421l38.103579 38.103579A161.091368 161.091368 0 0 0 538.947368 781.473684c0 54.784 35.381895 104.043789 63.514948 134.736842h133.712842l53.490526-108.759579c15.710316-31.851789 18.755368-55.834947 18.755369-86.554947 0-80.976842-63.434105-150.096842-178.607158-195.503158-17.542737 8.138105-38.292211 13.554526-63.919158 13.554526h-80.842105c-13.958737 0-43.924211 15.979789-57.290106 40.016843l-47.104-26.165895C401.408 515.449263 448.242526 485.052632 485.052632 485.052632h80.842105c37.268211 0 57.478737-15.440842 79.090526-36.45979C625.367579 336.195368 549.753263 269.473684 485.052632 269.473684h-107.789474a21.288421 21.288421 0 0 0-5.955369 2.021053A683.762526 683.762526 0 0 0 302.187789 194.021053c-35.84-34.223158-61.763368-58.933895-94.908631-79.440842A42.442105 42.442105 0 0 0 185.478737 107.789474a22.824421 22.824421 0 0 0-17.381053 7.194947c-10.913684 11.425684-6.063158 28.240842 1.428211 39.181474 21.989053 32.121263 47.912421 56.858947 83.752421 91.109052 20.614737 19.671579 49.259789 43.169684 77.392842 63.08379C281.007158 367.400421 215.578947 484.432842 215.578947 592.842105c0 74.482526 24.791579 124.065684 51.065264 176.586106C294.534737 825.209263 323.368421 882.903579 323.368421 970.105263h-53.894737c0-74.482526-24.791579-124.065684-51.065263-176.586105C190.517895 737.738105 161.684211 680.043789 161.684211 592.842105c0-90.866526 42.226526-197.685895 93.453473-274.485894a803.759158 803.759158 0 0 1-39.046737-34.115369C177.852632 247.754105 150.231579 221.399579 125.035789 184.616421c-24.441263-35.759158-22.797474-78.686316 4.069053-106.819368 26.300632-27.567158 70.898526-31.043368 106.522947-9.000421 37.941895 23.444211 65.562947 49.798737 103.774316 86.258526 9.970526 9.512421 33.037474 32.309895 56.93979 60.550737h68.634947c-27.621053-37.780211-60.416-72.730947-88.522105-99.543579-28.833684-27.540211-54.730105-52.116211-84.533895-74.024421L326.305684 0.296421c31.232 23.228632 57.802105 48.532211 87.309474 76.719158 53.840842 51.388632 94.450526 100.594526 121.74821 146.83621 82.836211 26.650947 150.042947 116.870737 165.025685 230.750316l1.724631 13.177263-9.404631 9.404632c-3.772632 3.772632-7.706947 7.653053-11.802948 11.587368C837.227789 561.178947 862.315789 663.498105 862.315789 720.896zM309.463579 754.526316c3.934316 8.057263 7.895579 16.087579 11.991579 24.144842C348.887579 832.970105 377.263158 889.128421 377.263158 970.105263h53.894737c0-93.696-34.061474-161.226105-61.520842-215.578947h-60.173474z m597.90821 53.894737c-3.422316 9.404632-7.814737 19.806316-13.770105 31.959579L829.790316 970.105263h60.065684l52.143158-105.957052c10.778947-21.935158 17.515789-40.016842 21.90821-55.727158h-56.535579zM514.694737 390.736842c0-34.223158-13.231158-44.463158-29.642105-44.463158s-29.642105 10.24-29.642106 44.463158c0 34.250105 13.231158 44.463158 29.642106 44.463158s29.642105-10.213053 29.642105-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rat_zi" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 188.631579v-215.578947h269.473685v-53.894737H538.947368v-39.585684c26.543158-18.081684 94.585263-65.050947 177.852632-127.488L700.631579 215.578947H323.368421v53.894737h295.316211a4221.008842 4221.008842 0 0 1-121.640421 85.369263l-11.991579 8.003369V431.157895H242.526316v53.894737h242.526316v215.578947c0 48.343579-13.850947 53.894737-134.736843 53.894737v53.894737c105.391158 0 188.631579 0 188.631579-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-rat" viewBox="0 0 1024 1024"><path d="M727.659789 431.157895c-132.581053 0-220.348632 47.454316-285.803789 154.354526-19.779368 32.309895-15.845053 76.503579-9.404632 96.579368 3.260632 10.159158 7.760842 18.647579 12.422737 25.546106C464.761263 737.010526 499.927579 754.526316 538.947368 754.526316h66.829474c1.158737 17.893053-1.967158 34.762105-15.144421 53.975579-12.692211 18.539789-37.807158 40.151579-56.32 54.810947 25.249684-0.673684 52.709053-0.997053 83.240421-0.997053C877.487158 862.315789 970.105263 711.922526 970.105263 571.176421 936.421053 512 882.364632 431.157895 727.659789 431.157895z" fill="#85C3DE" ></path><path d="M210.432 1012.897684l-43.573895-31.690105c106.954105-147.051789 185.317053-171.196632 423.828211-172.705684 21.396211-31.258947 16.249263-56.266105 9.377684-89.70779-3.557053-17.138526-7.221895-34.842947-7.221895-54.433684 0-68.958316 25.330526-104.636632 63.407158-136.973474l34.896842 41.040842c-29.453474 25.061053-44.409263 46.780632-44.409263 95.932632 0 14.093474 2.937263 28.402526 6.063158 43.546947 5.901474 28.510316 12.8 62.032842-1.131789 99.462737 166.373053-10.24 264.542316-96.902737 264.542315-236.193684C916.210526 418.330947 827.580632 323.368421 684.921263 323.368421c-83.644632 0-153.303579 29.696-174.187789 39.612632a224.875789 224.875789 0 0 1-20.533895 31.339789l-41.741474-34.115368 20.884211 17.057684-20.911158-16.976842C448.781474 359.828211 485.052632 314.287158 485.052632 262.736842c0-34.816-8.946526-60.766316-26.570106-77.069474-17.515789-16.249263-44.786526-24.602947-81.219368-24.953263V323.368421h-53.894737V109.783579l24.872421-1.913263c64.700632-4.931368 114.095158 7.895579 146.863158 38.238316C524.207158 173.056 538.947368 212.291368 538.947368 262.736842c0 11.102316-1.131789 21.908211-3.072 32.202105 37.268211-12.584421 89.842526-25.465263 149.045895-25.465263C858.165895 269.473684 970.105263 387.907368 970.105263 571.176421 970.105263 711.922526 877.487158 862.315789 617.552842 862.315789c-258.667789 0-311.942737 19.698526-407.120842 150.581895z m19.105684-256.835368c-12.045474 0-24.387368-0.565895-37.025684-1.64379l-22.096842-1.859368-2.425263-22.016C167.747368 728.144842 161.684211 672.444632 161.684211 631.026526c0-103.585684 21.450105-178.903579 53.894736-259.045052V107.789474h53.894737v274.782315l-2.021052 4.904422C235.439158 465.758316 215.578947 533.800421 215.578947 631.026526c0 22.878316 2.101895 51.442526 3.826527 70.979369 99.678316 2.802526 172.813474-35.408842 222.450526-116.493474l48.020211 24.090947c-11.237053 28.133053-11.371789 51.577263-0.377264 67.853474 9.701053 14.282105 28.645053 23.174737 49.448421 23.174737v53.894737c-39.019789 0-74.186105-17.515789-94.073263-46.888421a100.244211 100.244211 0 0 1-12.422737-25.546106c-53.221053 49.178947-121.128421 73.943579-202.913684 73.970527zM379.957895 525.473684c0-34.223158-13.231158-44.463158-29.642106-44.463158s-29.642105 10.24-29.642105 44.463158c0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642106-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rooster_you" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-215.578947-188.631579h-161.684211v-26.947368h161.684211V242.526316H269.473684v53.894737h161.684211v26.947368h-161.684211v485.052632h53.894737v-53.894737h377.263158v53.894737h53.894737V323.368421zM323.368421 646.736842h377.263158v53.894737H323.368421v-53.894737z m0-269.473684h107.789474c0 103.316211-72.784842 107.654737-81.084632 107.789474L350.315789 538.947368c46.592 0 134.736842-33.792 134.736843-161.68421h53.894736v107.789474c0 29.722947 24.171789 53.894737 53.894737 53.894736h107.789474v53.894737H323.368421v-215.578947z m377.263158 0v107.789474h-107.789474v-107.789474h107.789474z m-215.578947-80.842105h53.894736v26.947368h-53.894736v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-rooster" viewBox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787" ></path><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20" ></path></symbol><symbol id="icon-snake_si" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-242.041263 180.762947l-52.116211-13.797052C657.219368 749.864421 651.425684 754.526316 619.789474 754.526316h-242.526316V485.052632h269.473684v53.894736h53.894737V215.578947H323.368421v538.947369c0 29.722947 24.171789 53.894737 53.894737 53.894737h242.526316c77.689263 0 91.189895-51.065263 108.274526-115.658106zM377.263158 269.473684h269.473684v161.684211H377.263158v-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-tiger_yin" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-257.42821 299.250526l-107.789474-53.894737-24.117895 48.208843 107.789474 53.894736 24.117895-48.208842z m-269.473685-5.658947l-24.117894-48.208842-107.789474 53.894737 24.117895 48.208842 107.789473-53.894737zM700.631579 431.157895h-161.684211v-53.894737h107.789474v-53.894737H377.263158v53.894737h107.789474v53.894737h-161.684211v323.368421h53.894737v-53.894737h269.473684v53.894737h53.894737V431.157895z m-161.684211 161.68421h107.789474v53.894737h-107.789474v-53.894737z m-161.68421 0h107.789474v53.894737h-107.789474v-53.894737z m161.68421-107.789473h107.789474v53.894736h-107.789474v-53.894736z m-161.68421 0h107.789474v53.894736h-107.789474v-53.894736zM754.526316 215.578947h-223.097263l-20.803369-62.410105-51.119158 17.057684L474.624 215.578947H269.473684v107.789474h53.894737v-53.894737h377.263158v53.894737h53.894737V215.578947z" fill="#231F20" ></path></symbol><symbol id="icon-snake" viewBox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686" ></path><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20" ></path></symbol><symbol id="icon-tiger" viewBox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768" ></path><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-boar" viewBox="0 0 1024 1024"><path d="M732.079158 377.263158c-107.789474 0-186.421895 31.393684-281.869474 126.841263L180.331789 773.982316C257.724632 807.909053 348.725895 808.421053 485.052632 808.421053h96.013473c55.834947-34.411789 133.551158-53.894737 227.354948-53.894737h121.344L970.105263 680.555789V572.631579c0-94.315789-130.236632-195.368421-238.026105-195.368421z" fill="#FFBDD8" ></path><path d="M808.421053 700.631579v53.894737c-196.446316 0-323.368421 84.641684-323.368421 215.578947h-53.894737c0-163.705263 148.075789-269.473684 377.263158-269.473684z m-323.368421 107.789474v-53.894737c-158.342737 0-245.598316 0-319.649685-49.367579L158.612211 700.631579H80.842105c-21.692632 0-26.624-14.821053-26.947368-26.947368v-82.620632c84.156632-11.183158 161.684211-74.913684 161.68421-186.853053V215.578947H161.684211v161.684211H134.736842c-66.964211 0-134.736842 37.025684-134.736842 107.789474h53.894737c0-42.630737 52.870737-53.894737 80.842105-53.894737h24.629895C147.132632 504.912842 85.153684 538.947368 26.947368 538.947368H0v134.736843c0 32.498526 21.530947 80.842105 80.842105 80.842105h61.682527c32.687158 20.506947 67.125895 33.145263 105.957052 41.013895A232.879158 232.879158 0 0 0 215.578947 916.210526h53.894737c0-41.930105 14.012632-80.303158 39.424-112.505263C358.885053 808.151579 415.959579 808.421053 485.052632 808.421053z m-72.946527-342.420211L323.368421 554.738526V431.157895h-53.894737v253.682526l180.736-180.736-38.103579-38.103579zM323.368421 161.684211h-53.894737v190.032842a769.536 769.536 0 0 1 53.894737-49.098106V161.684211z m323.368421-53.894737c-72.623158 0-146.809263 23.336421-215.578947 58.637473V107.789474h-53.894737v154.138947C458.832842 205.392842 555.331368 161.684211 646.736842 161.684211c148.587789 0 269.473684 120.885895 269.473684 269.473684v235.654737L809.579789 862.315789h61.359158L970.105263 680.555789V431.157895c0-178.310737-145.057684-323.368421-323.368421-323.368421z" fill="#231F20" ></path></symbol><symbol id="icon-boar_hai" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M309.975579 804.756211l-27.136-46.592c103.073684-60.011789 183.026526-132.473263 241.475368-219.24379H350.315789l-13.473684-50.283789c58.88-33.980632 99.435789-117.571368 118.703158-165.295158H242.526316v-53.894737h538.947368v53.894737h-268.18021c-12.395789 34.088421-42.469053 106.603789-90.435369 161.68421h134.009263a680.555789 680.555789 0 0 0 46.349474-107.708631l51.092211 17.057684c-58.421895 175.265684-171.034947 309.490526-344.333474 410.381474z m192.350316-2.937264L467.806316 760.454737c88.414316-73.728 154.516211-158.773895 202.105263-259.907369l48.801684 22.959158a797.372632 797.372632 0 0 1-82.351158 137.781895c32.741053 15.009684 83.456 44.867368 137.647158 101.591579l-38.938947 37.268211c-57.236211-59.877053-109.325474-85.557895-133.766737-95.178106a850.997895 850.997895 0 0 1-98.977684 96.848842z m48.613052-536.872421l-80.842105-53.894737 29.884632-44.840421 80.842105 53.894737-29.884632 44.840421zM512 53.894737C259.395368 53.894737 53.894737 259.395368 53.894737 512s205.500632 458.105263 458.105263 458.105263c9.081263 0 17.973895-0.835368 26.947368-1.374316v-53.894736c-8.946526 0.619789-17.866105 1.374316-26.947368 1.374315-222.881684 0-404.210526-181.328842-404.210526-404.210526S289.118316 107.789474 512 107.789474s404.210526 181.328842 404.210526 404.210526c0 195.206737-139.075368 358.507789-323.368421 396.045474v54.460631c214.096842-38.346105 377.263158-225.549474 377.263158-450.533052C970.105263 259.395368 764.604632 53.894737 512 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-bilibili1" viewBox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75H212.377a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#20B0E3" ></path><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#20B0E3" ></path></symbol><symbol id="icon-yinle" viewBox="0 0 1024 1024"><path d="M512.2976 0a531.2 531.2 0 0 0-512 548.48V960h128V548.48a398.72 398.72 0 0 1 384-411.52 398.72 398.72 0 0 1 384 411.52V960h128V548.48A531.2 531.2 0 0 0 512.2976 0z" fill="#5c8add" ></path><path d="M64.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path><path d="M704.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path></symbol><symbol id="icon-icon-test-copy" viewBox="0 0 1024 1024"><path d="M512 512m-229.517241 0a229.517241 229.517241 0 1 0 459.034482 0 229.517241 229.517241 0 1 0-459.034482 0Z" fill="#5c8add" ></path><path d="M512 1024A512 512 0 1 1 1024 512 512 512 0 0 1 512 1024z m0-141.241379A370.758621 370.758621 0 1 0 141.241379 512 370.758621 370.758621 0 0 0 512 882.758621z" fill="#5c8add" ></path></symbol><symbol id="icon-V" viewBox="0 0 1024 1024"><path d="M1012.47774251 492.58192592L544.94137566 87.22962963a49.96686561 49.96686561 0 0 0-65.88275132 0L11.63784127 492.6975097c-21.03624691 18.26223633-23.3479224 49.93219048-5.08568606 70.96843739 18.03106878 21.03624691 49.93219048 23.3479224 70.96843738 5.08568607L512 191.83294532l434.71057495 376.91868784c9.47786949 8.20644797 21.26741446 12.25188008 32.82579189 12.13629629 14.10122046 0 27.97127337-5.77918871 38.02706173-17.33756613 18.14665256-20.92066314 15.95056084-52.70620106-5.08568606-70.9684374z" fill="#5c8add" ></path><path d="M109.30613051 567.59579541V896.89396825c0 42.53482892 34.90629982 77.44112875 77.44112875 77.44112875h220.76500882V666.30433862c0-25.54401411 20.92066314-46.46467725 46.46467724-46.46467724h116.16169313c25.54401411 0 46.46467725 20.92066314 46.46467725 46.46467724V974.335097h220.76500882c42.53482892 0 77.44112875-34.90629982 77.44112874-77.44112875l0.11558377-329.29817284L512 218.18604586 109.30613051 567.59579541zM848.00203175 197.49655027h-63.91782716c-12.82979894 0-23.23233862 10.40253968-23.23233863 23.23233862v24.27259259l110.49808818 95.70336508V220.72888889h-0.11558377c0-12.82979894-10.40253968-23.23233862-23.23233862-23.23233862zM905.44716754 83.18419754s-34.90629982 56.86721693-89.11508994 100.32671603c152.68616579 13.98563668 127.83565432-133.26809171 127.83565432-133.2680917-134.07717813-10.28695591-132.92134039 102.29164021-131.072 127.83565432 20.92066314-20.92066314 49.70102293-62.64640564 92.35143562-94.89427865zM798.53217637 174.61096297c-19.64924162-16.52847972-40.56990476-43.45949912-51.203612-53.97762258 0 0 32.94137566 20.57391182 56.40488184 49.3542716 2.42725926-18.37782011 6.47269135-93.3916896-93.16052205-85.3008254 0 0-13.98563668 104.71889947 87.95925221 89.92417638z" fill="#5c8add" ></path></symbol><symbol id="icon-zhifeiji" viewBox="0 0 1167 1024"><path d="M41.201759 463.52493L1110.665064 30.117647c10.32605-4.159104 21.942857 0.860504 26.101961 11.043137 1.434174 3.728852 1.864426 7.744538 1.003921 11.616807L949.033691 978.823529c-2.151261 10.89972-12.764146 17.927171-23.663865 15.632493-2.72493-0.573669-5.306443-1.721008-7.601121-3.298599L634.80624 789.79944l-163.065546 133.951821c-16.492997 13.62465-40.87395 11.186555-54.498599-5.306443-3.011765-3.728852-5.306443-7.887955-6.884034-12.477311l-102.973669-313.080112-265.178712-91.787115c-10.469468-3.585434-16.062745-15.058824-12.333893-25.528291 1.864426-5.44986 6.023529-9.895798 11.329972-12.047059z" fill="#FCFDFC" ></path><path d="M929.385512 1023.569748c-3.155182 0-6.453782-0.286835-9.752381-1.003922-6.740616-1.434174-12.907563-4.015686-18.50084-8.031372L635.953579 825.940616l-146.142297 120.040336c-13.911485 11.473389-31.408403 16.779832-49.335574 15.058824-17.927171-1.721008-34.133333-10.32605-45.463305-24.237535-5.306443-6.453782-9.322129-13.768067-11.903642-21.79944l-98.527731-299.598879-251.697479-87.19776c-12.333894-4.302521-22.229692-13.05098-27.966386-24.811204s-6.453782-24.954622-2.151261-37.288515c4.589356-13.337815 14.771989-23.9507 27.82297-29.257143L1099.908761 3.585434c24.954622-10.039216 53.351261 2.007843 63.533894 26.819048 3.585434 8.891877 4.445938 18.644258 2.581513 28.109804L977.143495 984.560224c-4.732773 23.090196-25.098039 39.009524-47.757983 39.009524z m-294.579272-233.770308l282.962465 201.357983c2.294678 1.577591 4.87619 2.72493 7.601121 3.298599 10.89972 2.151261 21.512605-4.87619 23.663865-15.632493L1137.914364 52.777591c0.860504-3.872269 0.430252-7.887955-1.003922-11.616807-4.159104-10.32605-15.919328-15.202241-26.101961-11.043137L41.201759 463.52493c-5.306443 2.151261-9.465546 6.597199-11.47339 12.047059-1.721008 5.019608-1.434174 10.469468 0.860505 15.345658 2.294678 4.87619 6.453782 8.461625 11.473389 10.182633l265.178711 91.787115L410.214644 905.967507c1.434174 4.589356 3.872269 8.748459 6.884033 12.477311 6.597199 8.031373 15.919328 12.907563 26.101961 13.911485 10.32605 1.003922 20.365266-2.007843 28.396639-8.605042l163.208963-133.951821z" fill="#4A4A4A" ></path><path d="M307.097557 592.743978l105.698599 316.091876c6.310364 18.787675 26.532213 28.970308 45.319888 22.659944 4.159104-1.434174 7.887955-3.442017 11.186555-6.166946l164.786555-133.951821-165.360224-118.892997c297.017367-287.982073 447.462185-433.980952 451.191036-437.853222 0.573669-0.573669 2.581513-3.442017 0.430252-7.027451-1.290756-1.577591-3.298599-3.298599-7.027451-2.15126-202.218487 120.327171-404.293557 242.805602-606.22521 367.291877z" fill="#CAE0EE" ></path><path d="M446.786072 934.794398c-5.736695 0-11.329972-1.290756-16.636414-3.872269-8.891877-4.445938-15.632493-12.047059-18.787675-21.512605L305.376549 592.313725l1.003921-0.573669C507.308201 467.684034 711.391114 344.058263 912.60568 224.161345l0.286835-0.143418c3.585434-1.147339 6.310364-0.286835 8.605042 2.581513l0.143417 0.143417c2.438095 4.015686 0.573669 7.457703-0.573669 8.74846-3.872269 4.015686-155.177591 150.87507-450.043698 436.705882l165.503642 119.036414-166.220728 135.09916c-3.442017 2.868347-7.457703 5.019608-11.760225 6.453782-3.728852 1.290756-7.744538 2.007843-11.760224 2.007843z m-137.967507-341.333334l105.268348 314.944538c2.868347 8.748459 9.035294 15.77591 17.210084 19.935014 8.17479 4.159104 17.496919 4.732773 26.245378 1.864426 3.872269-1.290756 7.60112-3.298599 10.756302-5.880112l163.352381-132.804482L466.434252 672.627451l1.290756-1.147339C763.308201 384.932213 915.043775 237.642577 918.772627 233.626891c0 0 2.007843-2.294678 0.286835-5.306443-1.003922-1.290756-2.438095-2.438095-5.306443-1.577591-200.784314 119.610084-404.293557 242.94902-604.934454 366.718207z" fill="#CAE0EE" ></path><path d="M460.840974 924.898599l7.457703-253.561904 165.933894 119.896918-168.658824 135.959664c-1.290756 1.003922-3.011765 0.860504-4.015686-0.430252-0.430252-0.430252-0.717087-1.147339-0.717087-1.864426z" fill="#94C3E2" ></path><path d="M463.709322 929.344538c-1.290756 0-2.438095-0.573669-3.2986-1.577591-0.573669-0.860504-1.003922-1.864426-1.003921-2.868348l7.60112-256.286834 169.519328 122.621848-1.434174 1.147339-168.658823 135.959664c-0.860504 0.717087-1.721008 1.003922-2.72493 1.003922z m6.023529-255.282913l-7.457703 250.836974c0 0.286835 0.143417 0.717087 0.286835 1.003922 0.430252 0.573669 1.434174 0.717087 2.007843 0.286835l167.22465-134.812325-162.061625-117.315406z" fill="#94C3E2" ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1079 1024"><path d="M695.355535 432.666896c-0.553495-1.10699-0.885592-2.186305-1.383737-3.265619-0.193723-0.193723-0.193723-0.359772-0.359771-0.719543-12.508983-26.318678-39.436506-43.366319-69.325226-41.013966-39.076734 3.265619-68.439634 39.021384-65.312388 79.841627 0.857917 10.516401 3.653066 20.147211 7.998 28.83708 19.78744 46.659613 11.097571 103.448181-25.377737 141.750022l-191.094085 199.950001a118.088119 118.088119 0 0 1-171.998513 0c-47.434506-49.537786-47.434506-130.098956 0-179.636742l71.234782-74.389703-0.52582-0.553494a75.911814 75.911814 0 0 0 24.326097-61.880721c-3.127246-40.820243-37.3609-71.51153-76.437634-68.24591a69.463599 69.463599 0 0 0-46.908685 23.966325l-0.166049-0.193723-72.618519 75.856464c-103.226783 107.793115-103.226783 282.36538 0 390.158495 103.171433 107.793115 270.299193 107.793115 373.498301 0l191.619904-200.1714c80.256748-83.992838 97.636485-208.307773 52.83108-310.289193z" fill="#5c8add" ></path><path d="M1002.047012 80.865592c-103.226783-107.82079-270.382217-107.82079-373.581325 0l-191.619905 200.199075c-80.284423 83.854464-97.66416 208.197074-52.997128 310.233843 0.52582 1.079315 0.857917 2.15863 1.383737 3.26562 0.166048 0.166048 0.166048 0.359772 0.332097 0.719543 12.536658 26.291004 39.46418 43.366319 69.3529 41.013966 39.076734-3.265619 68.439634-39.021384 65.312388-79.869302a78.679288 78.679288 0 0 0-7.998-28.864755c-19.78744-46.631938-11.097571-103.448181 25.377737-141.750022l191.287808-199.839302a118.088119 118.088119 0 0 1 172.026188 0c47.434506 49.537786 47.434506 130.126631 0 179.692091l-71.234782 74.417378 0.52582 0.553495a75.939489 75.939489 0 0 0-24.353772 61.88072c3.15492 40.847917 37.3609 71.51153 76.465309 68.245911a69.463599 69.463599 0 0 0 46.908685-23.938651l0.166049 0.166048 72.646194-75.856464c103.03306-107.82079 103.03306-282.642127 0-390.269194z" fill="#5c8add" ></path></symbol><symbol id="icon-liaotian" viewBox="0 0 1171 1024"><path d="M1068.71699 0.243751H102.193768C46.228437 0.243751 0.500666 45.045267 0.500666 99.74309v696.251622c0 54.697824 45.727771 99.450589 101.693102 99.450589h329.113198l120.851966 114.465677a48.652788 48.652788 0 0 0 66.641644 0l120.851966-114.465677h329.064448c55.965331 0 101.741852-44.752765 101.741852-99.450589V99.74309C1170.458842 45.045267 1124.682321 0.243751 1068.71699 0.243751z m-439.776354 596.849784h-370.989696c-27.933915 0-50.846551-22.425133-50.846551-49.774045 0-27.348912 22.912636-49.725294 50.846551-49.725294h370.989696c27.933915 0 50.846551 22.376382 50.846551 49.725294 0 27.348912-22.912636 49.774045-50.846551 49.774045z m287.18795-211.381252H254.782171a50.456549 50.456549 0 0 1-50.846551-49.725294c0-27.397662 22.912636-49.774045 50.846551-49.774045h661.346415c27.933915 0 50.846551 22.376382 50.846551 49.774045 0 27.348912-22.912636 49.725294-50.846551 49.725294z" fill="#5C8ADD" ></path></symbol><symbol id="icon-xinfeng" viewBox="0 0 1400 1024"><path d="M1301.63733163 214.78520234a207.81921797 207.81921797 0 0 1 7.02423018 52.42036465v489.73590176a205.10753818 205.10753818 0 0 1-205.05853125 205.05853125H283.05853124A205.15654424 205.15654424 0 0 1 77.99999999 756.79444971V267.20556699a201.36672685 201.36672685 0 0 1 7.02423106-52.42036465L586.24393329 562.1905874c69.44187217 51.96297217 146.36536612 49.13694404 214.1736961 0zM1103.60303056 62.0000167H283.05853124A204.50312753 204.50312753 0 0 0 106.37462518 163.41030547l489.71956641 335.75823018c62.43397646 50.77048623 127.85733457 50.31309463 194.62019765 0L1280.28693749 163.41030547A204.68281729 204.68281729 0 0 0 1103.60303056 62.0000167z m0 0" fill="#5c8add" ></path></symbol><symbol id="icon-QQ1" viewBox="0 0 1024 1024"><path d="M0 512a512 512 0 1 0 1024 0A512 512 0 1 0 0 512z" fill="#18ACFC" ></path><path d="M500.113 228.39c118.396-1.518 178.924 61.004 201 156 3.497 15.048 0.15 34.807 0 50 27.143 5.682 33.087 60.106 10 75v1h1c8.26 14.33 19.04 28.125 26 44 7.332 16.723 9.306 35.16 14 55 4.024 17.01-2.287 51.505-10 57-0.771 0.683-2.231 1.312-3 2-14.601-3.016-30.377-16.865-38-27-3.065-4.074-5.275-9.672-10-12-0.395 21.568-12.503 41.15-22 55-3.514 5.123-14.073 13.217-14 18 3.691 2.836 8.305 2.956 13 5 10.513 4.577 25.449 13.168 32 22 2.334 3.146 5.548 7.555 7 11 16.193 38.414-36.527 48.314-63 54-27.185 5.839-77.818-10.224-92-19-8.749-5.414-16.863-18.573-29-19-3.666 2.389-14.438 1.132-20 1-16.829 32.804-101.913 47.868-148 31-14.061-5.146-43.398-17.695-38-40 4.437-18.327 19.947-29.224 35-37 5.759-2.975 18.915-4.419 22-10-13.141-8.988-24.521-28.659-31-44-3.412-8.077-4.193-25.775-9-32-7.789 12.245-32.097 36.91-52 33-3.071-4.553-7.213-9.097-9-15-4.792-15.835-1.81-40.379 2-54 8.117-29.02 16.965-50.623 32-72 4.672-6.643 11.425-12.135 16-19-8.945-9.733-6.951-37.536-1-49 4.002-7.709 9.701-7.413 10-20-1.92-3.022-0.071-8.604-1-13-4.383-20.75 3.273-47.552 9-63 19.8-53.421 53.712-90.466 105-112 11.986-5.033 25.833-7.783 39-11 5.322-1.3 11.969 0.518 16-2z" fill="#FFFFFF" ></path></symbol><symbol id="icon-rss" viewBox="0 0 1024 1024"><path d="M749.61196492 908.06119793C749.61196492 560.41848146 463.58151854 274.36328126 115.93880207 274.36328126V115.93880207c434.50388795 0 792.12239584 357.61850789 792.12239586 792.12239586zM224.55858562 690.72261555a108.91682943 108.91682943 0 0 1 108.69404499 108.74355267C333.25263061 859.29616292 284.24005737 908.06119793 224.31104736 908.06119793 164.48105265 908.06119793 115.96355592 859.41993206 115.96355592 799.46616822s48.69077351-108.71879883 108.61978351-108.74355267zM641.01693522 908.06119793h-153.96879069c0-203.60020956-167.50913289-371.13409627-371.10934246-371.13409629v-153.96879068c288.03550619 0 525.07813313 237.11688843 525.07813315 525.10288697z" fill="#FFA500" ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M583.60666667 972h-68.08c-8.43333333 0-15.33333333-6.9-15.33333334-15.33333333V609.52c0-8.43333333 6.9-15.33333333 15.33333334-15.33333333h68.08c8.43333333 0 15.33333333 6.9 15.33333333 15.33333333V956.66666667c0 8.43333333-6.9 15.33333333-15.33333333 15.33333333z" fill="#629FF9" ></path><path d="M294.42 167c-113.62 0-205.77333333 92-205.77333333 205.31333333v336.72h411.39333333V372.31333333c0.15333333-113.31333333-92-205.31333333-205.62-205.31333333z" fill="#2166CC" ></path><path d="M519.97333333 627H216.98666667c-25.45333333 0-46-20.54666667-46-46V393.78c0-25.45333333 20.54666667-46 46-46h302.98666666c25.45333333 0 46 20.54666667 46 46V581c0 25.45333333-20.54666667 46-46 46z" fill="#D2E4FF" ></path><path d="M565.97333333 397a49.22 49.22 0 0 0-49.37333333-49.22H220.36c-27.29333333 0-49.37333333 22.08-49.37333333 49.22v10.27333333l179.4 94.60666667c11.34666667 5.98 24.84 5.98 36.18666666 0l179.4-94.60666667v-10.27333333z" fill="#FFFFFF" ></path><path d="M730.5 167h-427.8v0.46c109.78666667 4.29333333 197.49333333 94.3 197.49333333 205.00666667v336.72h411.39333334c27.29333333 0 49.37333333-22.08 49.37333333-49.22V397c0-126.96-103.19333333-230-230.46-230z" fill="#4E8DF6" ></path><path d="M845.80666667 52H681.12666667c-9.04666667 0-16.40666667 7.36-16.40666667 16.40666667v336.72a24.67133333 24.67133333 0 1 0 49.37333333 0V134.18666667h131.71333334c9.04666667 0 16.40666667-7.36 16.40666666-16.40666667V68.40666667c0-9.04666667-7.36-16.40666667-16.40666666-16.40666667z" fill="#2166CC" ></path><path d="M896.25333333 659.81333333h-35.11333333c-8.43333333 0-15.33333333-6.9-15.33333333-15.33333333v-35.11333333c0-8.43333333 6.9-15.33333333 15.33333333-15.33333334h35.11333333c8.43333333 0 15.33333333 6.9 15.33333334 15.33333334v35.11333333c0 8.58666667-6.9 15.33333333-15.33333334 15.33333333z" fill="#FFFFFF" ></path><path d="M88.8 709.18666667l-24.22666667 131.40666666c-9.66 54.43333333 26.83333333 98.59333333 81.26666667 98.59333334h213.9c54.58666667 0 106.56666667-44.16 116.22666667-98.59333334l23.15333333-131.40666666H88.8z" fill="#2974CE" ></path></symbol><symbol id="icon-gitHub" viewBox="0 0 1049 1024"><path d="M523.6581816 52C262.83923907 52 52 262.8401375 52 523.6581816c0 208.49703047 135.09433812 384.97758117 322.50789391 447.44906532 23.42658172 4.68531653 32.01647887-10.15136894 32.01647796-22.64584583 0-10.93210574-0.78163433-48.41463703-0.78163433-87.45953855-131.18885996 28.11189824-158.5200223-56.22379738-158.52002231-56.22379739-21.08437312-54.66232469-52.3201152-68.71827336-52.3201152-68.71827335-42.94858371-28.89353348 3.12384382-28.89353348 3.12384384-28.89353348 47.63479867 3.12384382 72.62285398 48.41643391 72.62285398 48.4164339 42.16784782 71.84121875 110.10538527 51.53758242 137.43654672 39.04400399 3.90457972-30.45500618 16.3990566-51.5393793 29.67427028-63.25222094-104.64023039-10.93300418-214.74561566-51.53848086-214.74561657-232.70524742 0-51.53848086 18.74126609-93.70632867 48.4164339-126.50444187-4.68621496-11.71284164-21.08527156-60.12837711 4.6844181-124.94207075 0 0 39.82563922-12.49447688 129.62738726 48.41463704 37.48253129-10.15136894 78.08980484-15.61742227 117.91454562-15.61742137s80.43201433 5.46605242 117.91454473 15.61742137c89.80264648-60.90911391 129.62828571-48.41463703 129.62828571-48.41463704 25.76879122 64.81369363 9.37063305 113.22922911 4.68531651 124.94207075 30.45410773 32.79721477 48.41463703 74.96506258 48.41463703 126.50444187 0 181.16676656-110.10538527 220.99150644-215.52545401 232.70524742 17.1797934 14.83668547 32.01647887 42.94858371 32.01647886 87.45953946 0 63.25222094-0.78163433 114.009965-0.78163523 129.62738636 0 12.49447688 8.59079468 27.33116234 32.01737731 22.64584583 187.41265734-62.4705866 322.50699547-238.95203574 322.50699546-447.44996375C995.31636231 262.8401375 783.69369203 52 523.6581816 52z" fill="#663399" ></path><path d="M230.82365863 729.03136735c-0.7807359 2.34310703-4.68531653 3.12384382-7.80916035 1.56237113s-5.46605242-4.68531653-3.90368129-7.02842356c0.7807359-2.34220859 4.68531653-3.12384382 7.80826192-1.56147269s4.68531653 4.68531653 3.90457972 7.02752512z m18.7412661 21.08437312c-2.34220859 2.34220859-7.02752512 0.78163433-9.37063305-2.34310703-3.12294539-3.12294539-3.90457972-7.80826192-1.5614727-10.15136894 2.34220859-2.34220859 6.24678922-0.7807359 9.37063305 2.34310702 3.12384382 3.90457972 3.90457972 8.58899782 1.5614727 10.15136895zM268.30618992 777.44690281c-3.12294539 2.34220859-7.80826192 0-10.15136895-3.90457972-3.12384382-3.90457972-3.12384382-9.37063305 0-10.93210574 3.12384382-2.34310703 7.80916035 0 10.15226739 3.90457972 3.12294539 3.90368129 3.12294539 8.58899782 0 10.93210574z m25.76968965 26.55042555c-2.34220859 3.12294539-7.80916035 2.34220859-12.49447688-1.56237113-3.90457972-3.90368129-5.46605242-9.37063305-2.34220859-11.71284164 2.34220859-3.12384382 7.80826192-2.34310703 12.49447687 1.56147269 3.90368129 3.12384382 4.68531653 8.58989625 2.3422086 11.71374008z m35.1403227 14.83668637c-0.78163433 3.90457972-6.24768766 5.46605242-11.71374008 3.90457972-5.46605242-1.5614727-8.58899782-6.24768766-7.80916036-9.37063305 0.78163433-3.90457972 6.24768766-5.46605242 11.71374009-3.90457972 5.46605242 1.5614727 8.58899782 5.46605242 7.80916035 9.37063305z m38.26416562 3.12384382c0 3.90457972-4.68621496 7.02752512-10.15226738 7.02752512-5.46605242 0-10.15226738-3.12294539-10.15226739-7.02752512s4.68621496-7.02842356 10.15226739-7.02842445c5.46605242 0 10.15226738 3.12384382 10.15226738 7.02842445z m35.92016106-6.24768766c0.78163433 3.90457972-3.12384382 7.80916035-8.58899872 8.58989625-5.46695086 0.78163433-10.15226738-1.5614727-10.93390172-5.46605241-0.77983747-3.90457972 3.12384382-7.80916035 8.5907947-8.58899872 5.46605242-0.78163433 10.15136894 1.56057426 10.93210574 5.46515488z m0 0" fill="#663399" ></path></symbol><symbol id="icon-bilibili" viewBox="0 0 1024 1024"><path d="M832.61667555 181.33447111h-164.32545185l74.45617778-74.45617778c12.84020148-12.84020148 12.84020148-30.8140563 0-43.65425778-12.84020148-12.84020148-30.8140563-12.84020148-43.65425778 0L573.2882963 189.04101925H450.04420741L324.2272237 63.23617185c-10.26730667-12.84020148-25.68040297-15.40096-41.08136295-7.70654815-2.57289482 0-2.57289482 2.57289482-5.13365334 5.13365333-12.84020148 12.84020148-12.84020148 30.8140563 0 43.65425779l77.02907259 77.02907259h-164.32545185c-89.86927408 0-164.32545185 74.45617778-164.32545185 164.32545184v408.24073483c0 87.29637925 74.45617778 161.75255703 164.32545185 161.75255703h25.68040296c0 30.8140563 25.68040297 53.92156445 53.92156444 53.92156444s53.92156445-25.68040297 53.92156445-53.92156444H704.23893333c2.57289482 30.8140563 28.24116148 53.92156445 59.05521778 51.34866964 28.24116148-2.57289482 48.78791111-23.10750815 51.34866964-51.34866964h20.53461333c89.86927408 0 164.32545185-74.45617778 164.32545184-164.32545186V343.09916445c-2.56075852-89.86927408-77.02907259-161.76469333-166.88621037-161.76469334z m-5.13365333 634.19429926H200.99527111c-33.37481482 0-59.05521778-28.24116148-61.61597629-61.61597629l-2.57289482-415.94728297c0-33.37481482 28.24116148-61.6159763 61.6159763-61.61597629h626.48775111c33.37481482 0 59.05521778 28.24116148 61.61597629 61.61597629l2.57289482 415.94728297c-2.57289482 35.93557333-28.24116148 61.6159763-61.6159763 61.61597629z" fill="#ff7299" ></path><path d="M403.82919111 417.55534222l15.40096 77.0290726-205.40681481 38.50846815-15.40096-77.0290726 205.40681481-38.50846815z m197.70026667 77.0290726l15.40096-77.0290726 205.40681481 38.50846815-15.40096 77.0290726-205.40681481-38.50846815z m41.08136297 161.75255703c0 2.57289482 0 7.70654815-2.57289483 10.26730667-12.84020148 28.24116148-41.08136297 46.2150163-74.45617777 48.78791111-20.53461333 0-41.08136297-10.26730667-53.92156445-25.68040296-15.40096 15.40096-33.37481482 25.68040297-53.92156445 25.68040296-30.8140563-2.57289482-59.05521778-20.53461333-74.45617777-48.78791111 0-2.57289482-2.57289482-5.13365333-2.57289481-10.26730667 0-10.26730667 7.70654815-17.97385482 17.97385481-20.53461333h2.57289482c7.70654815 0 12.84020148 2.57289482 15.40096 10.26730666 0 0 20.53461333 28.24116148 38.50846815 28.24116149 35.94770963 0 35.94770963-30.8140563 56.48232296-53.92156445 23.10750815 25.68040297 23.10750815 53.92156445 56.48232296 53.92156445 23.10750815 0 38.50846815-28.24116148 38.50846815-28.24116149 2.57289482-5.13365333 10.26730667-10.26730667 15.40096-10.26730666 10.26730667-2.57289482 17.97385482 5.13365333 20.53461333 15.40096v5.13365333h0.0364089z" fill="#ff7299" ></path></symbol></svg>',o=(o=document.getElementsByTagName("script"))[o.length-1].getAttribute("data-injectcss"),p=function(c,l){l.parentNode.insertBefore(c,l)};if(o&&!c.__iconfont__svg__cssinject__){c.__iconfont__svg__cssinject__=!0;try{document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>")}catch(c){console&&console.log(c)}}function d(){i||(i=!0,a())}function m(){try{t.documentElement.doScroll("left")}catch(c){return void setTimeout(m,50)}d()}l=function(){var c,l=document.createElement("div");l.innerHTML=v,v=null,(l=l.getElementsByTagName("svg")[0])&&(l.setAttribute("aria-hidden","true"),l.style.position="absolute",l.style.width=0,l.style.height=0,l.style.overflow="hidden",l=l,(c=document.body).firstChild?p(l,c.firstChild):c.appendChild(l))},document.addEventListener?~["complete","loaded","interactive"].indexOf(document.readyState)?setTimeout(l,0):(h=function(){document.removeEventListener("DOMContentLoaded",h,!1),l()},document.addEventListener("DOMContentLoaded",h,!1)):document.attachEvent&&(a=l,t=c.document,i=!1,m(),t.onreadystatechange=function(){"complete"==t.readyState&&(t.onreadystatechange=null,d())})}(window);]]></content>
      
    </entry>
    
    
  
</search>
